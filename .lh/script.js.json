{
    "sourceFile": "script.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 318,
            "patches": [
                {
                    "date": 1688667602706,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1688669499014,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,3 @@\n+// Generate Password Function \n+// Password Function May Take in \n+    //\n\\ No newline at end of file\n"
                },
                {
                    "date": 1688669562410,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,3 +1,1 @@\n-// Generate Password Function \n-// Password Function May Take in \n-    //\n\\ No newline at end of file\n+// Dynamic UI \n"
                },
                {
                    "date": 1688670062402,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,1 +1,2 @@\n // Dynamic UI \n+const slider = document.querySelector(\"#character-\")\n\\ No newline at end of file\n"
                },
                {
                    "date": 1688670068414,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,2 +1,2 @@\n // Dynamic UI \n-const slider = document.querySelector(\"#character-\")\n\\ No newline at end of file\n+const slider = document.querySelector(\"#character-length\")\n\\ No newline at end of file\n"
                },
                {
                    "date": 1688670088013,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,2 +1,6 @@\n // Dynamic UI \n-const slider = document.querySelector(\"#character-length\")\n\\ No newline at end of file\n+const slider = document.querySelector(\"#character-length\");\n+\n+function progressSlider() {\n+    \n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1688670097166,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n // Dynamic UI \n const slider = document.querySelector(\"#character-length\");\n \n function progressSlider() {\n-    \n+    const sliderValue = \n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1688670103939,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n // Dynamic UI \n const slider = document.querySelector(\"#character-length\");\n \n function progressSlider() {\n-    const sliderValue = \n+    const sliderValue = slider.\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1688670109745,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n // Dynamic UI \n const slider = document.querySelector(\"#character-length\");\n \n function progressSlider() {\n-    const sliderValue = slider.\n+    const sliderValue = slider.value; \n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1688670123092,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,5 +2,6 @@\n const slider = document.querySelector(\"#character-length\");\n \n function progressSlider() {\n     const sliderValue = slider.value; \n+    slider.style.background = \n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1688670131112,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,6 +2,6 @@\n const slider = document.querySelector(\"#character-length\");\n \n function progressSlider() {\n     const sliderValue = slider.value; \n-    slider.style.background = \n+    slider.style.background = `linear-gradient(to right, #f50 ${sliderValue}%, #ccc ${sliderValue}%)`\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1688670185351,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,5 +3,7 @@\n \n function progressSlider() {\n     const sliderValue = slider.value; \n     slider.style.background = `linear-gradient(to right, #f50 ${sliderValue}%, #ccc ${sliderValue}%)`\n-}\n\\ No newline at end of file\n+}\n+\n+progressSlider(); \n\\ No newline at end of file\n"
                },
                {
                    "date": 1688670456941,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,5 +5,9 @@\n     const sliderValue = slider.value; \n     slider.style.background = `linear-gradient(to right, #f50 ${sliderValue}%, #ccc ${sliderValue}%)`\n }\n \n-progressSlider(); \n\\ No newline at end of file\n+\n+slider.addEventListener(\"click\", () => {\n+    progressSlider(); \n+})\n+\n"
                },
                {
                    "date": 1688670469154,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,8 +6,9 @@\n     slider.style.background = `linear-gradient(to right, #f50 ${sliderValue}%, #ccc ${sliderValue}%)`\n }\n \n \n+progressSlider(); \n slider.addEventListener(\"click\", () => {\n     progressSlider(); \n })\n \n"
                },
                {
                    "date": 1688670513356,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,8 +7,8 @@\n }\n \n \n progressSlider(); \n-slider.addEventListener(\"click\", () => {\n+slider.addEventListener(\"input\", () => {\n     progressSlider(); \n })\n \n"
                },
                {
                    "date": 1688670525009,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n     slider.style.background = `linear-gradient(to right, #f50 ${sliderValue}%, #ccc ${sliderValue}%)`\n }\n \n \n-progressSlider(); \n+// progressSlider(); \n slider.addEventListener(\"input\", () => {\n     progressSlider(); \n })\n \n"
                },
                {
                    "date": 1688670533197,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n     slider.style.background = `linear-gradient(to right, #f50 ${sliderValue}%, #ccc ${sliderValue}%)`\n }\n \n \n-// progressSlider(); \n+progressSlider(); \n slider.addEventListener(\"input\", () => {\n     progressSlider(); \n })\n \n"
                },
                {
                    "date": 1688670545499,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n const slider = document.querySelector(\"#character-length\");\n \n function progressSlider() {\n     const sliderValue = slider.value; \n-    slider.style.background = `linear-gradient(to right, #f50 ${sliderValue}%, #ccc ${sliderValue}%)`\n+    slider.style.background = `linear-gradient(to right, # ${sliderValue}%, #ccc ${sliderValue}%)`\n }\n \n \n progressSlider(); \n"
                },
                {
                    "date": 1688670580088,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n const slider = document.querySelector(\"#character-length\");\n \n function progressSlider() {\n     const sliderValue = slider.value; \n-    slider.style.background = `linear-gradient(to right, # ${sliderValue}%, #ccc ${sliderValue}%)`\n+    slider.style.background = `linear-gradient(to right, # ${sliderValue}%, # ${sliderValue}%)`\n }\n \n \n progressSlider(); \n"
                },
                {
                    "date": 1688670609741,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n const slider = document.querySelector(\"#character-length\");\n \n function progressSlider() {\n     const sliderValue = slider.value; \n-    slider.style.background = `linear-gradient(to right, # ${sliderValue}%, # ${sliderValue}%)`\n+    slider.style.background = `linear-gradient(to right, var(--neon-green) ${sliderValue}%, #ccc ${sliderValue}%)`\n }\n \n \n progressSlider(); \n"
                },
                {
                    "date": 1688670650092,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n const slider = document.querySelector(\"#character-length\");\n \n function progressSlider() {\n     const sliderValue = slider.value; \n-    slider.style.background = `linear-gradient(to right, var(--neon-green) ${sliderValue}%, #ccc ${sliderValue}%)`\n+    slider.style.background = `linear-gradient(to right, var(--very-dark-grey) ${sliderValue}%, var(--neon-green) ${sliderValue}%)`\n }\n \n \n progressSlider(); \n"
                },
                {
                    "date": 1688670689622,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n const slider = document.querySelector(\"#character-length\");\n \n function progressSlider() {\n     const sliderValue = slider.value; \n-    slider.style.background = `linear-gradient(to right, var(--very-dark-grey) ${sliderValue}%, var(--neon-green) ${sliderValue}%)`\n+    slider.style.background = `linear-gradient(to right, var(--neon-green) ${sliderValue}%, var(--very-dark-grey) ${sliderValue}%)`\n }\n \n \n progressSlider(); \n"
                },
                {
                    "date": 1688670738119,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,7 @@\n // Dynamic UI \n const slider = document.querySelector(\"#character-length\");\n+const \n \n function progressSlider() {\n     const sliderValue = slider.value; \n     slider.style.background = `linear-gradient(to right, var(--neon-green) ${sliderValue}%, var(--very-dark-grey) ${sliderValue}%)`\n"
                },
                {
                    "date": 1688670753376,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n // Dynamic UI \n const slider = document.querySelector(\"#character-length\");\n-const \n+const lengthLabel = \n \n function progressSlider() {\n     const sliderValue = slider.value; \n     slider.style.background = `linear-gradient(to right, var(--neon-green) ${sliderValue}%, var(--very-dark-grey) ${sliderValue}%)`\n"
                },
                {
                    "date": 1688670766413,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n // Dynamic UI \n const slider = document.querySelector(\"#character-length\");\n-const lengthLabel = \n+const lengthLabel = document.querySelector(\".lengthLabel\")\n \n function progressSlider() {\n     const sliderValue = slider.value; \n     slider.style.background = `linear-gradient(to right, var(--neon-green) ${sliderValue}%, var(--very-dark-grey) ${sliderValue}%)`\n"
                },
                {
                    "date": 1688670823228,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,15 @@\n+// Dynamic UI \n+const slider = document.querySelector(\"#character-length\");\n+const lengthLabel = document.querySelector(\".length-label\"); \n+\n+function progressSlider() {\n+    const sliderValue = slider.value; \n+    slider.style.background = `linear-gradient(to right, var(--neon-green) ${sliderValue}%, var(--very-dark-grey) ${sliderValue}%)`\n+}\n+\n+\n+progressSlider(); \n+slider.addEventListener(\"input\", () => {\n+    progressSlider(); \n+})\n+\n"
                },
                {
                    "date": 1688670844465,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,21 +6,10 @@\n     const sliderValue = slider.value; \n     slider.style.background = `linear-gradient(to right, var(--neon-green) ${sliderValue}%, var(--very-dark-grey) ${sliderValue}%)`\n }\n \n-\n-progressSlider(); \n-slider.addEventListener(\"input\", () => {\n-    progressSlider(); \n-})\n-\n-// Dynamic UI \n-const slider = document.querySelector(\"#character-length\");\n-const lengthLabel = document.querySelector(\".lengthLabel\")\n-\n-function progressSlider() {\n-    const sliderValue = slider.value; \n-    slider.style.background = `linear-gradient(to right, var(--neon-green) ${sliderValue}%, var(--very-dark-grey) ${sliderValue}%)`\n+function updateLengthLabel() {\n+    \n }\n \n \n progressSlider(); \n"
                },
                {
                    "date": 1688670853008,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n     slider.style.background = `linear-gradient(to right, var(--neon-green) ${sliderValue}%, var(--very-dark-grey) ${sliderValue}%)`\n }\n \n function updateLengthLabel() {\n-    \n+    lengthLabel.textContent = slider.value; \n }\n \n \n progressSlider(); \n"
                },
                {
                    "date": 1688670859704,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,6 +14,7 @@\n \n progressSlider(); \n slider.addEventListener(\"input\", () => {\n     progressSlider(); \n+    updateLengthLabel(); \n })\n \n"
                },
                {
                    "date": 1688670892682,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,4 +17,5 @@\n     progressSlider(); \n     updateLengthLabel(); \n })\n \n+\n"
                },
                {
                    "date": 1688670990801,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,5 +17,7 @@\n     progressSlider(); \n     updateLengthLabel(); \n })\n \n+console.log(slider.value)\n \n+\n"
                },
                {
                    "date": 1688677242515,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,8 @@\n+// Generate Random Password() \n+// Copy Password \n+// Update UI for Strength State\n+\n // Dynamic UI \n const slider = document.querySelector(\"#character-length\");\n const lengthLabel = document.querySelector(\".length-label\"); \n \n@@ -17,7 +21,7 @@\n     progressSlider(); \n     updateLengthLabel(); \n })\n \n-console.log(slider.value)\n+console.log(slider.value);\n \n \n"
                },
                {
                    "date": 1688677910829,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,13 @@\n function updateLengthLabel() {\n     lengthLabel.textContent = slider.value; \n }\n \n+function strengthState() {\n+    \n+}\n \n+\n progressSlider(); \n slider.addEventListener(\"input\", () => {\n     progressSlider(); \n     updateLengthLabel(); \n"
                },
                {
                    "date": 1688677994979,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,34 @@\n+// Generate Random Password() \n+// Copy Password \n+// Update UI for Strength State\n+\n+// Dynamic UI \n+const slider = document.querySelector(\"#character-length\");\n+const lengthLabel = document.querySelector(\".length-label\"); \n+\n+function progressSlider() {\n+    const sliderValue = slider.value; \n+    slider.style.background = `linear-gradient(to right, var(--neon-green) ${sliderValue}%, var(--very-dark-grey) ${sliderValue}%)`\n+}\n+\n+function updateLengthLabel() {\n+    lengthLabel.textContent = slider.value; \n+}\n+\n+function strengthState() {\n+    // To Weak Password 1 - 5\n+    // Weak Password -  5 - 10 \n+    // Medium - 10 - 50 \n+    // Strng - 50 - 100 \n+}\n+\n+\n+progressSlider(); \n+slider.addEventListener(\"input\", () => {\n+    progressSlider(); \n+    updateLengthLabel(); \n+})\n+\n+console.log(slider.value);\n+\n+\n"
                },
                {
                    "date": 1688678022769,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n function strengthState() {\n     // To Weak Password 1 - 5\n     // Weak Password -  5 - 10 \n     // Medium - 10 - 50 \n-    // Strng - 50 - 100 \n+    // Strong - 50 - 100 \n }\n \n \n progressSlider(); \n@@ -31,35 +31,4 @@\n \n console.log(slider.value);\n \n \n-// Generate Random Password() \n-// Copy Password \n-// Update UI for Strength State\n-\n-// Dynamic UI \n-const slider = document.querySelector(\"#character-length\");\n-const lengthLabel = document.querySelector(\".length-label\"); \n-\n-function progressSlider() {\n-    const sliderValue = slider.value; \n-    slider.style.background = `linear-gradient(to right, var(--neon-green) ${sliderValue}%, var(--very-dark-grey) ${sliderValue}%)`\n-}\n-\n-function updateLengthLabel() {\n-    lengthLabel.textContent = slider.value; \n-}\n-\n-function strengthState() {\n-    \n-}\n-\n-\n-progressSlider(); \n-slider.addEventListener(\"input\", () => {\n-    progressSlider(); \n-    updateLengthLabel(); \n-})\n-\n-console.log(slider.value);\n-\n-\n"
                },
                {
                    "date": 1688678041754,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,8 +19,9 @@\n     // To Weak Password 1 - 5\n     // Weak Password -  5 - 10 \n     // Medium - 10 - 50 \n     // Strong - 50 - 100 \n+    \n }\n \n \n progressSlider(); \n"
                },
                {
                    "date": 1688678070871,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,8 +4,9 @@\n \n // Dynamic UI \n const slider = document.querySelector(\"#character-length\");\n const lengthLabel = document.querySelector(\".length-label\"); \n+const strengthLabel = document.querySelector(\"strength-state h2\")\n \n function progressSlider() {\n     const sliderValue = slider.value; \n     slider.style.background = `linear-gradient(to right, var(--neon-green) ${sliderValue}%, var(--very-dark-grey) ${sliderValue}%)`\n@@ -19,9 +20,9 @@\n     // To Weak Password 1 - 5\n     // Weak Password -  5 - 10 \n     // Medium - 10 - 50 \n     // Strong - 50 - 100 \n-    \n+\n }\n \n \n progressSlider(); \n"
                },
                {
                    "date": 1688678086404,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n \n // Dynamic UI \n const slider = document.querySelector(\"#character-length\");\n const lengthLabel = document.querySelector(\".length-label\"); \n-const strengthLabel = document.querySelector(\"strength-state h2\")\n+const strengthLabel = document.querySelector(\".strength-state h2\"); \n \n function progressSlider() {\n     const sliderValue = slider.value; \n     slider.style.background = `linear-gradient(to right, var(--neon-green) ${sliderValue}%, var(--very-dark-grey) ${sliderValue}%)`\n"
                },
                {
                    "date": 1688678325127,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,8 +17,9 @@\n }\n \n function strengthState() {\n     // To Weak Password 1 - 5\n+    \n     // Weak Password -  5 - 10 \n     // Medium - 10 - 50 \n     // Strong - 50 - 100 \n \n"
                },
                {
                    "date": 1688679442421,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,11 +17,13 @@\n }\n \n function strengthState() {\n     // To Weak Password 1 - 5\n-    \n-    // Weak Password -  5 - 10 \n+\n+    // Weak Password  5 - 10 \n+\n     // Medium - 10 - 50 \n+\n     // Strong - 50 - 100 \n \n }\n \n"
                },
                {
                    "date": 1688679696495,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n }\n \n function strengthState() {\n     // To Weak Password 1 - 5\n-\n+    \n     // Weak Password  5 - 10 \n \n     // Medium - 10 - 50 \n \n"
                },
                {
                    "date": 1688679817578,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,11 +15,11 @@\n function updateLengthLabel() {\n     lengthLabel.textContent = slider.value; \n }\n \n-function strengthState() {\n+function strengthState(value) {\n     // To Weak Password 1 - 5\n-    \n+\n     // Weak Password  5 - 10 \n \n     // Medium - 10 - 50 \n \n"
                },
                {
                    "date": 1688679824775,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,8 +17,9 @@\n }\n \n function strengthState(value) {\n     // To Weak Password 1 - 5\n+    if(value )\n \n     // Weak Password  5 - 10 \n \n     // Medium - 10 - 50 \n"
                },
                {
                    "date": 1688679832838,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,11 @@\n }\n \n function strengthState(value) {\n     // To Weak Password 1 - 5\n-    if(value )\n+    if(value < 5) {\n+        console\n+    }\n \n     // Weak Password  5 - 10 \n \n     // Medium - 10 - 50 \n"
                },
                {
                    "date": 1688679841144,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,8 @@\n     // To Weak Password 1 - 5\n     if(value < 5) {\n         console\n     }\n-\n     // Weak Password  5 - 10 \n \n     // Medium - 10 - 50 \n \n"
                },
                {
                    "date": 1688679856231,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n \n function strengthState(value) {\n     // To Weak Password 1 - 5\n     if(value < 5) {\n-        console\n+        lengthLabel\n     }\n     // Weak Password  5 - 10 \n \n     // Medium - 10 - 50 \n"
                },
                {
                    "date": 1688679879049,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n \n function strengthState(value) {\n     // To Weak Password 1 - 5\n     if(value < 5) {\n-        lengthLabel\n+        lengthLabel.textContent = \"WEAK\"\n     }\n     // Weak Password  5 - 10 \n \n     // Medium - 10 - 50 \n"
                },
                {
                    "date": 1688679891884,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n \n function strengthState(value) {\n     // To Weak Password 1 - 5\n     if(value < 5) {\n-        lengthLabel.textContent = \"WEAK\"\n+        lengthLabel.textContent = \"TOO WEAK!\"\n     }\n     // Weak Password  5 - 10 \n \n     // Medium - 10 - 50 \n"
                },
                {
                    "date": 1688679914435,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,10 +18,11 @@\n \n function strengthState(value) {\n     // To Weak Password 1 - 5\n     if(value < 5) {\n-        lengthLabel.textContent = \"TOO WEAK!\"\n-    }\n+        lengthLabel.textContent = \"TOO WEAK!\"; \n+    } \n+    else if(value > 5 && value < 10 )\n     // Weak Password  5 - 10 \n \n     // Medium - 10 - 50 \n \n"
                },
                {
                    "date": 1688679925770,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,11 @@\n     // To Weak Password 1 - 5\n     if(value < 5) {\n         lengthLabel.textContent = \"TOO WEAK!\"; \n     } \n-    else if(value > 5 && value < 10 )\n+    else if(value > 5 && value < 10 ) {\n+        lengthLabel.textContent = \"WEAK!\"\n+    }\n     // Weak Password  5 - 10 \n \n     // Medium - 10 - 50 \n \n"
                },
                {
                    "date": 1688679944193,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,12 +20,14 @@\n     // To Weak Password 1 - 5\n     if(value < 5) {\n         lengthLabel.textContent = \"TOO WEAK!\"; \n     } \n+     // Weak Password  5 - 10 \n     else if(value > 5 && value < 10 ) {\n         lengthLabel.textContent = \"WEAK!\"\n     }\n-    // Weak Password  5 - 10 \n+    else if(valye)\n+   \n \n     // Medium - 10 - 50 \n \n     // Strong - 50 - 100 \n"
                },
                {
                    "date": 1688679951845,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,13 +20,13 @@\n     // To Weak Password 1 - 5\n     if(value < 5) {\n         lengthLabel.textContent = \"TOO WEAK!\"; \n     } \n-     // Weak Password  5 - 10 \n+    // Weak Password  5 - 10 \n     else if(value > 5 && value < 10 ) {\n         lengthLabel.textContent = \"WEAK!\"\n     }\n-    else if(valye)\n+    else if(value > )\n    \n \n     // Medium - 10 - 50 \n \n"
                },
                {
                    "date": 1688679967671,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n     // Weak Password  5 - 10 \n     else if(value > 5 && value < 10 ) {\n         lengthLabel.textContent = \"WEAK!\"\n     }\n-    else if(value > )\n+    else if(value > 10 && value > )\n    \n \n     // Medium - 10 - 50 \n \n"
                },
                {
                    "date": 1688679973339,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n     // Weak Password  5 - 10 \n     else if(value > 5 && value < 10 ) {\n         lengthLabel.textContent = \"WEAK!\"\n     }\n-    else if(value > 10 && value > )\n+    else if(value > 10 && value < 50 )\n    \n \n     // Medium - 10 - 50 \n \n"
                },
                {
                    "date": 1688679985835,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,11 @@\n     // Weak Password  5 - 10 \n     else if(value > 5 && value < 10 ) {\n         lengthLabel.textContent = \"WEAK!\"\n     }\n-    else if(value > 10 && value < 50 )\n+    else if(value > 10 && value < 50 ) {\n+        length.textContent = \"MEDIUM\"\n+    }\n    \n \n     // Medium - 10 - 50 \n \n"
                },
                {
                    "date": 1688679992427,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,8 +27,11 @@\n     }\n     else if(value > 10 && value < 50 ) {\n         length.textContent = \"MEDIUM\"\n     }\n+    else {\n+        \n+    }\n    \n \n     // Medium - 10 - 50 \n \n"
                },
                {
                    "date": 1688680001753,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n     else if(value > 10 && value < 50 ) {\n         length.textContent = \"MEDIUM\"\n     }\n     else {\n-        \n+        lengthLabel.textContent = \"STRONG\"\n     }\n    \n \n     // Medium - 10 - 50 \n"
                },
                {
                    "date": 1688680011796,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,17 +24,18 @@\n     // Weak Password  5 - 10 \n     else if(value > 5 && value < 10 ) {\n         lengthLabel.textContent = \"WEAK!\"\n     }\n+      // Medium - 10 - 50 \n     else if(value > 10 && value < 50 ) {\n         length.textContent = \"MEDIUM\"\n     }\n     else {\n         lengthLabel.textContent = \"STRONG\"\n     }\n    \n \n-    // Medium - 10 - 50 \n+  \n \n     // Strong - 50 - 100 \n \n }\n"
                },
                {
                    "date": 1688680016965,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n     // Weak Password  5 - 10 \n     else if(value > 5 && value < 10 ) {\n         lengthLabel.textContent = \"WEAK!\"\n     }\n-      // Medium - 10 - 50 \n+    // Medium - 10 - 50 \n     else if(value > 10 && value < 50 ) {\n         length.textContent = \"MEDIUM\"\n     }\n     else {\n@@ -35,10 +35,8 @@\n    \n \n   \n \n-    // Strong - 50 - 100 \n-\n }\n \n \n progressSlider(); \n"
                },
                {
                    "date": 1688680022301,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,8 +28,9 @@\n     // Medium - 10 - 50 \n     else if(value > 10 && value < 50 ) {\n         length.textContent = \"MEDIUM\"\n     }\n+    // Strong - 50 - 100 \n     else {\n         lengthLabel.textContent = \"STRONG\"\n     }\n    \n"
                },
                {
                    "date": 1688680049553,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,22 +22,19 @@\n         lengthLabel.textContent = \"TOO WEAK!\"; \n     } \n     // Weak Password  5 - 10 \n     else if(value > 5 && value < 10 ) {\n-        lengthLabel.textContent = \"WEAK!\"\n+        lengthLabel.textContent = \"WEAK!\"; \n     }\n     // Medium - 10 - 50 \n     else if(value > 10 && value < 50 ) {\n-        length.textContent = \"MEDIUM\"\n+        lengthLabel.textContent = \"MEDIUM\"; \n     }\n     // Strong - 50 - 100 \n     else {\n-        lengthLabel.textContent = \"STRONG\"\n+        lengthLabel.textContent = \"STRONG\"; \n     }\n-   \n \n-  \n-\n }\n \n \n progressSlider(); \n"
                },
                {
                    "date": 1688680098433,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n function updateLengthLabel() {\n     lengthLabel.textContent = slider.value; \n }\n \n-function strengthState(value) {\n+function updateStrengthState(value) {\n     // To Weak Password 1 - 5\n     if(value < 5) {\n         lengthLabel.textContent = \"TOO WEAK!\"; \n     } \n"
                },
                {
                    "date": 1688680110449,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,10 @@\n \n progressSlider(); \n slider.addEventListener(\"input\", () => {\n     progressSlider(); \n-    updateLengthLabel(); \n+    updateLengthLabel();\n+    updateStrengthState(slider.value) \n })\n \n console.log(slider.value);\n \n"
                },
                {
                    "date": 1688680141852,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,21 +18,21 @@\n \n function updateStrengthState(value) {\n     // To Weak Password 1 - 5\n     if(value < 5) {\n-        lengthLabel.textContent = \"TOO WEAK!\"; \n+        strengthLabel.textContent = \"TOO WEAK!\"; \n     } \n     // Weak Password  5 - 10 \n     else if(value > 5 && value < 10 ) {\n-        lengthLabel.textContent = \"WEAK!\"; \n+        strengthLabel.textContent = \"WEAK!\"; \n     }\n     // Medium - 10 - 50 \n     else if(value > 10 && value < 50 ) {\n-        lengthLabel.textContent = \"MEDIUM\"; \n+        strengthLabel.textContent = \"MEDIUM\"; \n     }\n     // Strong - 50 - 100 \n     else {\n-        lengthLabel.textContent = \"STRONG\"; \n+        strengthLabel.textContent = \"STRONG\"; \n     }\n \n }\n \n@@ -40,9 +40,9 @@\n progressSlider(); \n slider.addEventListener(\"input\", () => {\n     progressSlider(); \n     updateLengthLabel();\n-    updateStrengthState(slider.value) \n+    updateStrengthState(slider.value); \n })\n \n console.log(slider.value);\n \n"
                },
                {
                    "date": 1688680310573,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,8 +5,9 @@\n // Dynamic UI \n const slider = document.querySelector(\"#character-length\");\n const lengthLabel = document.querySelector(\".length-label\"); \n const strengthLabel = document.querySelector(\".strength-state h2\"); \n+const columns = document.querySelector(\".column\")\n \n function progressSlider() {\n     const sliderValue = slider.value; \n     slider.style.background = `linear-gradient(to right, var(--neon-green) ${sliderValue}%, var(--very-dark-grey) ${sliderValue}%)`\n"
                },
                {
                    "date": 1688680321242,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n // Dynamic UI \n const slider = document.querySelector(\"#character-length\");\n const lengthLabel = document.querySelector(\".length-label\"); \n const strengthLabel = document.querySelector(\".strength-state h2\"); \n-const columns = document.querySelector(\".column\")\n+const columns = document.querySelectorAll(\".column\")\n \n function progressSlider() {\n     const sliderValue = slider.value; \n     slider.style.background = `linear-gradient(to right, var(--neon-green) ${sliderValue}%, var(--very-dark-grey) ${sliderValue}%)`\n"
                },
                {
                    "date": 1688680418240,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,10 +5,10 @@\n // Dynamic UI \n const slider = document.querySelector(\"#character-length\");\n const lengthLabel = document.querySelector(\".length-label\"); \n const strengthLabel = document.querySelector(\".strength-state h2\"); \n-const columns = document.querySelectorAll(\".column\")\n \n+\n function progressSlider() {\n     const sliderValue = slider.value; \n     slider.style.background = `linear-gradient(to right, var(--neon-green) ${sliderValue}%, var(--very-dark-grey) ${sliderValue}%)`\n }\n@@ -18,8 +18,9 @@\n }\n \n function updateStrengthState(value) {\n     // To Weak Password 1 - 5\n+    const columns = document.querySelectorAll(\".column\")\n     if(value < 5) {\n         strengthLabel.textContent = \"TOO WEAK!\"; \n     } \n     // Weak Password  5 - 10 \n"
                },
                {
                    "date": 1688680431133,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,12 +3,11 @@\n // Update UI for Strength State\n \n // Dynamic UI \n const slider = document.querySelector(\"#character-length\");\n-const lengthLabel = document.querySelector(\".length-label\"); \n+\n const strengthLabel = document.querySelector(\".strength-state h2\"); \n \n-\n function progressSlider() {\n     const sliderValue = slider.value; \n     slider.style.background = `linear-gradient(to right, var(--neon-green) ${sliderValue}%, var(--very-dark-grey) ${sliderValue}%)`\n }\n@@ -18,9 +17,10 @@\n }\n \n function updateStrengthState(value) {\n     // To Weak Password 1 - 5\n-    const columns = document.querySelectorAll(\".column\")\n+    const columns = document.querySelectorAll(\".column\"); \n+    const lengthLabel = document.querySelector(\".length-label\"); \n     if(value < 5) {\n         strengthLabel.textContent = \"TOO WEAK!\"; \n     } \n     // Weak Password  5 - 10 \n"
                },
                {
                    "date": 1688680438905,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,10 +3,10 @@\n // Update UI for Strength State\n \n // Dynamic UI \n const slider = document.querySelector(\"#character-length\");\n+const lengthLabel = document.querySelector(\".length-label\"); \n \n-const strengthLabel = document.querySelector(\".strength-state h2\"); \n \n function progressSlider() {\n     const sliderValue = slider.value; \n     slider.style.background = `linear-gradient(to right, var(--neon-green) ${sliderValue}%, var(--very-dark-grey) ${sliderValue}%)`\n@@ -18,9 +18,9 @@\n \n function updateStrengthState(value) {\n     // To Weak Password 1 - 5\n     const columns = document.querySelectorAll(\".column\"); \n-    const lengthLabel = document.querySelector(\".length-label\"); \n+    const strengthLabel = document.querySelector(\".strength-state h2\"); \n     if(value < 5) {\n         strengthLabel.textContent = \"TOO WEAK!\"; \n     } \n     // Weak Password  5 - 10 \n"
                },
                {
                    "date": 1688680486709,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,8 @@\n // Generate Random Password() \n // Copy Password \n // Update UI for Strength State\n \n-// Dynamic UI \n const slider = document.querySelector(\"#character-length\");\n const lengthLabel = document.querySelector(\".length-label\"); \n \n \n@@ -19,8 +18,11 @@\n function updateStrengthState(value) {\n     // To Weak Password 1 - 5\n     const columns = document.querySelectorAll(\".column\"); \n     const strengthLabel = document.querySelector(\".strength-state h2\"); \n+    columns.forEach(() => {\n+        \n+    })\n     if(value < 5) {\n         strengthLabel.textContent = \"TOO WEAK!\"; \n     } \n     // Weak Password  5 - 10 \n"
                },
                {
                    "date": 1688680550159,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,11 +18,8 @@\n function updateStrengthState(value) {\n     // To Weak Password 1 - 5\n     const columns = document.querySelectorAll(\".column\"); \n     const strengthLabel = document.querySelector(\".strength-state h2\"); \n-    columns.forEach(() => {\n-        \n-    })\n     if(value < 5) {\n         strengthLabel.textContent = \"TOO WEAK!\"; \n     } \n     // Weak Password  5 - 10 \n"
                },
                {
                    "date": 1688680579250,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,8 +20,9 @@\n     const columns = document.querySelectorAll(\".column\"); \n     const strengthLabel = document.querySelector(\".strength-state h2\"); \n     if(value < 5) {\n         strengthLabel.textContent = \"TOO WEAK!\"; \n+        columns[0].\n     } \n     // Weak Password  5 - 10 \n     else if(value > 5 && value < 10 ) {\n         strengthLabel.textContent = \"WEAK!\"; \n"
                },
                {
                    "date": 1688680856632,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n     const columns = document.querySelectorAll(\".column\"); \n     const strengthLabel = document.querySelector(\".strength-state h2\"); \n     if(value < 5) {\n         strengthLabel.textContent = \"TOO WEAK!\"; \n-        columns[0].\n+        columns[0].classList.add()\n     } \n     // Weak Password  5 - 10 \n     else if(value > 5 && value < 10 ) {\n         strengthLabel.textContent = \"WEAK!\"; \n@@ -35,8 +35,12 @@\n     else {\n         strengthLabel.textContent = \"STRONG\"; \n     }\n \n+    columns.forEach(() => {\n+        \n+    })\n+\n }\n \n \n progressSlider(); \n"
                },
                {
                    "date": 1688680862972,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,9 @@\n     else {\n         strengthLabel.textContent = \"STRONG\"; \n     }\n \n-    columns.forEach(() => {\n+    columns.forEach((element) => {\n         \n     })\n \n }\n"
                },
                {
                    "date": 1688680894400,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,9 @@\n         strengthLabel.textContent = \"STRONG\"; \n     }\n \n     columns.forEach((element) => {\n-        \n+        element.classList.remove(\"weak\", \"medium\", \"strong\")\n     })\n \n }\n \n"
                },
                {
                    "date": 1688680900863,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n     const columns = document.querySelectorAll(\".column\"); \n     const strengthLabel = document.querySelector(\".strength-state h2\"); \n     if(value < 5) {\n         strengthLabel.textContent = \"TOO WEAK!\"; \n-        columns[0].classList.add()\n+        columns[0].classList.add(\"weak\")\n     } \n     // Weak Password  5 - 10 \n     else if(value > 5 && value < 10 ) {\n         strengthLabel.textContent = \"WEAK!\"; \n@@ -36,9 +36,9 @@\n         strengthLabel.textContent = \"STRONG\"; \n     }\n \n     columns.forEach((element) => {\n-        element.classList.remove(\"weak\", \"medium\", \"strong\")\n+        element.classList.remove(\"weak\", \"medium\", \"strong\"); \n     })\n \n }\n \n"
                },
                {
                    "date": 1688680927229,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n     const columns = document.querySelectorAll(\".column\"); \n     const strengthLabel = document.querySelector(\".strength-state h2\"); \n     if(value < 5) {\n         strengthLabel.textContent = \"TOO WEAK!\"; \n-        columns[0].classList.add(\"weak\")\n+        columns[0].classList.add(\".weak\"); \n     } \n     // Weak Password  5 - 10 \n     else if(value > 5 && value < 10 ) {\n         strengthLabel.textContent = \"WEAK!\"; \n"
                },
                {
                    "date": 1688680935018,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n     const columns = document.querySelectorAll(\".column\"); \n     const strengthLabel = document.querySelector(\".strength-state h2\"); \n     if(value < 5) {\n         strengthLabel.textContent = \"TOO WEAK!\"; \n-        columns[0].classList.add(\".weak\"); \n+        columns[0].classList.add(\"weak\"); \n     } \n     // Weak Password  5 - 10 \n     else if(value > 5 && value < 10 ) {\n         strengthLabel.textContent = \"WEAK!\"; \n"
                },
                {
                    "date": 1688680945242,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,11 +35,11 @@\n     else {\n         strengthLabel.textContent = \"STRONG\"; \n     }\n \n-    columns.forEach((element) => {\n-        element.classList.remove(\"weak\", \"medium\", \"strong\"); \n-    })\n+    // columns.forEach((element) => {\n+    //     element.classList.remove(\"weak\", \"medium\", \"strong\"); \n+    // })\n \n }\n \n \n"
                },
                {
                    "date": 1688680952568,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,11 +35,11 @@\n     else {\n         strengthLabel.textContent = \"STRONG\"; \n     }\n \n-    // columns.forEach((element) => {\n-    //     element.classList.remove(\"weak\", \"medium\", \"strong\"); \n-    // })\n+    columns.forEach((element) => {\n+        element.classList.remove(\"weak\", \"medium\", \"strong\"); \n+    })\n \n }\n \n \n"
                },
                {
                    "date": 1688680965181,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,12 +35,8 @@\n     else {\n         strengthLabel.textContent = \"STRONG\"; \n     }\n \n-    columns.forEach((element) => {\n-        element.classList.remove(\"weak\", \"medium\", \"strong\"); \n-    })\n-\n }\n \n \n progressSlider(); \n"
                },
                {
                    "date": 1688680984883,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,15 +18,19 @@\n function updateStrengthState(value) {\n     // To Weak Password 1 - 5\n     const columns = document.querySelectorAll(\".column\"); \n     const strengthLabel = document.querySelector(\".strength-state h2\"); \n+    columns.forEach((element) => {\n+        element.classList.remove(\"weak\", \"medium\", \"strong\"); \n+    })\n     if(value < 5) {\n         strengthLabel.textContent = \"TOO WEAK!\"; \n         columns[0].classList.add(\"weak\"); \n     } \n     // Weak Password  5 - 10 \n     else if(value > 5 && value < 10 ) {\n         strengthLabel.textContent = \"WEAK!\"; \n+        columns[0].classList.add(\"weak\"); \n     }\n     // Medium - 10 - 50 \n     else if(value > 10 && value < 50 ) {\n         strengthLabel.textContent = \"MEDIUM\"; \n"
                },
                {
                    "date": 1688681020090,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,14 +23,14 @@\n         element.classList.remove(\"weak\", \"medium\", \"strong\"); \n     })\n     if(value < 5) {\n         strengthLabel.textContent = \"TOO WEAK!\"; \n-        columns[0].classList.add(\"weak\"); \n+        columns[0].classList.add(\"to-weak\"); \n     } \n     // Weak Password  5 - 10 \n     else if(value > 5 && value < 10 ) {\n         strengthLabel.textContent = \"WEAK!\"; \n-        columns[0].classList.add(\"weak\"); \n+        columns[1].classList.add(\"weak\"); \n     }\n     // Medium - 10 - 50 \n     else if(value > 10 && value < 50 ) {\n         strengthLabel.textContent = \"MEDIUM\"; \n"
                },
                {
                    "date": 1688681051147,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,8 +28,9 @@\n     } \n     // Weak Password  5 - 10 \n     else if(value > 5 && value < 10 ) {\n         strengthLabel.textContent = \"WEAK!\"; \n+        columns[0].classList.add(\"to-weak\"); \n         columns[1].classList.add(\"weak\"); \n     }\n     // Medium - 10 - 50 \n     else if(value > 10 && value < 50 ) {\n"
                },
                {
                    "date": 1688681087785,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,14 +28,16 @@\n     } \n     // Weak Password  5 - 10 \n     else if(value > 5 && value < 10 ) {\n         strengthLabel.textContent = \"WEAK!\"; \n-        columns[0].classList.add(\"to-weak\"); \n+        columns[0].classList.add(\"weak\"); \n         columns[1].classList.add(\"weak\"); \n     }\n     // Medium - 10 - 50 \n     else if(value > 10 && value < 50 ) {\n         strengthLabel.textContent = \"MEDIUM\"; \n+        columns[0].classList.add(\"weak\"); \n+        columns[1].classList.add(\"weak\"); \n     }\n     // Strong - 50 - 100 \n     else {\n         strengthLabel.textContent = \"STRONG\"; \n"
                },
                {
                    "date": 1688681094174,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,9 +34,9 @@\n     }\n     // Medium - 10 - 50 \n     else if(value > 10 && value < 50 ) {\n         strengthLabel.textContent = \"MEDIUM\"; \n-        columns[0].classList.add(\"weak\"); \n+        columns[0].classList.add(\"medium\"); \n         columns[1].classList.add(\"weak\"); \n     }\n     // Strong - 50 - 100 \n     else {\n"
                },
                {
                    "date": 1688681127209,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,10 @@\n     // Medium - 10 - 50 \n     else if(value > 10 && value < 50 ) {\n         strengthLabel.textContent = \"MEDIUM\"; \n         columns[0].classList.add(\"medium\"); \n-        columns[1].classList.add(\"weak\"); \n+        columns[1].classList.add(\"medium\"); \n+        columns[2].classList.add(\"medium\"); \n     }\n     // Strong - 50 - 100 \n     else {\n         strengthLabel.textContent = \"STRONG\"; \n"
                },
                {
                    "date": 1688681138809,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,8 +41,11 @@\n     }\n     // Strong - 50 - 100 \n     else {\n         strengthLabel.textContent = \"STRONG\"; \n+        columns[0].classList.add(\"medium\"); \n+        columns[1].classList.add(\"medium\"); \n+        columns[2].classList.add(\"medium\"); \n     }\n \n }\n \n"
                },
                {
                    "date": 1688681145914,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,8 +44,9 @@\n         strengthLabel.textContent = \"STRONG\"; \n         columns[0].classList.add(\"medium\"); \n         columns[1].classList.add(\"medium\"); \n         columns[2].classList.add(\"medium\"); \n+        columns[2].classList.add(\"medium\"); \n     }\n \n }\n \n"
                },
                {
                    "date": 1688681155990,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,9 @@\n         strengthLabel.textContent = \"STRONG\"; \n         columns[0].classList.add(\"medium\"); \n         columns[1].classList.add(\"medium\"); \n         columns[2].classList.add(\"medium\"); \n-        columns[2].classList.add(\"medium\"); \n+        columns[3].classList.add(\"strong\"); \n     }\n \n }\n \n"
                },
                {
                    "date": 1688681195059,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,20 +32,20 @@\n         columns[0].classList.add(\"weak\"); \n         columns[1].classList.add(\"weak\"); \n     }\n     // Medium - 10 - 50 \n-    else if(value > 10 && value < 50 ) {\n+    else if(value >= 10 && value < 50 ) {\n         strengthLabel.textContent = \"MEDIUM\"; \n         columns[0].classList.add(\"medium\"); \n         columns[1].classList.add(\"medium\"); \n         columns[2].classList.add(\"medium\"); \n     }\n     // Strong - 50 - 100 \n     else {\n         strengthLabel.textContent = \"STRONG\"; \n-        columns[0].classList.add(\"medium\"); \n-        columns[1].classList.add(\"medium\"); \n-        columns[2].classList.add(\"medium\"); \n+        columns[0].classList.add(\"strong\"); \n+        columns[1].classList.add(\"strong\"); \n+        columns[2].classList.add(\"strong\"); \n         columns[3].classList.add(\"strong\"); \n     }\n \n }\n"
                },
                {
                    "date": 1688681212546,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n     const strengthLabel = document.querySelector(\".strength-state h2\"); \n     columns.forEach((element) => {\n         element.classList.remove(\"weak\", \"medium\", \"strong\"); \n     })\n-    if(value < 5) {\n+    if(value <= 5) {\n         strengthLabel.textContent = \"TOO WEAK!\"; \n         columns[0].classList.add(\"to-weak\"); \n     } \n     // Weak Password  5 - 10 \n"
                },
                {
                    "date": 1688681218570,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n         strengthLabel.textContent = \"TOO WEAK!\"; \n         columns[0].classList.add(\"to-weak\"); \n     } \n     // Weak Password  5 - 10 \n-    else if(value > 5 && value < 10 ) {\n+    else if(value >= 5 && value <= 10 ) {\n         strengthLabel.textContent = \"WEAK!\"; \n         columns[0].classList.add(\"weak\"); \n         columns[1].classList.add(\"weak\"); \n     }\n"
                },
                {
                    "date": 1688681267729,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,8 +14,13 @@\n function updateLengthLabel() {\n     lengthLabel.textContent = slider.value; \n }\n \n+\n+function updateStrengthBar() {\n+    \n+}\n+\n function updateStrengthState(value) {\n     // To Weak Password 1 - 5\n     const columns = document.querySelectorAll(\".column\"); \n     const strengthLabel = document.querySelector(\".strength-state h2\"); \n@@ -32,9 +37,9 @@\n         columns[0].classList.add(\"weak\"); \n         columns[1].classList.add(\"weak\"); \n     }\n     // Medium - 10 - 50 \n-    else if(value >= 10 && value < 50 ) {\n+    else if(value >= 10 && value <= 50 ) {\n         strengthLabel.textContent = \"MEDIUM\"; \n         columns[0].classList.add(\"medium\"); \n         columns[1].classList.add(\"medium\"); \n         columns[2].classList.add(\"medium\"); \n"
                },
                {
                    "date": 1688681273284,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,10 +15,10 @@\n     lengthLabel.textContent = slider.value; \n }\n \n \n-function updateStrengthBar() {\n-    \n+function updateStrengthBar(value) {\n+\n }\n \n function updateStrengthState(value) {\n     // To Weak Password 1 - 5\n"
                },
                {
                    "date": 1688681290856,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n }\n \n \n function updateStrengthBar(value) {\n-\n+    if(value === \"medium\")\n }\n \n function updateStrengthState(value) {\n     // To Weak Password 1 - 5\n"
                },
                {
                    "date": 1688681302136,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,8 +16,9 @@\n }\n \n \n function updateStrengthBar(value) {\n+    let iterator = 0\n     if(value === \"medium\")\n }\n \n function updateStrengthState(value) {\n"
                },
                {
                    "date": 1688681317348,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,11 @@\n \n \n function updateStrengthBar(value) {\n     let iterator = 0\n-    if(value === \"medium\")\n+    if(value === \"medium\") {\n+        iterator = 2\n+    }\n }\n \n function updateStrengthState(value) {\n     // To Weak Password 1 - 5\n"
                },
                {
                    "date": 1688681337523,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,15 +15,8 @@\n     lengthLabel.textContent = slider.value; \n }\n \n \n-function updateStrengthBar(value) {\n-    let iterator = 0\n-    if(value === \"medium\") {\n-        iterator = 2\n-    }\n-}\n-\n function updateStrengthState(value) {\n     // To Weak Password 1 - 5\n     const columns = document.querySelectorAll(\".column\"); \n     const strengthLabel = document.querySelector(\".strength-state h2\"); \n"
                },
                {
                    "date": 1688681440383,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,8 +5,9 @@\n const slider = document.querySelector(\"#character-length\");\n const lengthLabel = document.querySelector(\".length-label\"); \n \n \n+// Dynamic Slider Bar\n function progressSlider() {\n     const sliderValue = slider.value; \n     slider.style.background = `linear-gradient(to right, var(--neon-green) ${sliderValue}%, var(--very-dark-grey) ${sliderValue}%)`\n }\n"
                },
                {
                    "date": 1688681455196,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n function progressSlider() {\n     const sliderValue = slider.value; \n     slider.style.background = `linear-gradient(to right, var(--neon-green) ${sliderValue}%, var(--very-dark-grey) ${sliderValue}%)`\n }\n-\n+// Character Length Label\n function updateLengthLabel() {\n     lengthLabel.textContent = slider.value; \n }\n \n"
                },
                {
                    "date": 1688745477585,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,8 +52,13 @@\n \n }\n \n \n+function generatePassword() {\n+    \n+}\n+\n+\n progressSlider(); \n slider.addEventListener(\"input\", () => {\n     progressSlider(); \n     updateLengthLabel();\n"
                },
                {
                    "date": 1688745492433,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,10 +52,10 @@\n \n }\n \n \n-function generatePassword() {\n-    \n+function generatePassword(CharacterLength, ) {\n+\n }\n \n \n progressSlider(); \n"
                },
                {
                    "date": 1688745526843,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,9 @@\n \n }\n \n \n-function generatePassword(CharacterLength, ) {\n+function generatePassword(CharacterLength, upperFlag, lowerFlagm ) {\n \n }\n \n \n"
                },
                {
                    "date": 1688745534966,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,9 @@\n \n }\n \n \n-function generatePassword(CharacterLength, upperFlag, lowerFlagm ) {\n+function generatePassword(CharacterLength, upperFlag, lowerFlag, numberFlag, ) {\n \n }\n \n \n"
                },
                {
                    "date": 1688745542971,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,9 @@\n \n }\n \n \n-function generatePassword(CharacterLength, upperFlag, lowerFlag, numberFlag, ) {\n+function generatePassword(CharacterLength, upperFlag, lowerFlag, numberFlag, symbolsFLag) {\n \n }\n \n \n"
                },
                {
                    "date": 1688745561983,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,10 +52,10 @@\n \n }\n \n \n-function generatePassword(CharacterLength, upperFlag, lowerFlag, numberFlag, symbolsFLag) {\n-\n+function generatePassword(characterLength, upperFlag, lowerFlag, numberFlag, symbolsFLag) {\n+    if CharacterLength <\n }\n \n \n progressSlider(); \n"
                },
                {
                    "date": 1688745570488,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,9 +53,11 @@\n }\n \n \n function generatePassword(characterLength, upperFlag, lowerFlag, numberFlag, symbolsFLag) {\n-    if CharacterLength <\n+    if(characterLength < 0) {\n+        \n+    }\n }\n \n \n progressSlider(); \n"
                },
                {
                    "date": 1688746083767,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,10 +53,11 @@\n }\n \n \n function generatePassword(characterLength, upperFlag, lowerFlag, numberFlag, symbolsFLag) {\n+    let password = \"\"\n     if(characterLength < 0) {\n-        \n+        return \n     }\n }\n \n \n"
                },
                {
                    "date": 1688746089206,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,9 +55,9 @@\n \n function generatePassword(characterLength, upperFlag, lowerFlag, numberFlag, symbolsFLag) {\n     let password = \"\"\n     if(characterLength < 0) {\n-        return \n+        return password\n     }\n }\n \n \n"
                },
                {
                    "date": 1688746147149,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,8 +57,9 @@\n     let password = \"\"\n     if(characterLength < 0) {\n         return password\n     }\n+\n }\n \n \n progressSlider(); \n"
                },
                {
                    "date": 1688746197554,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,9 +54,10 @@\n \n \n function generatePassword(characterLength, upperFlag, lowerFlag, numberFlag, symbolsFLag) {\n     let password = \"\"\n-    if(characterLength < 0) {\n+    characterLength = Number(characterLength)\n+    if(Number(characterLength < 0) {\n         return password\n     }\n \n }\n"
                },
                {
                    "date": 1688746203091,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,9 +55,9 @@\n \n function generatePassword(characterLength, upperFlag, lowerFlag, numberFlag, symbolsFLag) {\n     let password = \"\"\n     characterLength = Number(characterLength)\n-    if(Number(characterLength < 0) {\n+    if(characterLength < 0) {\n         return password\n     }\n \n }\n"
                },
                {
                    "date": 1688746293077,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,78 @@\n+// Generate Random Password() \n+// Copy Password \n+// Update UI for Strength State\n+\n+const slider = document.querySelector(\"#character-length\");\n+const lengthLabel = document.querySelector(\".length-label\"); \n+\n+\n+// Dynamic Slider Bar\n+function progressSlider() {\n+    const sliderValue = slider.value; \n+    slider.style.background = `linear-gradient(to right, var(--neon-green) ${sliderValue}%, var(--very-dark-grey) ${sliderValue}%)`\n+}\n+// Character Length Label\n+function updateLengthLabel() {\n+    lengthLabel.textContent = slider.value; \n+}\n+\n+\n+function updateStrengthState(value) {\n+    // To Weak Password 1 - 5\n+    const columns = document.querySelectorAll(\".column\"); \n+    const strengthLabel = document.querySelector(\".strength-state h2\"); \n+    columns.forEach((element) => {\n+        element.classList.remove(\"weak\", \"medium\", \"strong\"); \n+    })\n+    if(value <= 5) {\n+        strengthLabel.textContent = \"TOO WEAK!\"; \n+        columns[0].classList.add(\"to-weak\"); \n+    } \n+    // Weak Password  5 - 10 \n+    else if(value >= 5 && value <= 10 ) {\n+        strengthLabel.textContent = \"WEAK!\"; \n+        columns[0].classList.add(\"weak\"); \n+        columns[1].classList.add(\"weak\"); \n+    }\n+    // Medium - 10 - 50 \n+    else if(value >= 10 && value <= 50 ) {\n+        strengthLabel.textContent = \"MEDIUM\"; \n+        columns[0].classList.add(\"medium\"); \n+        columns[1].classList.add(\"medium\"); \n+        columns[2].classList.add(\"medium\"); \n+    }\n+    // Strong - 50 - 100 \n+    else {\n+        strengthLabel.textContent = \"STRONG\"; \n+        columns[0].classList.add(\"strong\"); \n+        columns[1].classList.add(\"strong\"); \n+        columns[2].classList.add(\"strong\"); \n+        columns[3].classList.add(\"strong\"); \n+    }\n+\n+}\n+\n+\n+function generatePassword(characterLength, upperFlag, lowerFlag, numberFlag, symbolsFLag) {\n+    let password = \"\"\n+    characterLength = Number(characterLength); \n+    if(characterLength < 0) {\n+        return password\n+    }\n+    for(let i = 0; i < characterLength; i++) {\n+        \n+    }\n+\n+}\n+\n+\n+progressSlider(); \n+slider.addEventListener(\"input\", () => {\n+    progressSlider(); \n+    updateLengthLabel();\n+    updateStrengthState(slider.value); \n+})\n+\n+console.log(slider.value);\n+\n+\n"
                },
                {
                    "date": 1688746342530,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,90 +58,16 @@\n     characterLength = Number(characterLength); \n     if(characterLength < 0) {\n         return password\n     }\n+    \n     for(let i = 0; i < characterLength; i++) {\n-        \n-    }\n \n-}\n-\n-\n-progressSlider(); \n-slider.addEventListener(\"input\", () => {\n-    progressSlider(); \n-    updateLengthLabel();\n-    updateStrengthState(slider.value); \n-})\n-\n-console.log(slider.value);\n-\n-\n-// Generate Random Password() \n-// Copy Password \n-// Update UI for Strength State\n-\n-const slider = document.querySelector(\"#character-length\");\n-const lengthLabel = document.querySelector(\".length-label\"); \n-\n-\n-// Dynamic Slider Bar\n-function progressSlider() {\n-    const sliderValue = slider.value; \n-    slider.style.background = `linear-gradient(to right, var(--neon-green) ${sliderValue}%, var(--very-dark-grey) ${sliderValue}%)`\n-}\n-// Character Length Label\n-function updateLengthLabel() {\n-    lengthLabel.textContent = slider.value; \n-}\n-\n-\n-function updateStrengthState(value) {\n-    // To Weak Password 1 - 5\n-    const columns = document.querySelectorAll(\".column\"); \n-    const strengthLabel = document.querySelector(\".strength-state h2\"); \n-    columns.forEach((element) => {\n-        element.classList.remove(\"weak\", \"medium\", \"strong\"); \n-    })\n-    if(value <= 5) {\n-        strengthLabel.textContent = \"TOO WEAK!\"; \n-        columns[0].classList.add(\"to-weak\"); \n-    } \n-    // Weak Password  5 - 10 \n-    else if(value >= 5 && value <= 10 ) {\n-        strengthLabel.textContent = \"WEAK!\"; \n-        columns[0].classList.add(\"weak\"); \n-        columns[1].classList.add(\"weak\"); \n     }\n-    // Medium - 10 - 50 \n-    else if(value >= 10 && value <= 50 ) {\n-        strengthLabel.textContent = \"MEDIUM\"; \n-        columns[0].classList.add(\"medium\"); \n-        columns[1].classList.add(\"medium\"); \n-        columns[2].classList.add(\"medium\"); \n-    }\n-    // Strong - 50 - 100 \n-    else {\n-        strengthLabel.textContent = \"STRONG\"; \n-        columns[0].classList.add(\"strong\"); \n-        columns[1].classList.add(\"strong\"); \n-        columns[2].classList.add(\"strong\"); \n-        columns[3].classList.add(\"strong\"); \n-    }\n \n }\n \n \n-function generatePassword(characterLength, upperFlag, lowerFlag, numberFlag, symbolsFLag) {\n-    let password = \"\"\n-    characterLength = Number(characterLength)\n-    if(characterLength < 0) {\n-        return password\n-    }\n-\n-}\n-\n-\n progressSlider(); \n slider.addEventListener(\"input\", () => {\n     progressSlider(); \n     updateLengthLabel();\n"
                },
                {
                    "date": 1688746365416,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,8 +53,10 @@\n }\n \n \n function generatePassword(characterLength, upperFlag, lowerFlag, numberFlag, symbolsFLag) {\n+    const upperCharList = []\n+    const lowerCharList = []\n     let password = \"\"\n     characterLength = Number(characterLength); \n     if(characterLength < 0) {\n         return password\n"
                },
                {
                    "date": 1688746497731,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,9 +54,10 @@\n \n \n function generatePassword(characterLength, upperFlag, lowerFlag, numberFlag, symbolsFLag) {\n     const upperCharList = []\n-    const lowerCharList = []\n+    const lowerCharList = [] \n+    const numberFlag = [] 3\n     let password = \"\"\n     characterLength = Number(characterLength); \n     if(characterLength < 0) {\n         return password\n"
                },
                {
                    "date": 1688746938449,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,17 +55,24 @@\n \n function generatePassword(characterLength, upperFlag, lowerFlag, numberFlag, symbolsFLag) {\n     const upperCharList = []\n     const lowerCharList = [] \n-    const numberFlag = [] 3\n+    const numberFlag = []\n     let password = \"\"\n     characterLength = Number(characterLength); \n     if(characterLength < 0) {\n         return password\n     }\n     \n     for(let i = 0; i < characterLength; i++) {\n-\n+        // If random number == 1 \n+            // Generate Char \n+        // If randomNumber == 2 \n+            // Generate Lower \n+        // If random Number == 3 \n+            // Generate Numbe \n+        // If randomNumber == 4: \n+            // Generate Symbol\n     }\n \n }\n \n"
                },
                {
                    "date": 1688747455306,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,8 +56,9 @@\n function generatePassword(characterLength, upperFlag, lowerFlag, numberFlag, symbolsFLag) {\n     const upperCharList = []\n     const lowerCharList = [] \n     const numberFlag = []\n+    const symbolsFlag = \"~!@#$%^&*()_+-=[]\\{}|;:'\",./<>?\"\n     let password = \"\"\n     characterLength = Number(characterLength); \n     if(characterLength < 0) {\n         return password\n@@ -71,8 +72,9 @@\n         // If random Number == 3 \n             // Generate Numbe \n         // If randomNumber == 4: \n             // Generate Symbol\n+            ~!@#$%^&*()_+-=[]\\{}|;:'\",./<>\n     }\n \n }\n \n"
                },
                {
                    "date": 1688747478606,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,9 +56,9 @@\n function generatePassword(characterLength, upperFlag, lowerFlag, numberFlag, symbolsFLag) {\n     const upperCharList = []\n     const lowerCharList = [] \n     const numberFlag = []\n-    const symbolsFlag = \"~!@#$%^&*()_+-=[]\\{}|;:'\",./<>?\"\n+    const symbolsFlag = `~!@#$%^&*()_+-=[]\\{}|;:'\",./<>?'`\n     let password = \"\"\n     characterLength = Number(characterLength); \n     if(characterLength < 0) {\n         return password\n"
                },
                {
                    "date": 1688747526939,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,9 +56,9 @@\n function generatePassword(characterLength, upperFlag, lowerFlag, numberFlag, symbolsFLag) {\n     const upperCharList = []\n     const lowerCharList = [] \n     const numberFlag = []\n-    const symbolsFlag = `~!@#$%^&*()_+-=[]\\{}|;:'\",./<>?'`\n+    const symbolsFlag = `~!@#$%^&*()_+-=[]\\{}|;:'\",./<>?'`.split()\n     let password = \"\"\n     characterLength = Number(characterLength); \n     if(characterLength < 0) {\n         return password\n"
                },
                {
                    "date": 1688747675705,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,9 +56,9 @@\n function generatePassword(characterLength, upperFlag, lowerFlag, numberFlag, symbolsFLag) {\n     const upperCharList = []\n     const lowerCharList = [] \n     const numberFlag = []\n-    const symbolsFlag = `~!@#$%^&*()_+-=[]\\{}|;:'\",./<>?'`.split()\n+    const symbolsFlag = ['!', \"@\", \"#\", \"$\", \"$\", \"%\", \"^\", \"&\", \"*\", \"(\", \")\", \"-\", \"+\", \"{\", \"}\", \"|\", \"/\", \",\", \".\", \"_\", \"=\", \";\"]\n     let password = \"\"\n     characterLength = Number(characterLength); \n     if(characterLength < 0) {\n         return password\n"
                },
                {
                    "date": 1688747693501,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,9 +56,9 @@\n function generatePassword(characterLength, upperFlag, lowerFlag, numberFlag, symbolsFLag) {\n     const upperCharList = []\n     const lowerCharList = [] \n     const numberFlag = []\n-    const symbolsFlag = ['!', \"@\", \"#\", \"$\", \"$\", \"%\", \"^\", \"&\", \"*\", \"(\", \")\", \"-\", \"+\", \"{\", \"}\", \"|\", \"/\", \",\", \".\", \"_\", \"=\", \";\"]\n+    const symbolsFlag = ['!', \"@\", \"#\", \"$\", \"$\", \"%\", \"^\", \"&\", \"*\", \"(\", \")\", \"-\", \"+\", \"{\", \"}\", \"|\", \"/\", \",\", \".\", \"_\", \"=\", \";\", \"?\", \"<\", \">\"]\n     let password = \"\"\n     characterLength = Number(characterLength); \n     if(characterLength < 0) {\n         return password\n"
                },
                {
                    "date": 1688747700570,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,9 +56,9 @@\n function generatePassword(characterLength, upperFlag, lowerFlag, numberFlag, symbolsFLag) {\n     const upperCharList = []\n     const lowerCharList = [] \n     const numberFlag = []\n-    const symbolsFlag = ['!', \"@\", \"#\", \"$\", \"$\", \"%\", \"^\", \"&\", \"*\", \"(\", \")\", \"-\", \"+\", \"{\", \"}\", \"|\", \"/\", \",\", \".\", \"_\", \"=\", \";\", \"?\", \"<\", \">\"]\n+    const symbolsFlag = ['!', \"@\", \"#\", \"$\", \"$\", \"%\", \"^\", \"&\", \"*\", \"(\", \")\", \"-\", \"+\", \"{\", \"}\", \"|\", \"/\", \",\", \".\", \"_\", \"=\", \";\", \"?\", \"<\", \">\"]; \n     let password = \"\"\n     characterLength = Number(characterLength); \n     if(characterLength < 0) {\n         return password\n"
                },
                {
                    "date": 1688747712609,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,9 +55,9 @@\n \n function generatePassword(characterLength, upperFlag, lowerFlag, numberFlag, symbolsFLag) {\n     const upperCharList = []\n     const lowerCharList = [] \n-    const numberFlag = []\n+    const numberFlag = [1,2,3,4,5,6,7,8,9]\n     const symbolsFlag = ['!', \"@\", \"#\", \"$\", \"$\", \"%\", \"^\", \"&\", \"*\", \"(\", \")\", \"-\", \"+\", \"{\", \"}\", \"|\", \"/\", \",\", \".\", \"_\", \"=\", \";\", \"?\", \"<\", \">\"]; \n     let password = \"\"\n     characterLength = Number(characterLength); \n     if(characterLength < 0) {\n"
                },
                {
                    "date": 1688747809912,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,10 +54,10 @@\n \n \n function generatePassword(characterLength, upperFlag, lowerFlag, numberFlag, symbolsFLag) {\n     const upperCharList = []\n-    const lowerCharList = [] \n-    const numberFlag = [1,2,3,4,5,6,7,8,9]\n+    const lowerCharList = ['a','b','c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'] \n+    const numberFlag = [0,1,2,3,4,5,6,7,8,9]\n     const symbolsFlag = ['!', \"@\", \"#\", \"$\", \"$\", \"%\", \"^\", \"&\", \"*\", \"(\", \")\", \"-\", \"+\", \"{\", \"}\", \"|\", \"/\", \",\", \".\", \"_\", \"=\", \";\", \"?\", \"<\", \">\"]; \n     let password = \"\"\n     characterLength = Number(characterLength); \n     if(characterLength < 0) {\n"
                },
                {
                    "date": 1688747843924,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,9 +53,13 @@\n }\n \n \n function generatePassword(characterLength, upperFlag, lowerFlag, numberFlag, symbolsFLag) {\n-    const upperCharList = []\n+    const upperCharList = () => {\n+        lowerCharList.forEach(() => {\n+            \n+        })\n+    }\n     const lowerCharList = ['a','b','c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'] \n     const numberFlag = [0,1,2,3,4,5,6,7,8,9]\n     const symbolsFlag = ['!', \"@\", \"#\", \"$\", \"$\", \"%\", \"^\", \"&\", \"*\", \"(\", \")\", \"-\", \"+\", \"{\", \"}\", \"|\", \"/\", \",\", \".\", \"_\", \"=\", \";\", \"?\", \"<\", \">\"]; \n     let password = \"\"\n"
                },
                {
                    "date": 1688747850747,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,10 +54,10 @@\n \n \n function generatePassword(characterLength, upperFlag, lowerFlag, numberFlag, symbolsFLag) {\n     const upperCharList = () => {\n-        lowerCharList.forEach(() => {\n-            \n+        lowerCharList.forEach((e) => {\n+\n         })\n     }\n     const lowerCharList = ['a','b','c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'] \n     const numberFlag = [0,1,2,3,4,5,6,7,8,9]\n"
                },
                {
                    "date": 1688747878932,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,11 +53,11 @@\n }\n \n \n function generatePassword(characterLength, upperFlag, lowerFlag, numberFlag, symbolsFLag) {\n-    const upperCharList = () => {\n+    let upperCharList = () => {\n         lowerCharList.forEach((e) => {\n-\n+            upperCharList\n         })\n     }\n     const lowerCharList = ['a','b','c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'] \n     const numberFlag = [0,1,2,3,4,5,6,7,8,9]\n"
                },
                {
                    "date": 1688747889408,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,9 +55,9 @@\n \n function generatePassword(characterLength, upperFlag, lowerFlag, numberFlag, symbolsFLag) {\n     let upperCharList = () => {\n         lowerCharList.forEach((e) => {\n-            upperCharList\n+            upperCharList[i] += e\n         })\n     }\n     const lowerCharList = ['a','b','c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'] \n     const numberFlag = [0,1,2,3,4,5,6,7,8,9]\n"
                },
                {
                    "date": 1688747897267,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,9 +55,9 @@\n \n function generatePassword(characterLength, upperFlag, lowerFlag, numberFlag, symbolsFLag) {\n     let upperCharList = () => {\n         lowerCharList.forEach((e) => {\n-            upperCharList[i] += e\n+            upperCharList[i] += e.toUpperCase(); \n         })\n     }\n     const lowerCharList = ['a','b','c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'] \n     const numberFlag = [0,1,2,3,4,5,6,7,8,9]\n"
                },
                {
                    "date": 1688747941274,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,14 +53,13 @@\n }\n \n \n function generatePassword(characterLength, upperFlag, lowerFlag, numberFlag, symbolsFLag) {\n-    let upperCharList = () => {\n-        lowerCharList.forEach((e) => {\n-            upperCharList[i] += e.toUpperCase(); \n-        })\n-    }\n-    const lowerCharList = ['a','b','c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'] \n+    let upperCharList = []\n+    const lowerCharList = ['a','b','c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n+    lowerCharList.forEach((e) => {\n+        upperCharList[i] += e.toUpperCase(); \n+    })\n     const numberFlag = [0,1,2,3,4,5,6,7,8,9]\n     const symbolsFlag = ['!', \"@\", \"#\", \"$\", \"$\", \"%\", \"^\", \"&\", \"*\", \"(\", \")\", \"-\", \"+\", \"{\", \"}\", \"|\", \"/\", \",\", \".\", \"_\", \"=\", \";\", \"?\", \"<\", \">\"]; \n     let password = \"\"\n     characterLength = Number(characterLength); \n"
                },
                {
                    "date": 1688747953494,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,9 +56,9 @@\n function generatePassword(characterLength, upperFlag, lowerFlag, numberFlag, symbolsFLag) {\n     let upperCharList = []\n     const lowerCharList = ['a','b','c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n     lowerCharList.forEach((e) => {\n-        upperCharList[i] += e.toUpperCase(); \n+        upperCharList.append( e.toUpperCase(); )\n     })\n     const numberFlag = [0,1,2,3,4,5,6,7,8,9]\n     const symbolsFlag = ['!', \"@\", \"#\", \"$\", \"$\", \"%\", \"^\", \"&\", \"*\", \"(\", \")\", \"-\", \"+\", \"{\", \"}\", \"|\", \"/\", \",\", \".\", \"_\", \"=\", \";\", \"?\", \"<\", \">\"]; \n     let password = \"\"\n"
                },
                {
                    "date": 1688747987463,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,9 +56,9 @@\n function generatePassword(characterLength, upperFlag, lowerFlag, numberFlag, symbolsFLag) {\n     let upperCharList = []\n     const lowerCharList = ['a','b','c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n     lowerCharList.forEach((e) => {\n-        upperCharList.append( e.toUpperCase(); )\n+        upperCharList.append(e.toUpperCase())\n     })\n     const numberFlag = [0,1,2,3,4,5,6,7,8,9]\n     const symbolsFlag = ['!', \"@\", \"#\", \"$\", \"$\", \"%\", \"^\", \"&\", \"*\", \"(\", \")\", \"-\", \"+\", \"{\", \"}\", \"|\", \"/\", \",\", \".\", \"_\", \"=\", \";\", \"?\", \"<\", \">\"]; \n     let password = \"\"\n@@ -75,9 +75,8 @@\n         // If random Number == 3 \n             // Generate Numbe \n         // If randomNumber == 4: \n             // Generate Symbol\n-            ~!@#$%^&*()_+-=[]\\{}|;:'\",./<>\n     }\n \n }\n \n"
                },
                {
                    "date": 1688748008475,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,8 +61,9 @@\n     })\n     const numberFlag = [0,1,2,3,4,5,6,7,8,9]\n     const symbolsFlag = ['!', \"@\", \"#\", \"$\", \"$\", \"%\", \"^\", \"&\", \"*\", \"(\", \")\", \"-\", \"+\", \"{\", \"}\", \"|\", \"/\", \",\", \".\", \"_\", \"=\", \";\", \"?\", \"<\", \">\"]; \n     let password = \"\"\n+    let randomNumber = \n     characterLength = Number(characterLength); \n     if(characterLength < 0) {\n         return password\n     }\n"
                },
                {
                    "date": 1688748055270,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,15 +61,16 @@\n     })\n     const numberFlag = [0,1,2,3,4,5,6,7,8,9]\n     const symbolsFlag = ['!', \"@\", \"#\", \"$\", \"$\", \"%\", \"^\", \"&\", \"*\", \"(\", \")\", \"-\", \"+\", \"{\", \"}\", \"|\", \"/\", \",\", \".\", \"_\", \"=\", \";\", \"?\", \"<\", \">\"]; \n     let password = \"\"\n-    let randomNumber = \n+  \n     characterLength = Number(characterLength); \n     if(characterLength < 0) {\n         return password\n     }\n     \n     for(let i = 0; i < characterLength; i++) {\n+        let randomNumber = Math.floor(Math.random(1, 4))\n         // If random number == 1 \n             // Generate Char \n         // If randomNumber == 2 \n             // Generate Lower \n"
                },
                {
                    "date": 1688748066889,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,9 +68,9 @@\n         return password\n     }\n     \n     for(let i = 0; i < characterLength; i++) {\n-        let randomNumber = Math.floor(Math.random(1, 4))\n+        let randomNumber = Math.floor(Math.random() * 4)\n         // If random number == 1 \n             // Generate Char \n         // If randomNumber == 2 \n             // Generate Lower \n"
                },
                {
                    "date": 1688748079908,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,9 +68,9 @@\n         return password\n     }\n     \n     for(let i = 0; i < characterLength; i++) {\n-        let randomNumber = Math.floor(Math.random() * 4)\n+        let randomNumber = Math.floor(Math.random() * 4) + 1\n         // If random number == 1 \n             // Generate Char \n         // If randomNumber == 2 \n             // Generate Lower \n"
                },
                {
                    "date": 1688748101078,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,8 +69,11 @@\n     }\n     \n     for(let i = 0; i < characterLength; i++) {\n         let randomNumber = Math.floor(Math.random() * 4) + 1\n+        if(randomNumber === 1) {\n+            \n+        }\n         // If random number == 1 \n             // Generate Char \n         // If randomNumber == 2 \n             // Generate Lower \n"
                },
                {
                    "date": 1688748340703,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,9 +70,10 @@\n     \n     for(let i = 0; i < characterLength; i++) {\n         let randomNumber = Math.floor(Math.random() * 4) + 1\n         if(randomNumber === 1) {\n-            \n+            let randomIndex = Math.floor((Math.random() * upperCharList.length))\n+            password += Math.random()\n         }\n         // If random number == 1 \n             // Generate Char \n         // If randomNumber == 2 \n"
                },
                {
                    "date": 1688748354569,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,9 +70,9 @@\n     \n     for(let i = 0; i < characterLength; i++) {\n         let randomNumber = Math.floor(Math.random() * 4) + 1\n         if(randomNumber === 1) {\n-            let randomIndex = Math.floor((Math.random() * upperCharList.length))\n+            let randomIndex = Math.floor(Math.random() * upperCharList.length))\n             password += Math.random()\n         }\n         // If random number == 1 \n             // Generate Char \n"
                },
                {
                    "date": 1688748367833,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,10 +70,10 @@\n     \n     for(let i = 0; i < characterLength; i++) {\n         let randomNumber = Math.floor(Math.random() * 4) + 1\n         if(randomNumber === 1) {\n-            let randomIndex = Math.floor(Math.random() * upperCharList.length))\n-            password += Math.random()\n+            let randomIndex = Math.floor(Math.random() * upperCharList.length)\n+            password += Math.random(upperCharList[randomNumber])\n         }\n         // If random number == 1 \n             // Generate Char \n         // If randomNumber == 2 \n"
                },
                {
                    "date": 1688748372932,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,9 +71,9 @@\n     for(let i = 0; i < characterLength; i++) {\n         let randomNumber = Math.floor(Math.random() * 4) + 1\n         if(randomNumber === 1) {\n             let randomIndex = Math.floor(Math.random() * upperCharList.length)\n-            password += Math.random(upperCharList[randomNumber])\n+            password += Math.random(upperCharList[randomIndex])\n         }\n         // If random number == 1 \n             // Generate Char \n         // If randomNumber == 2 \n"
                },
                {
                    "date": 1688748389363,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,9 +70,10 @@\n     \n     for(let i = 0; i < characterLength; i++) {\n         let randomNumber = Math.floor(Math.random() * 4) + 1\n         if(randomNumber === 1) {\n-            let randomIndex = Math.floor(Math.random() * upperCharList.length)\n+            // Random Index of UpperCharList\n+            let randomIndex = Math.floor(Math.random() * upperCharList.length) \n             password += Math.random(upperCharList[randomIndex])\n         }\n         // If random number == 1 \n             // Generate Char \n"
                },
                {
                    "date": 1688748409420,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,10 +74,11 @@\n             // Random Index of UpperCharList\n             let randomIndex = Math.floor(Math.random() * upperCharList.length) \n             password += Math.random(upperCharList[randomIndex])\n         }\n-        // If random number == 1 \n-            // Generate Char \n+        else if(randomNumber === 2) {\n+            \n+        }\n         // If randomNumber == 2 \n             // Generate Lower \n         // If random Number == 3 \n             // Generate Numbe \n"
                },
                {
                    "date": 1688748430824,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,9 +75,10 @@\n             let randomIndex = Math.floor(Math.random() * upperCharList.length) \n             password += Math.random(upperCharList[randomIndex])\n         }\n         else if(randomNumber === 2) {\n-            \n+            let randomIndex = Math.floor(Math.random() * upperCharList.length) \n+            password += Math.random(upperCharList[randomIndex])\n         }\n         // If randomNumber == 2 \n             // Generate Lower \n         // If random Number == 3 \n"
                },
                {
                    "date": 1688748442105,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,10 +75,10 @@\n             let randomIndex = Math.floor(Math.random() * upperCharList.length) \n             password += Math.random(upperCharList[randomIndex])\n         }\n         else if(randomNumber === 2) {\n-            let randomIndex = Math.floor(Math.random() * upperCharList.length) \n-            password += Math.random(upperCharList[randomIndex])\n+            let randomIndex = Math.floor(Math.random() * lowerCharList.length) \n+            password += Math.random(lowerCharList[randomIndex])\n         }\n         // If randomNumber == 2 \n             // Generate Lower \n         // If random Number == 3 \n"
                },
                {
                    "date": 1688748449372,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,8 +78,11 @@\n         else if(randomNumber === 2) {\n             let randomIndex = Math.floor(Math.random() * lowerCharList.length) \n             password += Math.random(lowerCharList[randomIndex])\n         }\n+        else if(randomNumber === 3) {\n+            \n+        }\n         // If randomNumber == 2 \n             // Generate Lower \n         // If random Number == 3 \n             // Generate Numbe \n"
                },
                {
                    "date": 1688748455668,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -79,9 +79,10 @@\n             let randomIndex = Math.floor(Math.random() * lowerCharList.length) \n             password += Math.random(lowerCharList[randomIndex])\n         }\n         else if(randomNumber === 3) {\n-            \n+            let randomIndex = Math.floor(Math.random() * lowerCharList.length) \n+            password += Math.random(lowerCharList[randomIndex])\n         }\n         // If randomNumber == 2 \n             // Generate Lower \n         // If random Number == 3 \n"
                },
                {
                    "date": 1688748463059,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -79,9 +79,9 @@\n             let randomIndex = Math.floor(Math.random() * lowerCharList.length) \n             password += Math.random(lowerCharList[randomIndex])\n         }\n         else if(randomNumber === 3) {\n-            let randomIndex = Math.floor(Math.random() * lowerCharList.length) \n+            let randomIndex = Math.floor(Math.random() * Number.length) \n             password += Math.random(lowerCharList[randomIndex])\n         }\n         // If randomNumber == 2 \n             // Generate Lower \n"
                },
                {
                    "date": 1688748475593,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -80,9 +80,9 @@\n             password += Math.random(lowerCharList[randomIndex])\n         }\n         else if(randomNumber === 3) {\n             let randomIndex = Math.floor(Math.random() * Number.length) \n-            password += Math.random(lowerCharList[randomIndex])\n+            password += Math.random(randomIndex[randomIndex])\n         }\n         // If randomNumber == 2 \n             // Generate Lower \n         // If random Number == 3 \n"
                },
                {
                    "date": 1688748487761,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,9 +58,9 @@\n     const lowerCharList = ['a','b','c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n     lowerCharList.forEach((e) => {\n         upperCharList.append(e.toUpperCase())\n     })\n-    const numberFlag = [0,1,2,3,4,5,6,7,8,9]\n+    const numberList = [0,1,2,3,4,5,6,7,8,9]\n     const symbolsFlag = ['!', \"@\", \"#\", \"$\", \"$\", \"%\", \"^\", \"&\", \"*\", \"(\", \")\", \"-\", \"+\", \"{\", \"}\", \"|\", \"/\", \",\", \".\", \"_\", \"=\", \";\", \"?\", \"<\", \">\"]; \n     let password = \"\"\n   \n     characterLength = Number(characterLength); \n@@ -79,9 +79,9 @@\n             let randomIndex = Math.floor(Math.random() * lowerCharList.length) \n             password += Math.random(lowerCharList[randomIndex])\n         }\n         else if(randomNumber === 3) {\n-            let randomIndex = Math.floor(Math.random() * Number.length) \n+            let randomIndex = Math.floor(Math.random() * number.length) \n             password += Math.random(randomIndex[randomIndex])\n         }\n         // If randomNumber == 2 \n             // Generate Lower \n"
                },
                {
                    "date": 1688748497356,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,10 +58,10 @@\n     const lowerCharList = ['a','b','c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n     lowerCharList.forEach((e) => {\n         upperCharList.append(e.toUpperCase())\n     })\n-    const numberList = [0,1,2,3,4,5,6,7,8,9]\n-    const symbolsFlag = ['!', \"@\", \"#\", \"$\", \"$\", \"%\", \"^\", \"&\", \"*\", \"(\", \")\", \"-\", \"+\", \"{\", \"}\", \"|\", \"/\", \",\", \".\", \"_\", \"=\", \";\", \"?\", \"<\", \">\"]; \n+    const numbersList = [0,1,2,3,4,5,6,7,8,9]\n+    const symbolsList = ['!', \"@\", \"#\", \"$\", \"$\", \"%\", \"^\", \"&\", \"*\", \"(\", \")\", \"-\", \"+\", \"{\", \"}\", \"|\", \"/\", \",\", \".\", \"_\", \"=\", \";\", \"?\", \"<\", \">\"]; \n     let password = \"\"\n   \n     characterLength = Number(characterLength); \n     if(characterLength < 0) {\n"
                },
                {
                    "date": 1688748506283,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,10 +53,10 @@\n }\n \n \n function generatePassword(characterLength, upperFlag, lowerFlag, numberFlag, symbolsFLag) {\n-    let upperCharList = []\n-    const lowerCharList = ['a','b','c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n+    let upperCharsList = []\n+    const lowerCharsList = ['a','b','c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n     lowerCharList.forEach((e) => {\n         upperCharList.append(e.toUpperCase())\n     })\n     const numbersList = [0,1,2,3,4,5,6,7,8,9]\n@@ -72,13 +72,13 @@\n         let randomNumber = Math.floor(Math.random() * 4) + 1\n         if(randomNumber === 1) {\n             // Random Index of UpperCharList\n             let randomIndex = Math.floor(Math.random() * upperCharList.length) \n-            password += Math.random(upperCharList[randomIndex])\n+            password += Math.random(upperCharsList[randomIndex])\n         }\n         else if(randomNumber === 2) {\n             let randomIndex = Math.floor(Math.random() * lowerCharList.length) \n-            password += Math.random(lowerCharList[randomIndex])\n+            password += Math.random(lowerCharsList[randomIndex])\n         }\n         else if(randomNumber === 3) {\n             let randomIndex = Math.floor(Math.random() * number.length) \n             password += Math.random(randomIndex[randomIndex])\n"
                },
                {
                    "date": 1688748536127,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -80,9 +80,9 @@\n             password += Math.random(lowerCharsList[randomIndex])\n         }\n         else if(randomNumber === 3) {\n             let randomIndex = Math.floor(Math.random() * number.length) \n-            password += Math.random(randomIndex[randomIndex])\n+            password += Math.random(numbersList[randomIndex])\n         }\n         // If randomNumber == 2 \n             // Generate Lower \n         // If random Number == 3 \n"
                },
                {
                    "date": 1688748550572,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,8 +82,12 @@\n         else if(randomNumber === 3) {\n             let randomIndex = Math.floor(Math.random() * number.length) \n             password += Math.random(numbersList[randomIndex])\n         }\n+        else {\n+            let randomIndex = Math.floor(Math.random() * number.length) \n+            password += Math.random(numbersList[randomIndex])\n+        }\n         // If randomNumber == 2 \n             // Generate Lower \n         // If random Number == 3 \n             // Generate Numbe \n"
                },
                {
                    "date": 1688748562638,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,9 +83,9 @@\n             let randomIndex = Math.floor(Math.random() * number.length) \n             password += Math.random(numbersList[randomIndex])\n         }\n         else {\n-            let randomIndex = Math.floor(Math.random() * number.length) \n+            let randomIndex = Math.floor(Math.random() * symbolsList.length) \n             password += Math.random(numbersList[randomIndex])\n         }\n         // If randomNumber == 2 \n             // Generate Lower \n"
                },
                {
                    "date": 1688748568303,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,9 +84,9 @@\n             password += Math.random(numbersList[randomIndex])\n         }\n         else {\n             let randomIndex = Math.floor(Math.random() * symbolsList.length) \n-            password += Math.random(numbersList[randomIndex])\n+            password += Math.random(randomIndex[randomIndex])\n         }\n         // If randomNumber == 2 \n             // Generate Lower \n         // If random Number == 3 \n"
                },
                {
                    "date": 1688748587666,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,9 +55,9 @@\n \n function generatePassword(characterLength, upperFlag, lowerFlag, numberFlag, symbolsFLag) {\n     let upperCharsList = []\n     const lowerCharsList = ['a','b','c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n-    lowerCharList.forEach((e) => {\n+    lowerCharsList.forEach((e) => {\n         upperCharList.append(e.toUpperCase())\n     })\n     const numbersList = [0,1,2,3,4,5,6,7,8,9]\n     const symbolsList = ['!', \"@\", \"#\", \"$\", \"$\", \"%\", \"^\", \"&\", \"*\", \"(\", \")\", \"-\", \"+\", \"{\", \"}\", \"|\", \"/\", \",\", \".\", \"_\", \"=\", \";\", \"?\", \"<\", \">\"]; \n@@ -86,14 +86,8 @@\n         else {\n             let randomIndex = Math.floor(Math.random() * symbolsList.length) \n             password += Math.random(randomIndex[randomIndex])\n         }\n-        // If randomNumber == 2 \n-            // Generate Lower \n-        // If random Number == 3 \n-            // Generate Numbe \n-        // If randomNumber == 4: \n-            // Generate Symbol\n     }\n \n }\n \n"
                },
                {
                    "date": 1688748596332,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,9 +56,9 @@\n function generatePassword(characterLength, upperFlag, lowerFlag, numberFlag, symbolsFLag) {\n     let upperCharsList = []\n     const lowerCharsList = ['a','b','c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n     lowerCharsList.forEach((e) => {\n-        upperCharList.append(e.toUpperCase())\n+        upperCharsList.append(e.toUpperCase())\n     })\n     const numbersList = [0,1,2,3,4,5,6,7,8,9]\n     const symbolsList = ['!', \"@\", \"#\", \"$\", \"$\", \"%\", \"^\", \"&\", \"*\", \"(\", \")\", \"-\", \"+\", \"{\", \"}\", \"|\", \"/\", \",\", \".\", \"_\", \"=\", \";\", \"?\", \"<\", \">\"]; \n     let password = \"\"\n"
                },
                {
                    "date": 1688748651739,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,14 +66,15 @@\n     characterLength = Number(characterLength); \n     if(characterLength < 0) {\n         return password\n     }\n-    \n+\n+    // Generates a random password character based on the lenght inputted. \n     for(let i = 0; i < characterLength; i++) {\n         let randomNumber = Math.floor(Math.random() * 4) + 1\n         if(randomNumber === 1) {\n             // Random Index of UpperCharList\n-            let randomIndex = Math.floor(Math.random() * upperCharList.length) \n+            let randomIndex = Math.floor(Math.random() * upperCharsList.length) \n             password += Math.random(upperCharsList[randomIndex])\n         }\n         else if(randomNumber === 2) {\n             let randomIndex = Math.floor(Math.random() * lowerCharList.length) \n"
                },
                {
                    "date": 1688749077469,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,15 +70,15 @@\n \n     // Generates a random password character based on the lenght inputted. \n     for(let i = 0; i < characterLength; i++) {\n         let randomNumber = Math.floor(Math.random() * 4) + 1\n-        if(randomNumber === 1) {\n+        if(randomNumber === 1 && upperFlag === true) {\n             // Random Index of UpperCharList\n             let randomIndex = Math.floor(Math.random() * upperCharsList.length) \n             password += Math.random(upperCharsList[randomIndex])\n         }\n         else if(randomNumber === 2) {\n-            let randomIndex = Math.floor(Math.random() * lowerCharList.length) \n+            let randomIndex = Math.floor(Math.random() * lowerCharsList.length) \n             password += Math.random(lowerCharsList[randomIndex])\n         }\n         else if(randomNumber === 3) {\n             let randomIndex = Math.floor(Math.random() * number.length) \n"
                },
                {
                    "date": 1688749160569,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,9 +70,9 @@\n \n     // Generates a random password character based on the lenght inputted. \n     for(let i = 0; i < characterLength; i++) {\n         let randomNumber = Math.floor(Math.random() * 4) + 1\n-        if(randomNumber === 1 && upperFlag === true) {\n+        if(upperFlag) {\n             // Random Index of UpperCharList\n             let randomIndex = Math.floor(Math.random() * upperCharsList.length) \n             password += Math.random(upperCharsList[randomIndex])\n         }\n"
                },
                {
                    "date": 1688749166879,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,9 +75,9 @@\n             // Random Index of UpperCharList\n             let randomIndex = Math.floor(Math.random() * upperCharsList.length) \n             password += Math.random(upperCharsList[randomIndex])\n         }\n-        else if(randomNumber === 2) {\n+        else if(lowerFlag) {\n             let randomIndex = Math.floor(Math.random() * lowerCharsList.length) \n             password += Math.random(lowerCharsList[randomIndex])\n         }\n         else if(randomNumber === 3) {\n"
                },
                {
                    "date": 1688749175202,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -79,13 +79,13 @@\n         else if(lowerFlag) {\n             let randomIndex = Math.floor(Math.random() * lowerCharsList.length) \n             password += Math.random(lowerCharsList[randomIndex])\n         }\n-        else if(randomNumber === 3) {\n+        else if(numberFlag) {\n             let randomIndex = Math.floor(Math.random() * number.length) \n             password += Math.random(numbersList[randomIndex])\n         }\n-        else {\n+        else if(symbolsFLag) {\n             let randomIndex = Math.floor(Math.random() * symbolsList.length) \n             password += Math.random(randomIndex[randomIndex])\n         }\n     }\n"
                },
                {
                    "date": 1688749184207,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,8 +86,11 @@\n         }\n         else if(symbolsFLag) {\n             let randomIndex = Math.floor(Math.random() * symbolsList.length) \n             password += Math.random(randomIndex[randomIndex])\n+        } \n+        else {\n+            return \n         }\n     }\n \n }\n"
                },
                {
                    "date": 1688749201325,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -88,9 +88,9 @@\n             let randomIndex = Math.floor(Math.random() * symbolsList.length) \n             password += Math.random(randomIndex[randomIndex])\n         } \n         else {\n-            return \n+            return \"Please include some characters\"\n         }\n     }\n \n }\n"
                },
                {
                    "date": 1688749346967,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,9 +67,11 @@\n     if(characterLength < 0) {\n         return password\n     }\n \n-    // Generates a random password character based on the lenght inputted. \n+// Determine how many flags are true (So we can get the random number)\n+// Generate a random character from each flag that is true. \n+\n     for(let i = 0; i < characterLength; i++) {\n         let randomNumber = Math.floor(Math.random() * 4) + 1\n         if(upperFlag) {\n             // Random Index of UpperCharList\n"
                },
                {
                    "date": 1688750381333,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,17 +59,19 @@\n     lowerCharsList.forEach((e) => {\n         upperCharsList.append(e.toUpperCase())\n     })\n     const numbersList = [0,1,2,3,4,5,6,7,8,9]\n-    const symbolsList = ['!', \"@\", \"#\", \"$\", \"$\", \"%\", \"^\", \"&\", \"*\", \"(\", \")\", \"-\", \"+\", \"{\", \"}\", \"|\", \"/\", \",\", \".\", \"_\", \"=\", \";\", \"?\", \"<\", \">\"]; \n+    const symbolsList = ['!', \"@\", \"#\", \"$\", \"$\", \"%\", \"^\", \"&\", \"*\", \"(\", \")\", \"-\", \"+\", \"{\", \"}\", \"|\", \"/\", \",\", \".\", \"_\", \"=\", \";\", \"?\", \"<\", \">\"];\n+    let passwordArray = [] \n     let password = \"\"\n   \n     characterLength = Number(characterLength); \n     if(characterLength < 0) {\n         return password\n     }\n \n // Determine how many flags are true (So we can get the random number)\n+\n // Generate a random character from each flag that is true. \n \n     for(let i = 0; i < characterLength; i++) {\n         let randomNumber = Math.floor(Math.random() * 4) + 1\n"
                },
                {
                    "date": 1688750416714,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,8 +62,12 @@\n     const numbersList = [0,1,2,3,4,5,6,7,8,9]\n     const symbolsList = ['!', \"@\", \"#\", \"$\", \"$\", \"%\", \"^\", \"&\", \"*\", \"(\", \")\", \"-\", \"+\", \"{\", \"}\", \"|\", \"/\", \",\", \".\", \"_\", \"=\", \";\", \"?\", \"<\", \">\"];\n     let passwordArray = [] \n     let password = \"\"\n+\n+    if(upperFlag) {\n+        \n+    }\n   \n     characterLength = Number(characterLength); \n     if(characterLength < 0) {\n         return password\n"
                },
                {
                    "date": 1688750450122,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,9 +64,9 @@\n     let passwordArray = [] \n     let password = \"\"\n \n     if(upperFlag) {\n-        \n+        passwordArray.concat(upperCharsList)\n     }\n   \n     characterLength = Number(characterLength); \n     if(characterLength < 0) {\n"
                },
                {
                    "date": 1688750459280,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,9 +64,9 @@\n     let passwordArray = [] \n     let password = \"\"\n \n     if(upperFlag) {\n-        passwordArray.concat(upperCharsList)\n+        passwordArray = passwordArray.concat(upperCharsList)\n     }\n   \n     characterLength = Number(characterLength); \n     if(characterLength < 0) {\n"
                },
                {
                    "date": 1688750718235,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,117 @@\n+// Generate Random Password() \n+// Copy Password \n+// Update UI for Strength State\n+\n+const slider = document.querySelector(\"#character-length\");\n+const lengthLabel = document.querySelector(\".length-label\"); \n+\n+\n+// Dynamic Slider Bar\n+function progressSlider() {\n+    const sliderValue = slider.value; \n+    slider.style.background = `linear-gradient(to right, var(--neon-green) ${sliderValue}%, var(--very-dark-grey) ${sliderValue}%)`\n+}\n+// Character Length Label\n+function updateLengthLabel() {\n+    lengthLabel.textContent = slider.value; \n+}\n+\n+\n+function updateStrengthState(value) {\n+    // To Weak Password 1 - 5\n+    const columns = document.querySelectorAll(\".column\"); \n+    const strengthLabel = document.querySelector(\".strength-state h2\"); \n+    columns.forEach((element) => {\n+        element.classList.remove(\"weak\", \"medium\", \"strong\"); \n+    })\n+    if(value <= 5) {\n+        strengthLabel.textContent = \"TOO WEAK!\"; \n+        columns[0].classList.add(\"to-weak\"); \n+    } \n+    // Weak Password  5 - 10 \n+    else if(value >= 5 && value <= 10 ) {\n+        strengthLabel.textContent = \"WEAK!\"; \n+        columns[0].classList.add(\"weak\"); \n+        columns[1].classList.add(\"weak\"); \n+    }\n+    // Medium - 10 - 50 \n+    else if(value >= 10 && value <= 50 ) {\n+        strengthLabel.textContent = \"MEDIUM\"; \n+        columns[0].classList.add(\"medium\"); \n+        columns[1].classList.add(\"medium\"); \n+        columns[2].classList.add(\"medium\"); \n+    }\n+    // Strong - 50 - 100 \n+    else {\n+        strengthLabel.textContent = \"STRONG\"; \n+        columns[0].classList.add(\"strong\"); \n+        columns[1].classList.add(\"strong\"); \n+        columns[2].classList.add(\"strong\"); \n+        columns[3].classList.add(\"strong\"); \n+    }\n+\n+}\n+\n+\n+function generatePassword(characterLength, upperFlag, lowerFlag, numberFlag, symbolsFLag) {\n+    let upperCharsList = []\n+    const lowerCharsList = ['a','b','c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n+    lowerCharsList.forEach((e) => {\n+        upperCharsList.append(e.toUpperCase())\n+    })\n+    const numbersList = [0,1,2,3,4,5,6,7,8,9]\n+    const symbolsList = ['!', \"@\", \"#\", \"$\", \"$\", \"%\", \"^\", \"&\", \"*\", \"(\", \")\", \"-\", \"+\", \"{\", \"}\", \"|\", \"/\", \",\", \".\", \"_\", \"=\", \";\", \"?\", \"<\", \">\"];\n+    let passwordArray = [] \n+    let password = \"\"\n+\n+    if(upperFlag) {\n+        passwordArray = passwordArray.concat(upperCharsList)\n+    }\n+    if(lowerFlag)\n+  \n+    characterLength = Number(characterLength); \n+    if(characterLength < 0) {\n+        return password\n+    }\n+\n+// Determine how many flags are true (So we can get the random number)\n+\n+// Generate a random character from each flag that is true. \n+\n+    for(let i = 0; i < characterLength; i++) {\n+        let randomNumber = Math.floor(Math.random() * 4) + 1\n+        if(upperFlag) {\n+            // Random Index of UpperCharList\n+            let randomIndex = Math.floor(Math.random() * upperCharsList.length) \n+            password += Math.random(upperCharsList[randomIndex])\n+        }\n+        else if(lowerFlag) {\n+            let randomIndex = Math.floor(Math.random() * lowerCharsList.length) \n+            password += Math.random(lowerCharsList[randomIndex])\n+        }\n+        else if(numberFlag) {\n+            let randomIndex = Math.floor(Math.random() * number.length) \n+            password += Math.random(numbersList[randomIndex])\n+        }\n+        else if(symbolsFLag) {\n+            let randomIndex = Math.floor(Math.random() * symbolsList.length) \n+            password += Math.random(randomIndex[randomIndex])\n+        } \n+        else {\n+            return \"Please include some characters\"\n+        }\n+    }\n+\n+}\n+\n+\n+progressSlider(); \n+slider.addEventListener(\"input\", () => {\n+    progressSlider(); \n+    updateLengthLabel();\n+    updateStrengthState(slider.value); \n+})\n+\n+console.log(slider.value);\n+\n+\n"
                },
                {
                    "date": 1688750730463,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,125 +66,11 @@\n \n     if(upperFlag) {\n         passwordArray = passwordArray.concat(upperCharsList)\n     }\n-    if(lowerFlag)\n-  \n-    characterLength = Number(characterLength); \n-    if(characterLength < 0) {\n-        return password\n+    if(lowerFlag) {\n+        passwordArray = passwordArray.concat(lowerCharsList)\n     }\n-\n-// Determine how many flags are true (So we can get the random number)\n-\n-// Generate a random character from each flag that is true. \n-\n-    for(let i = 0; i < characterLength; i++) {\n-        let randomNumber = Math.floor(Math.random() * 4) + 1\n-        if(upperFlag) {\n-            // Random Index of UpperCharList\n-            let randomIndex = Math.floor(Math.random() * upperCharsList.length) \n-            password += Math.random(upperCharsList[randomIndex])\n-        }\n-        else if(lowerFlag) {\n-            let randomIndex = Math.floor(Math.random() * lowerCharsList.length) \n-            password += Math.random(lowerCharsList[randomIndex])\n-        }\n-        else if(numberFlag) {\n-            let randomIndex = Math.floor(Math.random() * number.length) \n-            password += Math.random(numbersList[randomIndex])\n-        }\n-        else if(symbolsFLag) {\n-            let randomIndex = Math.floor(Math.random() * symbolsList.length) \n-            password += Math.random(randomIndex[randomIndex])\n-        } \n-        else {\n-            return \"Please include some characters\"\n-        }\n-    }\n-\n-}\n-\n-\n-progressSlider(); \n-slider.addEventListener(\"input\", () => {\n-    progressSlider(); \n-    updateLengthLabel();\n-    updateStrengthState(slider.value); \n-})\n-\n-console.log(slider.value);\n-\n-\n-// Generate Random Password() \n-// Copy Password \n-// Update UI for Strength State\n-\n-const slider = document.querySelector(\"#character-length\");\n-const lengthLabel = document.querySelector(\".length-label\"); \n-\n-\n-// Dynamic Slider Bar\n-function progressSlider() {\n-    const sliderValue = slider.value; \n-    slider.style.background = `linear-gradient(to right, var(--neon-green) ${sliderValue}%, var(--very-dark-grey) ${sliderValue}%)`\n-}\n-// Character Length Label\n-function updateLengthLabel() {\n-    lengthLabel.textContent = slider.value; \n-}\n-\n-\n-function updateStrengthState(value) {\n-    // To Weak Password 1 - 5\n-    const columns = document.querySelectorAll(\".column\"); \n-    const strengthLabel = document.querySelector(\".strength-state h2\"); \n-    columns.forEach((element) => {\n-        element.classList.remove(\"weak\", \"medium\", \"strong\"); \n-    })\n-    if(value <= 5) {\n-        strengthLabel.textContent = \"TOO WEAK!\"; \n-        columns[0].classList.add(\"to-weak\"); \n-    } \n-    // Weak Password  5 - 10 \n-    else if(value >= 5 && value <= 10 ) {\n-        strengthLabel.textContent = \"WEAK!\"; \n-        columns[0].classList.add(\"weak\"); \n-        columns[1].classList.add(\"weak\"); \n-    }\n-    // Medium - 10 - 50 \n-    else if(value >= 10 && value <= 50 ) {\n-        strengthLabel.textContent = \"MEDIUM\"; \n-        columns[0].classList.add(\"medium\"); \n-        columns[1].classList.add(\"medium\"); \n-        columns[2].classList.add(\"medium\"); \n-    }\n-    // Strong - 50 - 100 \n-    else {\n-        strengthLabel.textContent = \"STRONG\"; \n-        columns[0].classList.add(\"strong\"); \n-        columns[1].classList.add(\"strong\"); \n-        columns[2].classList.add(\"strong\"); \n-        columns[3].classList.add(\"strong\"); \n-    }\n-\n-}\n-\n-\n-function generatePassword(characterLength, upperFlag, lowerFlag, numberFlag, symbolsFLag) {\n-    let upperCharsList = []\n-    const lowerCharsList = ['a','b','c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n-    lowerCharsList.forEach((e) => {\n-        upperCharsList.append(e.toUpperCase())\n-    })\n-    const numbersList = [0,1,2,3,4,5,6,7,8,9]\n-    const symbolsList = ['!', \"@\", \"#\", \"$\", \"$\", \"%\", \"^\", \"&\", \"*\", \"(\", \")\", \"-\", \"+\", \"{\", \"}\", \"|\", \"/\", \",\", \".\", \"_\", \"=\", \";\", \"?\", \"<\", \">\"];\n-    let passwordArray = [] \n-    let password = \"\"\n-\n-    if(upperFlag) {\n-        passwordArray = passwordArray.concat(upperCharsList)\n-    }\n   \n     characterLength = Number(characterLength); \n     if(characterLength < 0) {\n         return password\n"
                },
                {
                    "date": 1688750746510,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,13 +64,17 @@\n     let passwordArray = [] \n     let password = \"\"\n \n     if(upperFlag) {\n-        passwordArray = passwordArray.concat(upperCharsList)\n+        passwordArray = passwordArray.concat(upperCharsList); \n     }\n     if(lowerFlag) {\n-        passwordArray = passwordArray.concat(lowerCharsList)\n+        passwordArray = passwordArray.concat(lowerCharsList); \n     }\n+\n+    if(symbolsFLag) {\n+        passwordArray = passwordArray.concat(symbolsFLag)\n+    }\n   \n     characterLength = Number(characterLength); \n     if(characterLength < 0) {\n         return password\n"
                },
                {
                    "date": 1688750752988,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,10 +71,12 @@\n         passwordArray = passwordArray.concat(lowerCharsList); \n     }\n \n     if(symbolsFLag) {\n-        passwordArray = passwordArray.concat(symbolsFLag)\n+        passwordArray = passwordArray.concat(symbolsFLag);\n     }\n+\n+    if(numberFlag)\n   \n     characterLength = Number(characterLength); \n     if(characterLength < 0) {\n         return password\n"
                },
                {
                    "date": 1688750762287,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,9 +74,11 @@\n     if(symbolsFLag) {\n         passwordArray = passwordArray.concat(symbolsFLag);\n     }\n \n-    if(numberFlag)\n+    if(numberFlag) {\n+        passwordArray = passwordArray.concat(numberFlag)\n+    }\n   \n     characterLength = Number(characterLength); \n     if(characterLength < 0) {\n         return password\n"
                },
                {
                    "date": 1688750776801,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,9 +62,12 @@\n     const numbersList = [0,1,2,3,4,5,6,7,8,9]\n     const symbolsList = ['!', \"@\", \"#\", \"$\", \"$\", \"%\", \"^\", \"&\", \"*\", \"(\", \")\", \"-\", \"+\", \"{\", \"}\", \"|\", \"/\", \",\", \".\", \"_\", \"=\", \";\", \"?\", \"<\", \">\"];\n     let passwordArray = [] \n     let password = \"\"\n-\n+    characterLength = Number(characterLength); \n+    if(characterLength < 0) {\n+        return password\n+    }\n     if(upperFlag) {\n         passwordArray = passwordArray.concat(upperCharsList); \n     }\n     if(lowerFlag) {\n@@ -73,17 +76,13 @@\n \n     if(symbolsFLag) {\n         passwordArray = passwordArray.concat(symbolsFLag);\n     }\n-\n     if(numberFlag) {\n-        passwordArray = passwordArray.concat(numberFlag)\n+        passwordArray = passwordArray.concat(numberFlag); \n     }\n   \n-    characterLength = Number(characterLength); \n-    if(characterLength < 0) {\n-        return password\n-    }\n+    \n \n // Determine how many flags are true (So we can get the random number)\n \n // Generate a random character from each flag that is true. \n"
                },
                {
                    "date": 1688750782831,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,8 +63,9 @@\n     const symbolsList = ['!', \"@\", \"#\", \"$\", \"$\", \"%\", \"^\", \"&\", \"*\", \"(\", \")\", \"-\", \"+\", \"{\", \"}\", \"|\", \"/\", \",\", \".\", \"_\", \"=\", \";\", \"?\", \"<\", \">\"];\n     let passwordArray = [] \n     let password = \"\"\n     characterLength = Number(characterLength); \n+\n     if(characterLength < 0) {\n         return password\n     }\n     if(upperFlag) {\n@@ -80,14 +81,9 @@\n     if(numberFlag) {\n         passwordArray = passwordArray.concat(numberFlag); \n     }\n   \n-    \n \n-// Determine how many flags are true (So we can get the random number)\n-\n-// Generate a random character from each flag that is true. \n-\n     for(let i = 0; i < characterLength; i++) {\n         let randomNumber = Math.floor(Math.random() * 4) + 1\n         if(upperFlag) {\n             // Random Index of UpperCharList\n"
                },
                {
                    "date": 1688750826110,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,9 +73,8 @@\n     }\n     if(lowerFlag) {\n         passwordArray = passwordArray.concat(lowerCharsList); \n     }\n-\n     if(symbolsFLag) {\n         passwordArray = passwordArray.concat(symbolsFLag);\n     }\n     if(numberFlag) {\n@@ -84,28 +83,9 @@\n   \n \n     for(let i = 0; i < characterLength; i++) {\n         let randomNumber = Math.floor(Math.random() * 4) + 1\n-        if(upperFlag) {\n-            // Random Index of UpperCharList\n-            let randomIndex = Math.floor(Math.random() * upperCharsList.length) \n-            password += Math.random(upperCharsList[randomIndex])\n-        }\n-        else if(lowerFlag) {\n-            let randomIndex = Math.floor(Math.random() * lowerCharsList.length) \n-            password += Math.random(lowerCharsList[randomIndex])\n-        }\n-        else if(numberFlag) {\n-            let randomIndex = Math.floor(Math.random() * number.length) \n-            password += Math.random(numbersList[randomIndex])\n-        }\n-        else if(symbolsFLag) {\n-            let randomIndex = Math.floor(Math.random() * symbolsList.length) \n-            password += Math.random(randomIndex[randomIndex])\n-        } \n-        else {\n-            return \"Please include some characters\"\n-        }\n+\n     }\n \n }\n \n"
                },
                {
                    "date": 1688750849637,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,9 +74,9 @@\n     if(lowerFlag) {\n         passwordArray = passwordArray.concat(lowerCharsList); \n     }\n     if(symbolsFLag) {\n-        passwordArray = passwordArray.concat(symbolsFLag);\n+        passwordArray = passwordArray.concat(symbolsList);\n     }\n     if(numberFlag) {\n         passwordArray = passwordArray.concat(numberFlag); \n     }\n"
                },
                {
                    "date": 1688750868692,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,14 +77,14 @@\n     if(symbolsFLag) {\n         passwordArray = passwordArray.concat(symbolsList);\n     }\n     if(numberFlag) {\n-        passwordArray = passwordArray.concat(numberFlag); \n+        passwordArray = passwordArray.concat(numbersList); \n     }\n   \n \n     for(let i = 0; i < characterLength; i++) {\n-        let randomNumber = Math.floor(Math.random() * 4) + 1\n+        let randomNumber = Math.floor(Math.random() * passwordArray.length) + 1\n \n     }\n \n }\n"
                },
                {
                    "date": 1688750909271,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,9 +82,10 @@\n     }\n   \n \n     for(let i = 0; i < characterLength; i++) {\n-        let randomNumber = Math.floor(Math.random() * passwordArray.length) + 1\n+        let randomNumber = Math.floor(Math.random() * passwordArray.length); \n+        password += passwordArray[randomNumber]\n \n     }\n \n }\n"
                },
                {
                    "date": 1688750926322,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,12 +83,13 @@\n   \n \n     for(let i = 0; i < characterLength; i++) {\n         let randomNumber = Math.floor(Math.random() * passwordArray.length); \n-        password += passwordArray[randomNumber]\n-\n+        password += passwordArray[randomNumber];\n     }\n \n+    return password\n+\n }\n \n \n progressSlider(); \n"
                },
                {
                    "date": 1688751170064,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,9 +56,9 @@\n function generatePassword(characterLength, upperFlag, lowerFlag, numberFlag, symbolsFLag) {\n     let upperCharsList = []\n     const lowerCharsList = ['a','b','c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n     lowerCharsList.forEach((e) => {\n-        upperCharsList.append(e.toUpperCase())\n+        upperCharsList.push(e.toUpperCase())\n     })\n     const numbersList = [0,1,2,3,4,5,6,7,8,9]\n     const symbolsList = ['!', \"@\", \"#\", \"$\", \"$\", \"%\", \"^\", \"&\", \"*\", \"(\", \")\", \"-\", \"+\", \"{\", \"}\", \"|\", \"/\", \",\", \".\", \"_\", \"=\", \";\", \"?\", \"<\", \">\"];\n     let passwordArray = [] \n"
                },
                {
                    "date": 1688751175530,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,22 +67,9 @@\n \n     if(characterLength < 0) {\n         return password\n     }\n-    if(upperFlag) {\n-        passwordArray = passwordArray.concat(upperCharsList); \n-    }\n-    if(lowerFlag) {\n-        passwordArray = passwordArray.concat(lowerCharsList); \n-    }\n-    if(symbolsFLag) {\n-        passwordArray = passwordArray.concat(symbolsList);\n-    }\n-    if(numberFlag) {\n-        passwordArray = passwordArray.concat(numbersList); \n-    }\n-  \n-\n+    \n     for(let i = 0; i < characterLength; i++) {\n         let randomNumber = Math.floor(Math.random() * passwordArray.length); \n         password += passwordArray[randomNumber];\n     }\n"
                },
                {
                    "date": 1688751452834,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,13 +67,8 @@\n \n     if(characterLength < 0) {\n         return password\n     }\n-    \n-    for(let i = 0; i < characterLength; i++) {\n-        let randomNumber = Math.floor(Math.random() * passwordArray.length); \n-        password += passwordArray[randomNumber];\n-    }\n \n     return password\n \n }\n"
                },
                {
                    "date": 1688751466963,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,16 +60,17 @@\n         upperCharsList.push(e.toUpperCase())\n     })\n     const numbersList = [0,1,2,3,4,5,6,7,8,9]\n     const symbolsList = ['!', \"@\", \"#\", \"$\", \"$\", \"%\", \"^\", \"&\", \"*\", \"(\", \")\", \"-\", \"+\", \"{\", \"}\", \"|\", \"/\", \",\", \".\", \"_\", \"=\", \";\", \"?\", \"<\", \">\"];\n-    let passwordArray = [] \n     let password = \"\"\n     characterLength = Number(characterLength); \n \n     if(characterLength < 0) {\n         return password\n     }\n \n+    while()\n+\n     return password\n \n }\n \n"
                },
                {
                    "date": 1688751481922,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,9 +67,9 @@\n     if(characterLength < 0) {\n         return password\n     }\n \n-    while()\n+    while(password.length < characterLength)\n \n     return password\n \n }\n"
                },
                {
                    "date": 1688751503195,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,89 @@\n+// Generate Random Password() \n+// Copy Password \n+// Update UI for Strength State\n+\n+const slider = document.querySelector(\"#character-length\");\n+const lengthLabel = document.querySelector(\".length-label\"); \n+\n+\n+// Dynamic Slider Bar\n+function progressSlider() {\n+    const sliderValue = slider.value; \n+    slider.style.background = `linear-gradient(to right, var(--neon-green) ${sliderValue}%, var(--very-dark-grey) ${sliderValue}%)`\n+}\n+// Character Length Label\n+function updateLengthLabel() {\n+    lengthLabel.textContent = slider.value; \n+}\n+\n+\n+function updateStrengthState(value) {\n+    // To Weak Password 1 - 5\n+    const columns = document.querySelectorAll(\".column\"); \n+    const strengthLabel = document.querySelector(\".strength-state h2\"); \n+    columns.forEach((element) => {\n+        element.classList.remove(\"weak\", \"medium\", \"strong\"); \n+    })\n+    if(value <= 5) {\n+        strengthLabel.textContent = \"TOO WEAK!\"; \n+        columns[0].classList.add(\"to-weak\"); \n+    } \n+    // Weak Password  5 - 10 \n+    else if(value >= 5 && value <= 10 ) {\n+        strengthLabel.textContent = \"WEAK!\"; \n+        columns[0].classList.add(\"weak\"); \n+        columns[1].classList.add(\"weak\"); \n+    }\n+    // Medium - 10 - 50 \n+    else if(value >= 10 && value <= 50 ) {\n+        strengthLabel.textContent = \"MEDIUM\"; \n+        columns[0].classList.add(\"medium\"); \n+        columns[1].classList.add(\"medium\"); \n+        columns[2].classList.add(\"medium\"); \n+    }\n+    // Strong - 50 - 100 \n+    else {\n+        strengthLabel.textContent = \"STRONG\"; \n+        columns[0].classList.add(\"strong\"); \n+        columns[1].classList.add(\"strong\"); \n+        columns[2].classList.add(\"strong\"); \n+        columns[3].classList.add(\"strong\"); \n+    }\n+\n+}\n+\n+\n+function generatePassword(characterLength, upperFlag, lowerFlag, numberFlag, symbolsFLag) {\n+    let upperCharsList = []\n+    const lowerCharsList = ['a','b','c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n+    lowerCharsList.forEach((e) => {\n+        upperCharsList.push(e.toUpperCase())\n+    })\n+    const numbersList = [0,1,2,3,4,5,6,7,8,9]\n+    const symbolsList = ['!', \"@\", \"#\", \"$\", \"$\", \"%\", \"^\", \"&\", \"*\", \"(\", \")\", \"-\", \"+\", \"{\", \"}\", \"|\", \"/\", \",\", \".\", \"_\", \"=\", \";\", \"?\", \"<\", \">\"];\n+    let password = \"\"\n+    characterLength = Number(characterLength); \n+\n+    if(characterLength < 0) {\n+        return password\n+    }\n+\n+    while(password.length < characterLength) {\n+        \n+    }\n+\n+    return password\n+\n+}\n+\n+\n+progressSlider(); \n+slider.addEventListener(\"input\", () => {\n+    progressSlider(); \n+    updateLengthLabel();\n+    updateStrengthState(slider.value); \n+})\n+\n+console.log(slider.value);\n+\n+\n"
                },
                {
                    "date": 1688751509007,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,9 +68,11 @@\n         return password\n     }\n \n     while(password.length < characterLength) {\n-        \n+        if(upperFlag) {\n+            \n+        }\n     }\n \n     return password\n \n@@ -86,91 +88,4 @@\n \n console.log(slider.value);\n \n \n-// Generate Random Password() \n-// Copy Password \n-// Update UI for Strength State\n-\n-const slider = document.querySelector(\"#character-length\");\n-const lengthLabel = document.querySelector(\".length-label\"); \n-\n-\n-// Dynamic Slider Bar\n-function progressSlider() {\n-    const sliderValue = slider.value; \n-    slider.style.background = `linear-gradient(to right, var(--neon-green) ${sliderValue}%, var(--very-dark-grey) ${sliderValue}%)`\n-}\n-// Character Length Label\n-function updateLengthLabel() {\n-    lengthLabel.textContent = slider.value; \n-}\n-\n-\n-function updateStrengthState(value) {\n-    // To Weak Password 1 - 5\n-    const columns = document.querySelectorAll(\".column\"); \n-    const strengthLabel = document.querySelector(\".strength-state h2\"); \n-    columns.forEach((element) => {\n-        element.classList.remove(\"weak\", \"medium\", \"strong\"); \n-    })\n-    if(value <= 5) {\n-        strengthLabel.textContent = \"TOO WEAK!\"; \n-        columns[0].classList.add(\"to-weak\"); \n-    } \n-    // Weak Password  5 - 10 \n-    else if(value >= 5 && value <= 10 ) {\n-        strengthLabel.textContent = \"WEAK!\"; \n-        columns[0].classList.add(\"weak\"); \n-        columns[1].classList.add(\"weak\"); \n-    }\n-    // Medium - 10 - 50 \n-    else if(value >= 10 && value <= 50 ) {\n-        strengthLabel.textContent = \"MEDIUM\"; \n-        columns[0].classList.add(\"medium\"); \n-        columns[1].classList.add(\"medium\"); \n-        columns[2].classList.add(\"medium\"); \n-    }\n-    // Strong - 50 - 100 \n-    else {\n-        strengthLabel.textContent = \"STRONG\"; \n-        columns[0].classList.add(\"strong\"); \n-        columns[1].classList.add(\"strong\"); \n-        columns[2].classList.add(\"strong\"); \n-        columns[3].classList.add(\"strong\"); \n-    }\n-\n-}\n-\n-\n-function generatePassword(characterLength, upperFlag, lowerFlag, numberFlag, symbolsFLag) {\n-    let upperCharsList = []\n-    const lowerCharsList = ['a','b','c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n-    lowerCharsList.forEach((e) => {\n-        upperCharsList.push(e.toUpperCase())\n-    })\n-    const numbersList = [0,1,2,3,4,5,6,7,8,9]\n-    const symbolsList = ['!', \"@\", \"#\", \"$\", \"$\", \"%\", \"^\", \"&\", \"*\", \"(\", \")\", \"-\", \"+\", \"{\", \"}\", \"|\", \"/\", \",\", \".\", \"_\", \"=\", \";\", \"?\", \"<\", \">\"];\n-    let password = \"\"\n-    characterLength = Number(characterLength); \n-\n-    if(characterLength < 0) {\n-        return password\n-    }\n-\n-    while(password.length < characterLength)\n-\n-    return password\n-\n-}\n-\n-\n-progressSlider(); \n-slider.addEventListener(\"input\", () => {\n-    progressSlider(); \n-    updateLengthLabel();\n-    updateStrengthState(slider.value); \n-})\n-\n-console.log(slider.value);\n-\n-\n"
                },
                {
                    "date": 1688751584067,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,21 +60,20 @@\n         upperCharsList.push(e.toUpperCase())\n     })\n     const numbersList = [0,1,2,3,4,5,6,7,8,9]\n     const symbolsList = ['!', \"@\", \"#\", \"$\", \"$\", \"%\", \"^\", \"&\", \"*\", \"(\", \")\", \"-\", \"+\", \"{\", \"}\", \"|\", \"/\", \",\", \".\", \"_\", \"=\", \";\", \"?\", \"<\", \">\"];\n+    let passwordArray = [] \n     let password = \"\"\n     characterLength = Number(characterLength); \n \n     if(characterLength < 0) {\n         return password\n     }\n \n-    while(password.length < characterLength) {\n-        if(upperFlag) {\n-            \n-        }\n-    }\n+    while(password.length < characterLength)\n \n+    let randomNumber = Math.floor(Math.random() * passwordArray.length); \n+    password += passwordArray[randomNumber];\n     return password\n \n }\n \n"
                },
                {
                    "date": 1688751591874,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,11 +68,13 @@\n     if(characterLength < 0) {\n         return password\n     }\n \n-    while(password.length < characterLength)\n+    while(password.length < characterLength) {\n+        let randomNumber = Math.floor(Math.random() * passwordArray.length); \n+    }\n \n-    let randomNumber = Math.floor(Math.random() * passwordArray.length); \n+   \n     password += passwordArray[randomNumber];\n     return password\n \n }\n"
                },
                {
                    "date": 1688751600749,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,12 +69,11 @@\n         return password\n     }\n \n     while(password.length < characterLength) {\n+        if(upper)\n         let randomNumber = Math.floor(Math.random() * passwordArray.length); \n     }\n-\n-   \n     password += passwordArray[randomNumber];\n     return password\n \n }\n"
                },
                {
                    "date": 1688751613081,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,9 +69,9 @@\n         return password\n     }\n \n     while(password.length < characterLength) {\n-        if(upper)\n+        if(upperFlag)\n         let randomNumber = Math.floor(Math.random() * passwordArray.length); \n     }\n     password += passwordArray[randomNumber];\n     return password\n"
                },
                {
                    "date": 1688751619582,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,10 +69,12 @@\n         return password\n     }\n \n     while(password.length < characterLength) {\n-        if(upperFlag)\n-        let randomNumber = Math.floor(Math.random() * passwordArray.length); \n+        if(upperFlag) {\n+            let randomNumber = Math.floor(Math.random() * passwordArray.length); \n+        }\n+     \n     }\n     password += passwordArray[randomNumber];\n     return password\n \n"
                },
                {
                    "date": 1688751636709,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,12 +71,13 @@\n \n     while(password.length < characterLength) {\n         if(upperFlag) {\n             let randomNumber = Math.floor(Math.random() * passwordArray.length); \n+            password += upperCharsList[randomNumber]\n         }\n      \n     }\n-    password += passwordArray[randomNumber];\n+\n     return password\n \n }\n \n"
                },
                {
                    "date": 1688751705187,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,10 +70,10 @@\n     }\n \n     while(password.length < characterLength) {\n         if(upperFlag) {\n-            let randomNumber = Math.floor(Math.random() * passwordArray.length); \n-            password += upperCharsList[randomNumber]\n+            let randomNumber = Math.floor(Math.random() * upperCharsList.length); \n+            password += upperCharsList[randomNumber];\n         }\n      \n     }\n \n"
                },
                {
                    "date": 1688751733622,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,9 @@\n \n }\n \n \n-function generatePassword(characterLength, upperFlag, lowerFlag, numberFlag, symbolsFLag) {\n+function generatePassword(characterLength, upperFlag, lowerFlag, numberFlag, symbolsFlag) {\n     let upperCharsList = []\n     const lowerCharsList = ['a','b','c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n     lowerCharsList.forEach((e) => {\n         upperCharsList.push(e.toUpperCase())\n@@ -73,8 +73,9 @@\n         if(upperFlag) {\n             let randomNumber = Math.floor(Math.random() * upperCharsList.length); \n             password += upperCharsList[randomNumber];\n         }\n+        if(lowerF)\n      \n     }\n \n     return password\n"
                },
                {
                    "date": 1688751784248,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,9 +73,12 @@\n         if(upperFlag) {\n             let randomNumber = Math.floor(Math.random() * upperCharsList.length); \n             password += upperCharsList[randomNumber];\n         }\n-        if(lowerF)\n+        if(lowerFlag) {\n+            let randomNumber = Math.floor(Math.random() * upperCharsList.length); \n+            password += upperCharsList[randomNumber];\n+        }\n      \n     }\n \n     return password\n"
                },
                {
                    "date": 1688751793343,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,10 +74,10 @@\n             let randomNumber = Math.floor(Math.random() * upperCharsList.length); \n             password += upperCharsList[randomNumber];\n         }\n         if(lowerFlag) {\n-            let randomNumber = Math.floor(Math.random() * upperCharsList.length); \n-            password += upperCharsList[randomNumber];\n+            let randomNumber = Math.floor(Math.random() * lowerCharsList.length); \n+            password += lowerCharsListCharsList[randomNumber];\n         }\n      \n     }\n \n"
                },
                {
                    "date": 1688751804367,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,10 +75,13 @@\n             password += upperCharsList[randomNumber];\n         }\n         if(lowerFlag) {\n             let randomNumber = Math.floor(Math.random() * lowerCharsList.length); \n-            password += lowerCharsListCharsList[randomNumber];\n+            password += lowerCharsList[randomNumber];\n         }\n+        if(numberFlag) {\n+            \n+        }\n      \n     }\n \n     return password\n"
                },
                {
                    "date": 1688751819352,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,9 +78,10 @@\n             let randomNumber = Math.floor(Math.random() * lowerCharsList.length); \n             password += lowerCharsList[randomNumber];\n         }\n         if(numberFlag) {\n-            \n+            let randomNumber = Math.floor(Math.random() * numberFlag.length); \n+            password += lowerCharsList[randomNumber];\n         }\n      \n     }\n \n"
                },
                {
                    "date": 1688751828616,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -79,9 +79,9 @@\n             password += lowerCharsList[randomNumber];\n         }\n         if(numberFlag) {\n             let randomNumber = Math.floor(Math.random() * numberFlag.length); \n-            password += lowerCharsList[randomNumber];\n+            password += numbersList[randomNumber];\n         }\n      \n     }\n \n"
                },
                {
                    "date": 1688751835471,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -81,8 +81,12 @@\n         if(numberFlag) {\n             let randomNumber = Math.floor(Math.random() * numberFlag.length); \n             password += numbersList[randomNumber];\n         }\n+        if(numberFlag) {\n+            let randomNumber = Math.floor(Math.random() * numberFlag.length); \n+            password += numbersList[randomNumber];\n+        }\n      \n     }\n \n     return password\n"
                },
                {
                    "date": 1688751840694,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -81,9 +81,9 @@\n         if(numberFlag) {\n             let randomNumber = Math.floor(Math.random() * numberFlag.length); \n             password += numbersList[randomNumber];\n         }\n-        if(numberFlag) {\n+        if(symbolsFlag) {\n             let randomNumber = Math.floor(Math.random() * numberFlag.length); \n             password += numbersList[randomNumber];\n         }\n      \n"
                },
                {
                    "date": 1688751861492,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,9 +82,9 @@\n             let randomNumber = Math.floor(Math.random() * numberFlag.length); \n             password += numbersList[randomNumber];\n         }\n         if(symbolsFlag) {\n-            let randomNumber = Math.floor(Math.random() * numberFlag.length); \n+            let randomNumber = Math.floor(Math.random() * symbolsFlag.length); \n             password += numbersList[randomNumber];\n         }\n      \n     }\n"
                },
                {
                    "date": 1688751871703,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,9 +83,9 @@\n             password += numbersList[randomNumber];\n         }\n         if(symbolsFlag) {\n             let randomNumber = Math.floor(Math.random() * symbolsFlag.length); \n-            password += numbersList[randomNumber];\n+            password += symbolsListsList[randomNumber];\n         }\n      \n     }\n \n"
                },
                {
                    "date": 1688751882554,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,8 +69,9 @@\n         return password\n     }\n \n     while(password.length < characterLength) {\n+        let randomNumber = 0\n         if(upperFlag) {\n             let randomNumber = Math.floor(Math.random() * upperCharsList.length); \n             password += upperCharsList[randomNumber];\n         }\n"
                },
                {
                    "date": 1688751891250,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,17 +71,17 @@\n \n     while(password.length < characterLength) {\n         let randomNumber = 0\n         if(upperFlag) {\n-            let randomNumber = Math.floor(Math.random() * upperCharsList.length); \n+            randomNumber = Math.floor(Math.random() * upperCharsList.length); \n             password += upperCharsList[randomNumber];\n         }\n         if(lowerFlag) {\n-            let randomNumber = Math.floor(Math.random() * lowerCharsList.length); \n+            srandomNumber = Math.floor(Math.random() * lowerCharsList.length); \n             password += lowerCharsList[randomNumber];\n         }\n         if(numberFlag) {\n-            let randomNumber = Math.floor(Math.random() * numberFlag.length); \n+            randomNumber = Math.floor(Math.random() * numberFlag.length); \n             password += numbersList[randomNumber];\n         }\n         if(symbolsFlag) {\n             let randomNumber = Math.floor(Math.random() * symbolsFlag.length); \n"
                },
                {
                    "date": 1688751896574,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,17 +75,17 @@\n             randomNumber = Math.floor(Math.random() * upperCharsList.length); \n             password += upperCharsList[randomNumber];\n         }\n         if(lowerFlag) {\n-            srandomNumber = Math.floor(Math.random() * lowerCharsList.length); \n+            randomNumber = Math.floor(Math.random() * lowerCharsList.length); \n             password += lowerCharsList[randomNumber];\n         }\n         if(numberFlag) {\n             randomNumber = Math.floor(Math.random() * numberFlag.length); \n             password += numbersList[randomNumber];\n         }\n         if(symbolsFlag) {\n-            let randomNumber = Math.floor(Math.random() * symbolsFlag.length); \n+            randomNumber = Math.floor(Math.random() * symbolsFlag.length); \n             password += symbolsListsList[randomNumber];\n         }\n      \n     }\n"
                },
                {
                    "date": 1688752111164,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,9 @@\n \n }\n \n \n-function generatePassword(characterLength, upperFlag, lowerFlag, numberFlag, symbolsFlag) {\n+function generatePassword(characterLength, flagArray) {\n     let upperCharsList = []\n     const lowerCharsList = ['a','b','c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n     lowerCharsList.forEach((e) => {\n         upperCharsList.push(e.toUpperCase())\n"
                },
                {
                    "date": 1688752145705,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,28 +68,28 @@\n     if(characterLength < 0) {\n         return password\n     }\n \n-    while(password.length < characterLength) {\n-        let randomNumber = 0\n-        if(upperFlag) {\n-            randomNumber = Math.floor(Math.random() * upperCharsList.length); \n-            password += upperCharsList[randomNumber];\n-        }\n-        if(lowerFlag) {\n-            randomNumber = Math.floor(Math.random() * lowerCharsList.length); \n-            password += lowerCharsList[randomNumber];\n-        }\n-        if(numberFlag) {\n-            randomNumber = Math.floor(Math.random() * numberFlag.length); \n-            password += numbersList[randomNumber];\n-        }\n-        if(symbolsFlag) {\n-            randomNumber = Math.floor(Math.random() * symbolsFlag.length); \n-            password += symbolsListsList[randomNumber];\n-        }\n+    // while(password.length < characterLength) {\n+    //     let randomNumber = 0\n+    //     if(upperFlag) {\n+    //         randomNumber = Math.floor(Math.random() * upperCharsList.length); \n+    //         password += upperCharsList[randomNumber];\n+    //     }\n+    //     if(lowerFlag) {\n+    //         randomNumber = Math.floor(Math.random() * lowerCharsList.length); \n+    //         password += lowerCharsList[randomNumber];\n+    //     }\n+    //     if(numberFlag) {\n+    //         randomNumber = Math.floor(Math.random() * numberFlag.length); \n+    //         password += numbersList[randomNumber];\n+    //     }\n+    //     if(symbolsFlag) {\n+    //         randomNumber = Math.floor(Math.random() * symbolsFlag.length); \n+    //         password += symbolsListsList[randomNumber];\n+    //     }\n      \n-    }\n+    // }\n \n     return password\n \n }\n"
                },
                {
                    "date": 1688752613711,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,28 +68,28 @@\n     if(characterLength < 0) {\n         return password\n     }\n \n-    // while(password.length < characterLength) {\n-    //     let randomNumber = 0\n-    //     if(upperFlag) {\n-    //         randomNumber = Math.floor(Math.random() * upperCharsList.length); \n-    //         password += upperCharsList[randomNumber];\n-    //     }\n-    //     if(lowerFlag) {\n-    //         randomNumber = Math.floor(Math.random() * lowerCharsList.length); \n-    //         password += lowerCharsList[randomNumber];\n-    //     }\n-    //     if(numberFlag) {\n-    //         randomNumber = Math.floor(Math.random() * numberFlag.length); \n-    //         password += numbersList[randomNumber];\n-    //     }\n-    //     if(symbolsFlag) {\n-    //         randomNumber = Math.floor(Math.random() * symbolsFlag.length); \n-    //         password += symbolsListsList[randomNumber];\n-    //     }\n+    while(password.length < characterLength) {\n+        let randomNumber = 0\n+        if(upperFlag) {\n+            randomNumber = Math.floor(Math.random() * upperCharsList.length); \n+            password += upperCharsList[randomNumber];\n+        }\n+        if(lowerFlag) {\n+            randomNumber = Math.floor(Math.random() * lowerCharsList.length); \n+            password += lowerCharsList[randomNumber];\n+        }\n+        if(numberFlag) {\n+            randomNumber = Math.floor(Math.random() * numberFlag.length); \n+            password += numbersList[randomNumber];\n+        }\n+        if(symbolsFlag) {\n+            randomNumber = Math.floor(Math.random() * symbolsFlag.length); \n+            password += symbolsListsList[randomNumber];\n+        }\n      \n-    // }\n+    }\n \n     return password\n \n }\n"
                },
                {
                    "date": 1688752627477,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,9 +84,9 @@\n             password += numbersList[randomNumber];\n         }\n         if(symbolsFlag) {\n             randomNumber = Math.floor(Math.random() * symbolsFlag.length); \n-            password += symbolsListsList[randomNumber];\n+            password += symbolsLists[randomNumber];\n         }\n      \n     }\n \n"
                },
                {
                    "date": 1688752633728,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,9 +84,9 @@\n             password += numbersList[randomNumber];\n         }\n         if(symbolsFlag) {\n             randomNumber = Math.floor(Math.random() * symbolsFlag.length); \n-            password += symbolsLists[randomNumber];\n+            password += symbolLists[randomNumber];\n         }\n      \n     }\n \n"
                },
                {
                    "date": 1688752651217,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,9 +84,9 @@\n             password += numbersList[randomNumber];\n         }\n         if(symbolsFlag) {\n             randomNumber = Math.floor(Math.random() * symbolsFlag.length); \n-            password += symbolLists[randomNumber];\n+            password += symbolsLists[randomNumber];\n         }\n      \n     }\n \n"
                },
                {
                    "date": 1688752677103,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,107 @@\n+// Generate Random Password() \n+// Copy Password \n+// Update UI for Strength State\n+\n+const slider = document.querySelector(\"#character-length\");\n+const lengthLabel = document.querySelector(\".length-label\"); \n+\n+\n+// Dynamic Slider Bar\n+function progressSlider() {\n+    const sliderValue = slider.value; \n+    slider.style.background = `linear-gradient(to right, var(--neon-green) ${sliderValue}%, var(--very-dark-grey) ${sliderValue}%)`\n+}\n+// Character Length Label\n+function updateLengthLabel() {\n+    lengthLabel.textContent = slider.value; \n+}\n+\n+\n+function updateStrengthState(value) {\n+    // To Weak Password 1 - 5\n+    const columns = document.querySelectorAll(\".column\"); \n+    const strengthLabel = document.querySelector(\".strength-state h2\"); \n+    columns.forEach((element) => {\n+        element.classList.remove(\"weak\", \"medium\", \"strong\"); \n+    })\n+    if(value <= 5) {\n+        strengthLabel.textContent = \"TOO WEAK!\"; \n+        columns[0].classList.add(\"to-weak\"); \n+    } \n+    // Weak Password  5 - 10 \n+    else if(value >= 5 && value <= 10 ) {\n+        strengthLabel.textContent = \"WEAK!\"; \n+        columns[0].classList.add(\"weak\"); \n+        columns[1].classList.add(\"weak\"); \n+    }\n+    // Medium - 10 - 50 \n+    else if(value >= 10 && value <= 50 ) {\n+        strengthLabel.textContent = \"MEDIUM\"; \n+        columns[0].classList.add(\"medium\"); \n+        columns[1].classList.add(\"medium\"); \n+        columns[2].classList.add(\"medium\"); \n+    }\n+    // Strong - 50 - 100 \n+    else {\n+        strengthLabel.textContent = \"STRONG\"; \n+        columns[0].classList.add(\"strong\"); \n+        columns[1].classList.add(\"strong\"); \n+        columns[2].classList.add(\"strong\"); \n+        columns[3].classList.add(\"strong\"); \n+    }\n+\n+}\n+\n+\n+function generatePassword(characterLength, flagArray) {\n+    let upperCharsList = []\n+    const lowerCharsList = ['a','b','c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n+    lowerCharsList.forEach((e) => {\n+        upperCharsList.push(e.toUpperCase())\n+    })\n+    const numbersList = [0,1,2,3,4,5,6,7,8,9];\n+    const symbolsList = ['!', \"@\", \"#\", \"$\", \"$\", \"%\", \"^\", \"&\", \"*\", \"(\", \")\", \"-\", \"+\", \"{\", \"}\", \"|\", \"/\", \",\", \".\", \"_\", \"=\", \";\", \"?\", \"<\", \">\"];\n+    let passwordArray = [] \n+    let password = \"\"\n+    characterLength = Number(characterLength); \n+\n+    if(characterLength < 0) {\n+        return password\n+    }\n+\n+    while(password.length < characterLength) {\n+        let randomNumber = 0\n+        if(upperFlag) {\n+            randomNumber = Math.floor(Math.random() * upperCharsList.length); \n+            password += upperCharsList[randomNumber];\n+        }\n+        if(lowerFlag) {\n+            randomNumber = Math.floor(Math.random() * lowerCharsList.length); \n+            password += lowerCharsList[randomNumber];\n+        }\n+        if(numberFlag) {\n+            randomNumber = Math.floor(Math.random() * numberFlag.length); \n+            password += numbersList[randomNumber];\n+        }\n+        if(symbolsFlag) {\n+            randomNumber = Math.floor(Math.random() * symbolsFlag.length); \n+            password +=  symbolsList[randomNumber];\n+        }\n+     \n+    }\n+\n+    return password\n+\n+}\n+\n+\n+progressSlider(); \n+slider.addEventListener(\"input\", () => {\n+    progressSlider(); \n+    updateLengthLabel();\n+    updateStrengthState(slider.value); \n+})\n+\n+console.log(slider.value);\n+\n+\n"
                },
                {
                    "date": 1688752806276,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,9 +60,8 @@\n         upperCharsList.push(e.toUpperCase())\n     })\n     const numbersList = [0,1,2,3,4,5,6,7,8,9];\n     const symbolsList = ['!', \"@\", \"#\", \"$\", \"$\", \"%\", \"^\", \"&\", \"*\", \"(\", \")\", \"-\", \"+\", \"{\", \"}\", \"|\", \"/\", \",\", \".\", \"_\", \"=\", \";\", \"?\", \"<\", \">\"];\n-    let passwordArray = [] \n     let password = \"\"\n     characterLength = Number(characterLength); \n \n     if(characterLength < 0) {\n@@ -84,9 +83,9 @@\n             password += numbersList[randomNumber];\n         }\n         if(symbolsFlag) {\n             randomNumber = Math.floor(Math.random() * symbolsFlag.length); \n-            password +=  symbolsList[randomNumber];\n+            password += symbolsList[randomNumber];\n         }\n      \n     }\n \n@@ -104,111 +103,4 @@\n \n console.log(slider.value);\n \n \n-// Generate Random Password() \n-// Copy Password \n-// Update UI for Strength State\n-\n-const slider = document.querySelector(\"#character-length\");\n-const lengthLabel = document.querySelector(\".length-label\"); \n-\n-\n-// Dynamic Slider Bar\n-function progressSlider() {\n-    const sliderValue = slider.value; \n-    slider.style.background = `linear-gradient(to right, var(--neon-green) ${sliderValue}%, var(--very-dark-grey) ${sliderValue}%)`\n-}\n-// Character Length Label\n-function updateLengthLabel() {\n-    lengthLabel.textContent = slider.value; \n-}\n-\n-\n-function updateStrengthState(value) {\n-    // To Weak Password 1 - 5\n-    const columns = document.querySelectorAll(\".column\"); \n-    const strengthLabel = document.querySelector(\".strength-state h2\"); \n-    columns.forEach((element) => {\n-        element.classList.remove(\"weak\", \"medium\", \"strong\"); \n-    })\n-    if(value <= 5) {\n-        strengthLabel.textContent = \"TOO WEAK!\"; \n-        columns[0].classList.add(\"to-weak\"); \n-    } \n-    // Weak Password  5 - 10 \n-    else if(value >= 5 && value <= 10 ) {\n-        strengthLabel.textContent = \"WEAK!\"; \n-        columns[0].classList.add(\"weak\"); \n-        columns[1].classList.add(\"weak\"); \n-    }\n-    // Medium - 10 - 50 \n-    else if(value >= 10 && value <= 50 ) {\n-        strengthLabel.textContent = \"MEDIUM\"; \n-        columns[0].classList.add(\"medium\"); \n-        columns[1].classList.add(\"medium\"); \n-        columns[2].classList.add(\"medium\"); \n-    }\n-    // Strong - 50 - 100 \n-    else {\n-        strengthLabel.textContent = \"STRONG\"; \n-        columns[0].classList.add(\"strong\"); \n-        columns[1].classList.add(\"strong\"); \n-        columns[2].classList.add(\"strong\"); \n-        columns[3].classList.add(\"strong\"); \n-    }\n-\n-}\n-\n-\n-function generatePassword(characterLength, flagArray) {\n-    let upperCharsList = []\n-    const lowerCharsList = ['a','b','c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n-    lowerCharsList.forEach((e) => {\n-        upperCharsList.push(e.toUpperCase())\n-    })\n-    const numbersList = [0,1,2,3,4,5,6,7,8,9]\n-    const symbolsList = ['!', \"@\", \"#\", \"$\", \"$\", \"%\", \"^\", \"&\", \"*\", \"(\", \")\", \"-\", \"+\", \"{\", \"}\", \"|\", \"/\", \",\", \".\", \"_\", \"=\", \";\", \"?\", \"<\", \">\"];\n-    let passwordArray = [] \n-    let password = \"\"\n-    characterLength = Number(characterLength); \n-\n-    if(characterLength < 0) {\n-        return password\n-    }\n-\n-    while(password.length < characterLength) {\n-        let randomNumber = 0\n-        if(upperFlag) {\n-            randomNumber = Math.floor(Math.random() * upperCharsList.length); \n-            password += upperCharsList[randomNumber];\n-        }\n-        if(lowerFlag) {\n-            randomNumber = Math.floor(Math.random() * lowerCharsList.length); \n-            password += lowerCharsList[randomNumber];\n-        }\n-        if(numberFlag) {\n-            randomNumber = Math.floor(Math.random() * numberFlag.length); \n-            password += numbersList[randomNumber];\n-        }\n-        if(symbolsFlag) {\n-            randomNumber = Math.floor(Math.random() * symbolsFlag.length); \n-            password += symbolsLists[randomNumber];\n-        }\n-     \n-    }\n-\n-    return password\n-\n-}\n-\n-\n-progressSlider(); \n-slider.addEventListener(\"input\", () => {\n-    progressSlider(); \n-    updateLengthLabel();\n-    updateStrengthState(slider.value); \n-})\n-\n-console.log(slider.value);\n-\n-\n"
                },
                {
                    "date": 1688752825318,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,9 @@\n \n }\n \n \n-function generatePassword(characterLength, flagArray) {\n+function generatePassword(characterLength, upperFlag, lowerFlag, numberFlag, symbolsFlag) {\n     let upperCharsList = []\n     const lowerCharsList = ['a','b','c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n     lowerCharsList.forEach((e) => {\n         upperCharsList.push(e.toUpperCase())\n"
                },
                {
                    "date": 1688753318583,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,8 +52,13 @@\n \n }\n \n \n+function generateArray() {\n+    \n+}\n+\n+\n function generatePassword(characterLength, upperFlag, lowerFlag, numberFlag, symbolsFlag) {\n     let upperCharsList = []\n     const lowerCharsList = ['a','b','c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n     lowerCharsList.forEach((e) => {\n"
                },
                {
                    "date": 1688753324804,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,10 +52,10 @@\n \n }\n \n \n-function generateArray() {\n-    \n+function generateArray(low, hight) {\n+\n }\n \n \n function generatePassword(characterLength, upperFlag, lowerFlag, numberFlag, symbolsFlag) {\n"
                },
                {
                    "date": 1688753343461,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,10 +52,12 @@\n \n }\n \n \n-function generateArray(low, hight) {\n+function generateArray(low, high) {\n \n+    for(let i = 0; low <= high i++)\n+\n }\n \n \n function generatePassword(characterLength, upperFlag, lowerFlag, numberFlag, symbolsFlag) {\n"
                },
                {
                    "date": 1688753363534,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,9 +54,9 @@\n \n \n function generateArray(low, high) {\n \n-    for(let i = 0; low <= high i++)\n+    for(let i = low; low <= high; i++)\n \n }\n \n \n"
                },
                {
                    "date": 1688753371055,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,9 +54,9 @@\n \n \n function generateArray(low, high) {\n \n-    for(let i = low; low <= high; i++)\n+    for(let i = low; low <= high;  i++)\n \n }\n \n \n"
                },
                {
                    "date": 1688753376881,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,9 +53,8 @@\n }\n \n \n function generateArray(low, high) {\n-\n     for(let i = low; low <= high;  i++)\n \n }\n \n"
                },
                {
                    "date": 1688753381992,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,10 +53,12 @@\n }\n \n \n function generateArray(low, high) {\n-    for(let i = low; low <= high;  i++)\n \n+    for(let i = low; low <= high;  i++) {\n+\n+    }\n }\n \n \n function generatePassword(characterLength, upperFlag, lowerFlag, numberFlag, symbolsFlag) {\n"
                },
                {
                    "date": 1688753389321,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,9 +53,8 @@\n }\n \n \n function generateArray(low, high) {\n-\n     for(let i = low; low <= high;  i++) {\n \n     }\n }\n"
                },
                {
                    "date": 1688753424015,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,114 @@\n+// Generate Random Password() \n+// Copy Password \n+// Update UI for Strength State\n+\n+const slider = document.querySelector(\"#character-length\");\n+const lengthLabel = document.querySelector(\".length-label\"); \n+\n+\n+// Dynamic Slider Bar\n+function progressSlider() {\n+    const sliderValue = slider.value; \n+    slider.style.background = `linear-gradient(to right, var(--neon-green) ${sliderValue}%, var(--very-dark-grey) ${sliderValue}%)`\n+}\n+// Character Length Label\n+function updateLengthLabel() {\n+    lengthLabel.textContent = slider.value; \n+}\n+\n+\n+function updateStrengthState(value) {\n+    // To Weak Password 1 - 5\n+    const columns = document.querySelectorAll(\".column\"); \n+    const strengthLabel = document.querySelector(\".strength-state h2\"); \n+    columns.forEach((element) => {\n+        element.classList.remove(\"weak\", \"medium\", \"strong\"); \n+    })\n+    if(value <= 5) {\n+        strengthLabel.textContent = \"TOO WEAK!\"; \n+        columns[0].classList.add(\"to-weak\"); \n+    } \n+    // Weak Password  5 - 10 \n+    else if(value >= 5 && value <= 10 ) {\n+        strengthLabel.textContent = \"WEAK!\"; \n+        columns[0].classList.add(\"weak\"); \n+        columns[1].classList.add(\"weak\"); \n+    }\n+    // Medium - 10 - 50 \n+    else if(value >= 10 && value <= 50 ) {\n+        strengthLabel.textContent = \"MEDIUM\"; \n+        columns[0].classList.add(\"medium\"); \n+        columns[1].classList.add(\"medium\"); \n+        columns[2].classList.add(\"medium\"); \n+    }\n+    // Strong - 50 - 100 \n+    else {\n+        strengthLabel.textContent = \"STRONG\"; \n+        columns[0].classList.add(\"strong\"); \n+        columns[1].classList.add(\"strong\"); \n+        columns[2].classList.add(\"strong\"); \n+        columns[3].classList.add(\"strong\"); \n+    }\n+\n+}\n+\n+\n+function generateArray(low, high) {\n+    let arr = []\n+    for(let i = low; low <= high;  i++) {\n+        \n+    }\n+}\n+\n+\n+function generatePassword(characterLength, upperFlag, lowerFlag, numberFlag, symbolsFlag) {\n+    let upperCharsList = []\n+    const lowerCharsList = ['a','b','c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n+    lowerCharsList.forEach((e) => {\n+        upperCharsList.push(e.toUpperCase())\n+    })\n+    const numbersList = [0,1,2,3,4,5,6,7,8,9];\n+    const symbolsList = ['!', \"@\", \"#\", \"$\", \"$\", \"%\", \"^\", \"&\", \"*\", \"(\", \")\", \"-\", \"+\", \"{\", \"}\", \"|\", \"/\", \",\", \".\", \"_\", \"=\", \";\", \"?\", \"<\", \">\"];\n+    let password = \"\"\n+    characterLength = Number(characterLength); \n+\n+    if(characterLength < 0) {\n+        return password\n+    }\n+\n+    while(password.length < characterLength) {\n+        let randomNumber = 0\n+        if(upperFlag) {\n+            randomNumber = Math.floor(Math.random() * upperCharsList.length); \n+            password += upperCharsList[randomNumber];\n+        }\n+        if(lowerFlag) {\n+            randomNumber = Math.floor(Math.random() * lowerCharsList.length); \n+            password += lowerCharsList[randomNumber];\n+        }\n+        if(numberFlag) {\n+            randomNumber = Math.floor(Math.random() * numberFlag.length); \n+            password += numbersList[randomNumber];\n+        }\n+        if(symbolsFlag) {\n+            randomNumber = Math.floor(Math.random() * symbolsFlag.length); \n+            password += symbolsList[randomNumber];\n+        }\n+     \n+    }\n+\n+    return password\n+\n+}\n+\n+\n+progressSlider(); \n+slider.addEventListener(\"input\", () => {\n+    progressSlider(); \n+    updateLengthLabel();\n+    updateStrengthState(slider.value); \n+})\n+\n+console.log(slider.value);\n+\n+\n"
                },
                {
                    "date": 1688753447999,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,9 +55,9 @@\n \n function generateArray(low, high) {\n     let arr = []\n     for(let i = low; low <= high;  i++) {\n-        \n+        arr.push(i)\n     }\n }\n \n \n@@ -111,117 +111,4 @@\n \n console.log(slider.value);\n \n \n-// Generate Random Password() \n-// Copy Password \n-// Update UI for Strength State\n-\n-const slider = document.querySelector(\"#character-length\");\n-const lengthLabel = document.querySelector(\".length-label\"); \n-\n-\n-// Dynamic Slider Bar\n-function progressSlider() {\n-    const sliderValue = slider.value; \n-    slider.style.background = `linear-gradient(to right, var(--neon-green) ${sliderValue}%, var(--very-dark-grey) ${sliderValue}%)`\n-}\n-// Character Length Label\n-function updateLengthLabel() {\n-    lengthLabel.textContent = slider.value; \n-}\n-\n-\n-function updateStrengthState(value) {\n-    // To Weak Password 1 - 5\n-    const columns = document.querySelectorAll(\".column\"); \n-    const strengthLabel = document.querySelector(\".strength-state h2\"); \n-    columns.forEach((element) => {\n-        element.classList.remove(\"weak\", \"medium\", \"strong\"); \n-    })\n-    if(value <= 5) {\n-        strengthLabel.textContent = \"TOO WEAK!\"; \n-        columns[0].classList.add(\"to-weak\"); \n-    } \n-    // Weak Password  5 - 10 \n-    else if(value >= 5 && value <= 10 ) {\n-        strengthLabel.textContent = \"WEAK!\"; \n-        columns[0].classList.add(\"weak\"); \n-        columns[1].classList.add(\"weak\"); \n-    }\n-    // Medium - 10 - 50 \n-    else if(value >= 10 && value <= 50 ) {\n-        strengthLabel.textContent = \"MEDIUM\"; \n-        columns[0].classList.add(\"medium\"); \n-        columns[1].classList.add(\"medium\"); \n-        columns[2].classList.add(\"medium\"); \n-    }\n-    // Strong - 50 - 100 \n-    else {\n-        strengthLabel.textContent = \"STRONG\"; \n-        columns[0].classList.add(\"strong\"); \n-        columns[1].classList.add(\"strong\"); \n-        columns[2].classList.add(\"strong\"); \n-        columns[3].classList.add(\"strong\"); \n-    }\n-\n-}\n-\n-\n-function generateArray(low, high) {\n-    for(let i = low; low <= high;  i++) {\n-\n-    }\n-}\n-\n-\n-function generatePassword(characterLength, upperFlag, lowerFlag, numberFlag, symbolsFlag) {\n-    let upperCharsList = []\n-    const lowerCharsList = ['a','b','c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n-    lowerCharsList.forEach((e) => {\n-        upperCharsList.push(e.toUpperCase())\n-    })\n-    const numbersList = [0,1,2,3,4,5,6,7,8,9];\n-    const symbolsList = ['!', \"@\", \"#\", \"$\", \"$\", \"%\", \"^\", \"&\", \"*\", \"(\", \")\", \"-\", \"+\", \"{\", \"}\", \"|\", \"/\", \",\", \".\", \"_\", \"=\", \";\", \"?\", \"<\", \">\"];\n-    let password = \"\"\n-    characterLength = Number(characterLength); \n-\n-    if(characterLength < 0) {\n-        return password\n-    }\n-\n-    while(password.length < characterLength) {\n-        let randomNumber = 0\n-        if(upperFlag) {\n-            randomNumber = Math.floor(Math.random() * upperCharsList.length); \n-            password += upperCharsList[randomNumber];\n-        }\n-        if(lowerFlag) {\n-            randomNumber = Math.floor(Math.random() * lowerCharsList.length); \n-            password += lowerCharsList[randomNumber];\n-        }\n-        if(numberFlag) {\n-            randomNumber = Math.floor(Math.random() * numberFlag.length); \n-            password += numbersList[randomNumber];\n-        }\n-        if(symbolsFlag) {\n-            randomNumber = Math.floor(Math.random() * symbolsFlag.length); \n-            password += symbolsList[randomNumber];\n-        }\n-     \n-    }\n-\n-    return password\n-\n-}\n-\n-\n-progressSlider(); \n-slider.addEventListener(\"input\", () => {\n-    progressSlider(); \n-    updateLengthLabel();\n-    updateStrengthState(slider.value); \n-})\n-\n-console.log(slider.value);\n-\n-\n"
                },
                {
                    "date": 1688753458714,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,8 +57,9 @@\n     let arr = []\n     for(let i = low; low <= high;  i++) {\n         arr.push(i)\n     }\n+    return arr; \n }\n \n \n function generatePassword(characterLength, upperFlag, lowerFlag, numberFlag, symbolsFlag) {\n"
                },
                {
                    "date": 1688753488250,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,9 +62,9 @@\n }\n \n \n function generatePassword(characterLength, upperFlag, lowerFlag, numberFlag, symbolsFlag) {\n-    let upperCharsList = []\n+    let upperCharsList = generateArray(65,90)\n     const lowerCharsList = ['a','b','c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n     lowerCharsList.forEach((e) => {\n         upperCharsList.push(e.toUpperCase())\n     })\n"
                },
                {
                    "date": 1688753494927,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,9 +62,10 @@\n }\n \n \n function generatePassword(characterLength, upperFlag, lowerFlag, numberFlag, symbolsFlag) {\n-    let upperCharsList = generateArray(65,90)\n+    let upperCharsList = generateArray(65,90); \n+    let lowerCharList = \n     const lowerCharsList = ['a','b','c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n     lowerCharsList.forEach((e) => {\n         upperCharsList.push(e.toUpperCase())\n     })\n"
                },
                {
                    "date": 1688753502014,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,9 +63,9 @@\n \n \n function generatePassword(characterLength, upperFlag, lowerFlag, numberFlag, symbolsFlag) {\n     let upperCharsList = generateArray(65,90); \n-    let lowerCharList = \n+    let lowerCharList = generateArray(97,122); \n     const lowerCharsList = ['a','b','c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n     lowerCharsList.forEach((e) => {\n         upperCharsList.push(e.toUpperCase())\n     })\n"
                },
                {
                    "date": 1688753515405,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,8 +64,9 @@\n \n function generatePassword(characterLength, upperFlag, lowerFlag, numberFlag, symbolsFlag) {\n     let upperCharsList = generateArray(65,90); \n     let lowerCharList = generateArray(97,122); \n+    let numberCharList = generateArray(48, )\n     const lowerCharsList = ['a','b','c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n     lowerCharsList.forEach((e) => {\n         upperCharsList.push(e.toUpperCase())\n     })\n"
                },
                {
                    "date": 1688753520650,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,9 +64,9 @@\n \n function generatePassword(characterLength, upperFlag, lowerFlag, numberFlag, symbolsFlag) {\n     let upperCharsList = generateArray(65,90); \n     let lowerCharList = generateArray(97,122); \n-    let numberCharList = generateArray(48, )\n+    let numberCharList = generateArray(48, 57); \n     const lowerCharsList = ['a','b','c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n     lowerCharsList.forEach((e) => {\n         upperCharsList.push(e.toUpperCase())\n     })\n"
                },
                {
                    "date": 1688753530275,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,9 +64,10 @@\n \n function generatePassword(characterLength, upperFlag, lowerFlag, numberFlag, symbolsFlag) {\n     let upperCharsList = generateArray(65,90); \n     let lowerCharList = generateArray(97,122); \n-    let numberCharList = generateArray(48, 57); \n+    let numberList = generateArray(48, 57); \n+    let \n     const lowerCharsList = ['a','b','c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n     lowerCharsList.forEach((e) => {\n         upperCharsList.push(e.toUpperCase())\n     })\n"
                },
                {
                    "date": 1688753544443,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,9 +65,9 @@\n function generatePassword(characterLength, upperFlag, lowerFlag, numberFlag, symbolsFlag) {\n     let upperCharsList = generateArray(65,90); \n     let lowerCharList = generateArray(97,122); \n     let numberList = generateArray(48, 57); \n-    let \n+    let symbolsList = generateArray(33,57)\n     const lowerCharsList = ['a','b','c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n     lowerCharsList.forEach((e) => {\n         upperCharsList.push(e.toUpperCase())\n     })\n"
                },
                {
                    "date": 1688753555794,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,9 +65,9 @@\n function generatePassword(characterLength, upperFlag, lowerFlag, numberFlag, symbolsFlag) {\n     let upperCharsList = generateArray(65,90); \n     let lowerCharList = generateArray(97,122); \n     let numberList = generateArray(48, 57); \n-    let symbolsList = generateArray(33,57)\n+    let symbolsList = generateArray(33,57).concat(58,64)\n     const lowerCharsList = ['a','b','c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n     lowerCharsList.forEach((e) => {\n         upperCharsList.push(e.toUpperCase())\n     })\n"
                },
                {
                    "date": 1688753596210,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,118 @@\n+// Generate Random Password() \n+// Copy Password \n+// Update UI for Strength State\n+\n+const slider = document.querySelector(\"#character-length\");\n+const lengthLabel = document.querySelector(\".length-label\"); \n+\n+\n+// Dynamic Slider Bar\n+function progressSlider() {\n+    const sliderValue = slider.value; \n+    slider.style.background = `linear-gradient(to right, var(--neon-green) ${sliderValue}%, var(--very-dark-grey) ${sliderValue}%)`\n+}\n+// Character Length Label\n+function updateLengthLabel() {\n+    lengthLabel.textContent = slider.value; \n+}\n+\n+\n+function updateStrengthState(value) {\n+    // To Weak Password 1 - 5\n+    const columns = document.querySelectorAll(\".column\"); \n+    const strengthLabel = document.querySelector(\".strength-state h2\"); \n+    columns.forEach((element) => {\n+        element.classList.remove(\"weak\", \"medium\", \"strong\"); \n+    })\n+    if(value <= 5) {\n+        strengthLabel.textContent = \"TOO WEAK!\"; \n+        columns[0].classList.add(\"to-weak\"); \n+    } \n+    // Weak Password  5 - 10 \n+    else if(value >= 5 && value <= 10 ) {\n+        strengthLabel.textContent = \"WEAK!\"; \n+        columns[0].classList.add(\"weak\"); \n+        columns[1].classList.add(\"weak\"); \n+    }\n+    // Medium - 10 - 50 \n+    else if(value >= 10 && value <= 50 ) {\n+        strengthLabel.textContent = \"MEDIUM\"; \n+        columns[0].classList.add(\"medium\"); \n+        columns[1].classList.add(\"medium\"); \n+        columns[2].classList.add(\"medium\"); \n+    }\n+    // Strong - 50 - 100 \n+    else {\n+        strengthLabel.textContent = \"STRONG\"; \n+        columns[0].classList.add(\"strong\"); \n+        columns[1].classList.add(\"strong\"); \n+        columns[2].classList.add(\"strong\"); \n+        columns[3].classList.add(\"strong\"); \n+    }\n+\n+}\n+\n+\n+function generateArray(low, high) {\n+    let arr = []\n+    for(let i = low; low <= high;  i++) {\n+        arr.push(i)\n+    }\n+    return arr; \n+}\n+\n+\n+function generatePassword(characterLength, upperFlag, lowerFlag, numberFlag, symbolsFlag) {\n+    let upperCharsList = generateArray(65,90); \n+    let lowerCharList = generateArray(97,122); \n+    let numberList = generateArray(48, 57); \n+    let symbolsList = generateArray(33,57).concat(generateArray(58,64))\n+    const lowerCharsList = ['a','b','c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n+    lowerCharsList.forEach((e) => {\n+        upperCharsList.push(e.toUpperCase())\n+    })\n+    const numbersList = [0,1,2,3,4,5,6,7,8,9];\n+    const symbolsList = ['!', \"@\", \"#\", \"$\", \"$\", \"%\", \"^\", \"&\", \"*\", \"(\", \")\", \"-\", \"+\", \"{\", \"}\", \"|\", \"/\", \",\", \".\", \"_\", \"=\", \";\", \"?\", \"<\", \">\"];\n+    let password = \"\"\n+    characterLength = Number(characterLength); \n+\n+    if(characterLength < 0) {\n+        return password\n+    }\n+\n+    while(password.length < characterLength) {\n+        let randomNumber = 0\n+        if(upperFlag) {\n+            randomNumber = Math.floor(Math.random() * upperCharsList.length); \n+            password += upperCharsList[randomNumber];\n+        }\n+        if(lowerFlag) {\n+            randomNumber = Math.floor(Math.random() * lowerCharsList.length); \n+            password += lowerCharsList[randomNumber];\n+        }\n+        if(numberFlag) {\n+            randomNumber = Math.floor(Math.random() * numberFlag.length); \n+            password += numbersList[randomNumber];\n+        }\n+        if(symbolsFlag) {\n+            randomNumber = Math.floor(Math.random() * symbolsFlag.length); \n+            password += symbolsList[randomNumber];\n+        }\n+     \n+    }\n+\n+    return password\n+\n+}\n+\n+\n+progressSlider(); \n+slider.addEventListener(\"input\", () => {\n+    progressSlider(); \n+    updateLengthLabel();\n+    updateStrengthState(slider.value); \n+})\n+\n+console.log(slider.value);\n+\n+\n"
                },
                {
                    "date": 1688753615851,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,9 +65,9 @@\n function generatePassword(characterLength, upperFlag, lowerFlag, numberFlag, symbolsFlag) {\n     let upperCharsList = generateArray(65,90); \n     let lowerCharList = generateArray(97,122); \n     let numberList = generateArray(48, 57); \n-    let symbolsList = generateArray(33,57).concat(generateArray(58,64))\n+    let symbolsList = generateArray(33,57).concat(generateArray(58,64)).concat(generateArray(91,96), )\n     const lowerCharsList = ['a','b','c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n     lowerCharsList.forEach((e) => {\n         upperCharsList.push(e.toUpperCase())\n     })\n@@ -115,122 +115,4 @@\n \n console.log(slider.value);\n \n \n-// Generate Random Password() \n-// Copy Password \n-// Update UI for Strength State\n-\n-const slider = document.querySelector(\"#character-length\");\n-const lengthLabel = document.querySelector(\".length-label\"); \n-\n-\n-// Dynamic Slider Bar\n-function progressSlider() {\n-    const sliderValue = slider.value; \n-    slider.style.background = `linear-gradient(to right, var(--neon-green) ${sliderValue}%, var(--very-dark-grey) ${sliderValue}%)`\n-}\n-// Character Length Label\n-function updateLengthLabel() {\n-    lengthLabel.textContent = slider.value; \n-}\n-\n-\n-function updateStrengthState(value) {\n-    // To Weak Password 1 - 5\n-    const columns = document.querySelectorAll(\".column\"); \n-    const strengthLabel = document.querySelector(\".strength-state h2\"); \n-    columns.forEach((element) => {\n-        element.classList.remove(\"weak\", \"medium\", \"strong\"); \n-    })\n-    if(value <= 5) {\n-        strengthLabel.textContent = \"TOO WEAK!\"; \n-        columns[0].classList.add(\"to-weak\"); \n-    } \n-    // Weak Password  5 - 10 \n-    else if(value >= 5 && value <= 10 ) {\n-        strengthLabel.textContent = \"WEAK!\"; \n-        columns[0].classList.add(\"weak\"); \n-        columns[1].classList.add(\"weak\"); \n-    }\n-    // Medium - 10 - 50 \n-    else if(value >= 10 && value <= 50 ) {\n-        strengthLabel.textContent = \"MEDIUM\"; \n-        columns[0].classList.add(\"medium\"); \n-        columns[1].classList.add(\"medium\"); \n-        columns[2].classList.add(\"medium\"); \n-    }\n-    // Strong - 50 - 100 \n-    else {\n-        strengthLabel.textContent = \"STRONG\"; \n-        columns[0].classList.add(\"strong\"); \n-        columns[1].classList.add(\"strong\"); \n-        columns[2].classList.add(\"strong\"); \n-        columns[3].classList.add(\"strong\"); \n-    }\n-\n-}\n-\n-\n-function generateArray(low, high) {\n-    let arr = []\n-    for(let i = low; low <= high;  i++) {\n-        arr.push(i)\n-    }\n-    return arr; \n-}\n-\n-\n-function generatePassword(characterLength, upperFlag, lowerFlag, numberFlag, symbolsFlag) {\n-    let upperCharsList = generateArray(65,90); \n-    let lowerCharList = generateArray(97,122); \n-    let numberList = generateArray(48, 57); \n-    let symbolsList = generateArray(33,57).concat(58,64)\n-    const lowerCharsList = ['a','b','c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n-    lowerCharsList.forEach((e) => {\n-        upperCharsList.push(e.toUpperCase())\n-    })\n-    const numbersList = [0,1,2,3,4,5,6,7,8,9];\n-    const symbolsList = ['!', \"@\", \"#\", \"$\", \"$\", \"%\", \"^\", \"&\", \"*\", \"(\", \")\", \"-\", \"+\", \"{\", \"}\", \"|\", \"/\", \",\", \".\", \"_\", \"=\", \";\", \"?\", \"<\", \">\"];\n-    let password = \"\"\n-    characterLength = Number(characterLength); \n-\n-    if(characterLength < 0) {\n-        return password\n-    }\n-\n-    while(password.length < characterLength) {\n-        let randomNumber = 0\n-        if(upperFlag) {\n-            randomNumber = Math.floor(Math.random() * upperCharsList.length); \n-            password += upperCharsList[randomNumber];\n-        }\n-        if(lowerFlag) {\n-            randomNumber = Math.floor(Math.random() * lowerCharsList.length); \n-            password += lowerCharsList[randomNumber];\n-        }\n-        if(numberFlag) {\n-            randomNumber = Math.floor(Math.random() * numberFlag.length); \n-            password += numbersList[randomNumber];\n-        }\n-        if(symbolsFlag) {\n-            randomNumber = Math.floor(Math.random() * symbolsFlag.length); \n-            password += symbolsList[randomNumber];\n-        }\n-     \n-    }\n-\n-    return password\n-\n-}\n-\n-\n-progressSlider(); \n-slider.addEventListener(\"input\", () => {\n-    progressSlider(); \n-    updateLengthLabel();\n-    updateStrengthState(slider.value); \n-})\n-\n-console.log(slider.value);\n-\n-\n"
                },
                {
                    "date": 1688753630930,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,9 +65,9 @@\n function generatePassword(characterLength, upperFlag, lowerFlag, numberFlag, symbolsFlag) {\n     let upperCharsList = generateArray(65,90); \n     let lowerCharList = generateArray(97,122); \n     let numberList = generateArray(48, 57); \n-    let symbolsList = generateArray(33,57).concat(generateArray(58,64)).concat(generateArray(91,96), )\n+    let symbolsList = generateArray(33,57).concat(generateArray(58,64)).concat(generateArray(91,96)).concat(generateArray(generateArray(123,126)))\n     const lowerCharsList = ['a','b','c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n     lowerCharsList.forEach((e) => {\n         upperCharsList.push(e.toUpperCase())\n     })\n"
                },
                {
                    "date": 1688753641912,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,15 +65,10 @@\n function generatePassword(characterLength, upperFlag, lowerFlag, numberFlag, symbolsFlag) {\n     let upperCharsList = generateArray(65,90); \n     let lowerCharList = generateArray(97,122); \n     let numberList = generateArray(48, 57); \n-    let symbolsList = generateArray(33,57).concat(generateArray(58,64)).concat(generateArray(91,96)).concat(generateArray(generateArray(123,126)))\n-    const lowerCharsList = ['a','b','c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n-    lowerCharsList.forEach((e) => {\n-        upperCharsList.push(e.toUpperCase())\n-    })\n-    const numbersList = [0,1,2,3,4,5,6,7,8,9];\n-    const symbolsList = ['!', \"@\", \"#\", \"$\", \"$\", \"%\", \"^\", \"&\", \"*\", \"(\", \")\", \"-\", \"+\", \"{\", \"}\", \"|\", \"/\", \",\", \".\", \"_\", \"=\", \";\", \"?\", \"<\", \">\"];\n+    let symbolsList = generateArray(33,57).concat(generateArray(58,64)).concat(generateArray(91,96)).concat(generateArray(generateArray(123,126))); \n+ \n     let password = \"\"\n     characterLength = Number(characterLength); \n \n     if(characterLength < 0) {\n"
                },
                {
                    "date": 1688753734119,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,9 +66,8 @@\n     let upperCharsList = generateArray(65,90); \n     let lowerCharList = generateArray(97,122); \n     let numberList = generateArray(48, 57); \n     let symbolsList = generateArray(33,57).concat(generateArray(58,64)).concat(generateArray(91,96)).concat(generateArray(generateArray(123,126))); \n- \n     let password = \"\"\n     characterLength = Number(characterLength); \n \n     if(characterLength < 0) {\n@@ -82,9 +81,9 @@\n             password += upperCharsList[randomNumber];\n         }\n         if(lowerFlag) {\n             randomNumber = Math.floor(Math.random() * lowerCharsList.length); \n-            password += lowerCharsList[randomNumber];\n+            password += lowerCharList[randomNumber];\n         }\n         if(numberFlag) {\n             randomNumber = Math.floor(Math.random() * numberFlag.length); \n             password += numbersList[randomNumber];\n"
                },
                {
                    "date": 1688753743671,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,10 +63,10 @@\n \n \n function generatePassword(characterLength, upperFlag, lowerFlag, numberFlag, symbolsFlag) {\n     let upperCharsList = generateArray(65,90); \n-    let lowerCharList = generateArray(97,122); \n-    let numberList = generateArray(48, 57); \n+    let lowerCharsList = generateArray(97,122); \n+    let numbersList = generateArray(48, 57); \n     let symbolsList = generateArray(33,57).concat(generateArray(58,64)).concat(generateArray(91,96)).concat(generateArray(generateArray(123,126))); \n     let password = \"\"\n     characterLength = Number(characterLength); \n \n@@ -81,9 +81,9 @@\n             password += upperCharsList[randomNumber];\n         }\n         if(lowerFlag) {\n             randomNumber = Math.floor(Math.random() * lowerCharsList.length); \n-            password += lowerCharList[randomNumber];\n+            password += lowerCharsList[randomNumber];\n         }\n         if(numberFlag) {\n             randomNumber = Math.floor(Math.random() * numberFlag.length); \n             password += numbersList[randomNumber];\n"
                },
                {
                    "date": 1688753791605,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,9 +66,10 @@\n     let upperCharsList = generateArray(65,90); \n     let lowerCharsList = generateArray(97,122); \n     let numbersList = generateArray(48, 57); \n     let symbolsList = generateArray(33,57).concat(generateArray(58,64)).concat(generateArray(91,96)).concat(generateArray(generateArray(123,126))); \n-    let password = \"\"\n+    let password = \"\"; \n+    let password = [] \n     characterLength = Number(characterLength); \n \n     if(characterLength < 0) {\n         return password\n"
                },
                {
                    "date": 1688753797226,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,9 +67,9 @@\n     let lowerCharsList = generateArray(97,122); \n     let numbersList = generateArray(48, 57); \n     let symbolsList = generateArray(33,57).concat(generateArray(58,64)).concat(generateArray(91,96)).concat(generateArray(generateArray(123,126))); \n     let password = \"\"; \n-    let password = [] \n+    let passwordArray = []; \n     characterLength = Number(characterLength); \n \n     if(characterLength < 0) {\n         return password\n"
                },
                {
                    "date": 1688753890060,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,13 +69,14 @@\n     let symbolsList = generateArray(33,57).concat(generateArray(58,64)).concat(generateArray(91,96)).concat(generateArray(generateArray(123,126))); \n     let password = \"\"; \n     let passwordArray = []; \n     characterLength = Number(characterLength); \n-\n     if(characterLength < 0) {\n         return password\n     }\n \n+    if(upperFlag)\n+\n     while(password.length < characterLength) {\n         let randomNumber = 0\n         if(upperFlag) {\n             randomNumber = Math.floor(Math.random() * upperCharsList.length); \n"
                },
                {
                    "date": 1688753913675,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,9 +73,11 @@\n     if(characterLength < 0) {\n         return password\n     }\n \n-    if(upperFlag)\n+    if(upperFlag) {\n+        passwordArray.push(upperFlag)\n+    }\n \n     while(password.length < characterLength) {\n         let randomNumber = 0\n         if(upperFlag) {\n"
                },
                {
                    "date": 1688753932324,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,8 +76,9 @@\n \n     if(upperFlag) {\n         passwordArray.push(upperFlag)\n     }\n+    if(lowerFlag)\n \n     while(password.length < characterLength) {\n         let randomNumber = 0\n         if(upperFlag) {\n"
                },
                {
                    "date": 1688753940997,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,9 +76,11 @@\n \n     if(upperFlag) {\n         passwordArray.push(upperFlag)\n     }\n-    if(lowerFlag)\n+    if(lowerFlag) {\n+        passwordArray.push(lowerCharsList)\n+    }\n \n     while(password.length < characterLength) {\n         let randomNumber = 0\n         if(upperFlag) {\n"
                },
                {
                    "date": 1688753946439,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,9 +74,9 @@\n         return password\n     }\n \n     if(upperFlag) {\n-        passwordArray.push(upperFlag)\n+        passwordArray.push(upperCharsList)\n     }\n     if(lowerFlag) {\n         passwordArray.push(lowerCharsList)\n     }\n"
                },
                {
                    "date": 1688753963273,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -79,8 +79,11 @@\n     }\n     if(lowerFlag) {\n         passwordArray.push(lowerCharsList)\n     }\n+    if(numberFlag) {\n+        passwordArray.push(numberFlag)\n+    }\n \n     while(password.length < characterLength) {\n         let randomNumber = 0\n         if(upperFlag) {\n"
                },
                {
                    "date": 1688753969579,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,15 +74,15 @@\n         return password\n     }\n \n     if(upperFlag) {\n-        passwordArray.push(upperCharsList)\n+        passwordArray.push(upperCharsList); \n     }\n     if(lowerFlag) {\n-        passwordArray.push(lowerCharsList)\n+        passwordArray.push(lowerCharsList); \n     }\n     if(numberFlag) {\n-        passwordArray.push(numberFlag)\n+        passwordArray.push(numberFlag); \n     }\n \n     while(password.length < characterLength) {\n         let randomNumber = 0\n"
                },
                {
                    "date": 1688753997736,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,8 +82,11 @@\n     }\n     if(numberFlag) {\n         passwordArray.push(numberFlag); \n     }\n+    if(symbolsFlag) {\n+        passwordArray.push*symbolsFlag\n+    }\n \n     while(password.length < characterLength) {\n         let randomNumber = 0\n         if(upperFlag) {\n"
                },
                {
                    "date": 1688754050577,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,129 @@\n+// Generate Random Password() \n+// Copy Password \n+// Update UI for Strength State\n+\n+const slider = document.querySelector(\"#character-length\");\n+const lengthLabel = document.querySelector(\".length-label\"); \n+\n+\n+// Dynamic Slider Bar\n+function progressSlider() {\n+    const sliderValue = slider.value; \n+    slider.style.background = `linear-gradient(to right, var(--neon-green) ${sliderValue}%, var(--very-dark-grey) ${sliderValue}%)`\n+}\n+// Character Length Label\n+function updateLengthLabel() {\n+    lengthLabel.textContent = slider.value; \n+}\n+\n+\n+function updateStrengthState(value) {\n+    // To Weak Password 1 - 5\n+    const columns = document.querySelectorAll(\".column\"); \n+    const strengthLabel = document.querySelector(\".strength-state h2\"); \n+    columns.forEach((element) => {\n+        element.classList.remove(\"weak\", \"medium\", \"strong\"); \n+    })\n+    if(value <= 5) {\n+        strengthLabel.textContent = \"TOO WEAK!\"; \n+        columns[0].classList.add(\"to-weak\"); \n+    } \n+    // Weak Password  5 - 10 \n+    else if(value >= 5 && value <= 10 ) {\n+        strengthLabel.textContent = \"WEAK!\"; \n+        columns[0].classList.add(\"weak\"); \n+        columns[1].classList.add(\"weak\"); \n+    }\n+    // Medium - 10 - 50 \n+    else if(value >= 10 && value <= 50 ) {\n+        strengthLabel.textContent = \"MEDIUM\"; \n+        columns[0].classList.add(\"medium\"); \n+        columns[1].classList.add(\"medium\"); \n+        columns[2].classList.add(\"medium\"); \n+    }\n+    // Strong - 50 - 100 \n+    else {\n+        strengthLabel.textContent = \"STRONG\"; \n+        columns[0].classList.add(\"strong\"); \n+        columns[1].classList.add(\"strong\"); \n+        columns[2].classList.add(\"strong\"); \n+        columns[3].classList.add(\"strong\"); \n+    }\n+\n+}\n+\n+\n+function generateArray(low, high) {\n+    let arr = []\n+    for(let i = low; low <= high;  i++) {\n+        arr.push(i)\n+    }\n+    return arr; \n+}\n+\n+\n+function generatePassword(characterLength, upperFlag, lowerFlag, numberFlag, symbolsFlag) {\n+    let upperCharsList = generateArray(65,90); \n+    let lowerCharsList = generateArray(97,122); \n+    let numbersList = generateArray(48, 57); \n+    let symbolsList = generateArray(33,57).concat(generateArray(58,64)).concat(generateArray(91,96)).concat(generateArray(generateArray(123,126))); \n+    let password = \"\"; \n+    let passwordArray = []; \n+    characterLength = Number(characterLength); \n+    if(characterLength < 0) {\n+        return password\n+    }\n+\n+    if(upperFlag) {\n+        passwordArray.push(upperCharsList); \n+    }\n+    if(lowerFlag) {\n+        passwordArray.push(lowerCharsList); \n+    }\n+    if(numberFlag) {\n+        passwordArray.push(numberFlag); \n+    }\n+    if(symbolsFlag) {\n+        passwordArray.push(symbolsFlag);\n+    }\n+\n+    for(let i = 0; i < password.length; i++) {\n+        \n+    }\n+\n+    while(password.length < characterLength) {\n+        let randomNumber = 0\n+        if(upperFlag) {\n+            randomNumber = Math.floor(Math.random() * upperCharsList.length); \n+            password += upperCharsList[randomNumber];\n+        }\n+        if(lowerFlag) {\n+            randomNumber = Math.floor(Math.random() * lowerCharsList.length); \n+            password += lowerCharsList[randomNumber];\n+        }\n+        if(numberFlag) {\n+            randomNumber = Math.floor(Math.random() * numberFlag.length); \n+            password += numbersList[randomNumber];\n+        }\n+        if(symbolsFlag) {\n+            randomNumber = Math.floor(Math.random() * symbolsFlag.length); \n+            password += symbolsList[randomNumber];\n+        }\n+     \n+    }\n+\n+    return password\n+\n+}\n+\n+\n+progressSlider(); \n+slider.addEventListener(\"input\", () => {\n+    progressSlider(); \n+    updateLengthLabel();\n+    updateStrengthState(slider.value); \n+})\n+\n+console.log(slider.value);\n+\n+\n"
                },
                {
                    "date": 1688754075882,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,137 +86,12 @@\n     if(symbolsFlag) {\n         passwordArray.push(symbolsFlag);\n     }\n \n-    for(let i = 0; i < password.length; i++) {\n-        \n-    }\n+    for(let i = 0; i < passwordArray.length; i++) {\n \n-    while(password.length < characterLength) {\n-        let randomNumber = 0\n-        if(upperFlag) {\n-            randomNumber = Math.floor(Math.random() * upperCharsList.length); \n-            password += upperCharsList[randomNumber];\n-        }\n-        if(lowerFlag) {\n-            randomNumber = Math.floor(Math.random() * lowerCharsList.length); \n-            password += lowerCharsList[randomNumber];\n-        }\n-        if(numberFlag) {\n-            randomNumber = Math.floor(Math.random() * numberFlag.length); \n-            password += numbersList[randomNumber];\n-        }\n-        if(symbolsFlag) {\n-            randomNumber = Math.floor(Math.random() * symbolsFlag.length); \n-            password += symbolsList[randomNumber];\n-        }\n-     \n     }\n \n-    return password\n-\n-}\n-\n-\n-progressSlider(); \n-slider.addEventListener(\"input\", () => {\n-    progressSlider(); \n-    updateLengthLabel();\n-    updateStrengthState(slider.value); \n-})\n-\n-console.log(slider.value);\n-\n-\n-// Generate Random Password() \n-// Copy Password \n-// Update UI for Strength State\n-\n-const slider = document.querySelector(\"#character-length\");\n-const lengthLabel = document.querySelector(\".length-label\"); \n-\n-\n-// Dynamic Slider Bar\n-function progressSlider() {\n-    const sliderValue = slider.value; \n-    slider.style.background = `linear-gradient(to right, var(--neon-green) ${sliderValue}%, var(--very-dark-grey) ${sliderValue}%)`\n-}\n-// Character Length Label\n-function updateLengthLabel() {\n-    lengthLabel.textContent = slider.value; \n-}\n-\n-\n-function updateStrengthState(value) {\n-    // To Weak Password 1 - 5\n-    const columns = document.querySelectorAll(\".column\"); \n-    const strengthLabel = document.querySelector(\".strength-state h2\"); \n-    columns.forEach((element) => {\n-        element.classList.remove(\"weak\", \"medium\", \"strong\"); \n-    })\n-    if(value <= 5) {\n-        strengthLabel.textContent = \"TOO WEAK!\"; \n-        columns[0].classList.add(\"to-weak\"); \n-    } \n-    // Weak Password  5 - 10 \n-    else if(value >= 5 && value <= 10 ) {\n-        strengthLabel.textContent = \"WEAK!\"; \n-        columns[0].classList.add(\"weak\"); \n-        columns[1].classList.add(\"weak\"); \n-    }\n-    // Medium - 10 - 50 \n-    else if(value >= 10 && value <= 50 ) {\n-        strengthLabel.textContent = \"MEDIUM\"; \n-        columns[0].classList.add(\"medium\"); \n-        columns[1].classList.add(\"medium\"); \n-        columns[2].classList.add(\"medium\"); \n-    }\n-    // Strong - 50 - 100 \n-    else {\n-        strengthLabel.textContent = \"STRONG\"; \n-        columns[0].classList.add(\"strong\"); \n-        columns[1].classList.add(\"strong\"); \n-        columns[2].classList.add(\"strong\"); \n-        columns[3].classList.add(\"strong\"); \n-    }\n-\n-}\n-\n-\n-function generateArray(low, high) {\n-    let arr = []\n-    for(let i = low; low <= high;  i++) {\n-        arr.push(i)\n-    }\n-    return arr; \n-}\n-\n-\n-function generatePassword(characterLength, upperFlag, lowerFlag, numberFlag, symbolsFlag) {\n-    let upperCharsList = generateArray(65,90); \n-    let lowerCharsList = generateArray(97,122); \n-    let numbersList = generateArray(48, 57); \n-    let symbolsList = generateArray(33,57).concat(generateArray(58,64)).concat(generateArray(91,96)).concat(generateArray(generateArray(123,126))); \n-    let password = \"\"; \n-    let passwordArray = []; \n-    characterLength = Number(characterLength); \n-    if(characterLength < 0) {\n-        return password\n-    }\n-\n-    if(upperFlag) {\n-        passwordArray.push(upperCharsList); \n-    }\n-    if(lowerFlag) {\n-        passwordArray.push(lowerCharsList); \n-    }\n-    if(numberFlag) {\n-        passwordArray.push(numberFlag); \n-    }\n-    if(symbolsFlag) {\n-        passwordArray.push*symbolsFlag\n-    }\n-\n     while(password.length < characterLength) {\n         let randomNumber = 0\n         if(upperFlag) {\n             randomNumber = Math.floor(Math.random() * upperCharsList.length); \n"
                },
                {
                    "date": 1688754096180,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,15 +87,15 @@\n         passwordArray.push(symbolsFlag);\n     }\n \n     for(let i = 0; i < passwordArray.length; i++) {\n-\n+        randomNumber = Math.floor(Math.random() * upperCharsList.length); \n     }\n \n     while(password.length < characterLength) {\n         let randomNumber = 0\n         if(upperFlag) {\n-            randomNumber = Math.floor(Math.random() * upperCharsList.length); \n+           \n             password += upperCharsList[randomNumber];\n         }\n         if(lowerFlag) {\n             randomNumber = Math.floor(Math.random() * lowerCharsList.length); \n"
                },
                {
                    "date": 1688754113720,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,9 +87,9 @@\n         passwordArray.push(symbolsFlag);\n     }\n \n     for(let i = 0; i < passwordArray.length; i++) {\n-        randomNumber = Math.floor(Math.random() * upperCharsList.length); \n+        randomNumber = Math.floor(Math.random() *  passwordArray.length]; \n     }\n \n     while(password.length < characterLength) {\n         let randomNumber = 0\n"
                },
                {
                    "date": 1688754120178,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,9 +87,9 @@\n         passwordArray.push(symbolsFlag);\n     }\n \n     for(let i = 0; i < passwordArray.length; i++) {\n-        randomNumber = Math.floor(Math.random() *  passwordArray.length]; \n+        randomNumber = Math.floor(Math.random() *  passwordArray.length); \n     }\n \n     while(password.length < characterLength) {\n         let randomNumber = 0\n"
                },
                {
                    "date": 1688754135150,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -88,8 +88,9 @@\n     }\n \n     for(let i = 0; i < passwordArray.length; i++) {\n         randomNumber = Math.floor(Math.random() *  passwordArray.length); \n+        password += passwordArray[randomNumber]\n     }\n \n     while(password.length < characterLength) {\n         let randomNumber = 0\n"
                },
                {
                    "date": 1688754155489,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,33 +87,14 @@\n         passwordArray.push(symbolsFlag);\n     }\n \n     for(let i = 0; i < passwordArray.length; i++) {\n-        randomNumber = Math.floor(Math.random() *  passwordArray.length); \n-        password += passwordArray[randomNumber]\n+        let randomNumber = Math.floor(Math.random() *  passwordArray.length); \n+        password += passwordArray[randomNumber]; \n     }\n \n-    while(password.length < characterLength) {\n-        let randomNumber = 0\n-        if(upperFlag) {\n-           \n-            password += upperCharsList[randomNumber];\n-        }\n-        if(lowerFlag) {\n-            randomNumber = Math.floor(Math.random() * lowerCharsList.length); \n-            password += lowerCharsList[randomNumber];\n-        }\n-        if(numberFlag) {\n-            randomNumber = Math.floor(Math.random() * numberFlag.length); \n-            password += numbersList[randomNumber];\n-        }\n-        if(symbolsFlag) {\n-            randomNumber = Math.floor(Math.random() * symbolsFlag.length); \n-            password += symbolsList[randomNumber];\n-        }\n-     \n-    }\n \n+\n     return password\n \n }\n \n"
                },
                {
                    "date": 1688754179768,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,9 +55,9 @@\n \n function generateArray(low, high) {\n     let arr = []\n     for(let i = low; low <= high;  i++) {\n-        arr.push(i)\n+        arr.push(String.fromCharCode(i))\n     }\n     return arr; \n }\n \n@@ -91,10 +91,8 @@\n         let randomNumber = Math.floor(Math.random() *  passwordArray.length); \n         password += passwordArray[randomNumber]; \n     }\n \n-\n-\n     return password\n \n }\n \n"
                },
                {
                    "date": 1688754201181,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -80,9 +80,9 @@\n     if(lowerFlag) {\n         passwordArray.push(lowerCharsList); \n     }\n     if(numberFlag) {\n-        passwordArray.push(numberFlag); \n+        passwordArray.push(numbersList); \n     }\n     if(symbolsFlag) {\n         passwordArray.push(symbolsFlag);\n     }\n"
                },
                {
                    "date": 1688754431826,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,9 +83,9 @@\n     if(numberFlag) {\n         passwordArray.push(numbersList); \n     }\n     if(symbolsFlag) {\n-        passwordArray.push(symbolsFlag);\n+        passwordArray.push(symbolsList);\n     }\n \n     for(let i = 0; i < passwordArray.length; i++) {\n         let randomNumber = Math.floor(Math.random() *  passwordArray.length); \n"
                },
                {
                    "date": 1688754526032,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,9 +55,9 @@\n \n function generateArray(low, high) {\n     let arr = []\n     for(let i = low; low <= high;  i++) {\n-        arr.push(String.fromCharCode(i))\n+        arr.push(i)\n     }\n     return arr; \n }\n \n"
                },
                {
                    "date": 1688754533925,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,9 +55,9 @@\n \n function generateArray(low, high) {\n     let arr = []\n     for(let i = low; low <= high;  i++) {\n-        arr.push(i)\n+        arr.push(String.fromCharCode(i))\n     }\n     return arr; \n }\n \n"
                },
                {
                    "date": 1688755388732,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,8 +3,9 @@\n // Update UI for Strength State\n \n const slider = document.querySelector(\"#character-length\");\n const lengthLabel = document.querySelector(\".length-label\"); \n+const generateBtn = document.querySelector(\"#\")\n \n \n // Dynamic Slider Bar\n function progressSlider() {\n@@ -103,7 +104,9 @@\n     updateLengthLabel();\n     updateStrengthState(slider.value); \n })\n \n+\n+\n console.log(slider.value);\n \n \n"
                },
                {
                    "date": 1688755396332,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n // Update UI for Strength State\n \n const slider = document.querySelector(\"#character-length\");\n const lengthLabel = document.querySelector(\".length-label\"); \n-const generateBtn = document.querySelector(\"#\")\n+const generateBtn = document.querySelector(\"button[type=\"submit\"] \")\n \n \n // Dynamic Slider Bar\n function progressSlider() {\n"
                },
                {
                    "date": 1688755404238,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n // Update UI for Strength State\n \n const slider = document.querySelector(\"#character-length\");\n const lengthLabel = document.querySelector(\".length-label\"); \n-const generateBtn = document.querySelector(\"button[type=\"submit\"] \")\n+const generateBtn = document.querySelector(\"button[type='submit'] \")\n \n \n // Dynamic Slider Bar\n function progressSlider() {\n"
                },
                {
                    "date": 1688755412697,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n // Update UI for Strength State\n \n const slider = document.querySelector(\"#character-length\");\n const lengthLabel = document.querySelector(\".length-label\"); \n-const generateBtn = document.querySelector(\"button[type='submit'] \")\n+const generateBtn = document.querySelector(\"button[type='submit']\"); \n \n \n // Dynamic Slider Bar\n function progressSlider() {\n"
                },
                {
                    "date": 1688755425883,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -104,9 +104,11 @@\n     updateLengthLabel();\n     updateStrengthState(slider.value); \n })\n \n+generateBtn.addEventListener(\"click\")\n \n \n+\n console.log(slider.value);\n \n \n"
                },
                {
                    "date": 1688755442830,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -104,9 +104,11 @@\n     updateLengthLabel();\n     updateStrengthState(slider.value); \n })\n \n-generateBtn.addEventListener(\"click\")\n+generateBtn.addEventListener(\"click\", () => {\n+    \n+})\n \n \n \n console.log(slider.value);\n"
                },
                {
                    "date": 1688755455523,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -105,9 +105,9 @@\n     updateStrengthState(slider.value); \n })\n \n generateBtn.addEventListener(\"click\", () => {\n-    \n+    let password = generatePassword()\n })\n \n \n \n"
                },
                {
                    "date": 1688755494204,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,8 +3,9 @@\n // Update UI for Strength State\n \n const slider = document.querySelector(\"#character-length\");\n const lengthLabel = document.querySelector(\".length-label\"); \n+const passwordLabel = document.querySelector(\".password-field\")\n const generateBtn = document.querySelector(\"button[type='submit']\"); \n \n \n // Dynamic Slider Bar\n@@ -106,8 +107,9 @@\n })\n \n generateBtn.addEventListener(\"click\", () => {\n     let password = generatePassword()\n+\n })\n \n \n \n"
                },
                {
                    "date": 1688755544278,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n // Update UI for Strength State\n \n const slider = document.querySelector(\"#character-length\");\n const lengthLabel = document.querySelector(\".length-label\"); \n-const passwordLabel = document.querySelector(\".password-field\")\n+const passwordLabel = document.querySelector(\".password-field h1\"); \n const generateBtn = document.querySelector(\"button[type='submit']\"); \n \n \n // Dynamic Slider Bar\n@@ -107,8 +107,9 @@\n })\n \n generateBtn.addEventListener(\"click\", () => {\n     let password = generatePassword()\n+    passwordLabel.textContent = password; \n \n })\n \n \n"
                },
                {
                    "date": 1688755700163,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,8 +5,9 @@\n const slider = document.querySelector(\"#character-length\");\n const lengthLabel = document.querySelector(\".length-label\"); \n const passwordLabel = document.querySelector(\".password-field h1\"); \n const generateBtn = document.querySelector(\"button[type='submit']\"); \n+const upperCheckBox = document.querySelector(\"#upepr-checkbox\")\n \n \n // Dynamic Slider Bar\n function progressSlider() {\n"
                },
                {
                    "date": 1688755724443,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,10 @@\n const slider = document.querySelector(\"#character-length\");\n const lengthLabel = document.querySelector(\".length-label\"); \n const passwordLabel = document.querySelector(\".password-field h1\"); \n const generateBtn = document.querySelector(\"button[type='submit']\"); \n-const upperCheckBox = document.querySelector(\"#upepr-checkbox\")\n+const upperCheckBox = document.querySelector(\"#upepr-checkbox\"); \n+const lowerCheckBox = document.querySelector(\"#lower-checkbox\")\n \n \n // Dynamic Slider Bar\n function progressSlider() {\n"
                },
                {
                    "date": 1688755729706,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,10 +5,11 @@\n const slider = document.querySelector(\"#character-length\");\n const lengthLabel = document.querySelector(\".length-label\"); \n const passwordLabel = document.querySelector(\".password-field h1\"); \n const generateBtn = document.querySelector(\"button[type='submit']\"); \n-const upperCheckBox = document.querySelector(\"#upepr-checkbox\"); \n+const upperCheckBox = document.querySelector(\"#upper-checkbox\"); \n const lowerCheckBox = document.querySelector(\"#lower-checkbox\")\n+const \n \n \n // Dynamic Slider Bar\n function progressSlider() {\n"
                },
                {
                    "date": 1688755753652,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n const passwordLabel = document.querySelector(\".password-field h1\"); \n const generateBtn = document.querySelector(\"button[type='submit']\"); \n const upperCheckBox = document.querySelector(\"#upper-checkbox\"); \n const lowerCheckBox = document.querySelector(\"#lower-checkbox\")\n-const \n+const numberCheckBox = document.querySelector(\"#number-checkbox\")\n \n \n // Dynamic Slider Bar\n function progressSlider() {\n"
                },
                {
                    "date": 1688755775423,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,10 +6,11 @@\n const lengthLabel = document.querySelector(\".length-label\"); \n const passwordLabel = document.querySelector(\".password-field h1\"); \n const generateBtn = document.querySelector(\"button[type='submit']\"); \n const upperCheckBox = document.querySelector(\"#upper-checkbox\"); \n-const lowerCheckBox = document.querySelector(\"#lower-checkbox\")\n-const numberCheckBox = document.querySelector(\"#number-checkbox\")\n+const lowerCheckBox = document.querySelector(\"#lower-checkbox\"); \n+const numberCheckBox = document.querySelector(\"#number-checkbox\"); \n+const symbolCheckBox = document.querySelector(\"#symbolChe\")\n \n \n // Dynamic Slider Bar\n function progressSlider() {\n"
                },
                {
                    "date": 1688755789507,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n const generateBtn = document.querySelector(\"button[type='submit']\"); \n const upperCheckBox = document.querySelector(\"#upper-checkbox\"); \n const lowerCheckBox = document.querySelector(\"#lower-checkbox\"); \n const numberCheckBox = document.querySelector(\"#number-checkbox\"); \n-const symbolCheckBox = document.querySelector(\"#symbolChe\")\n+const symbolCheckBox = document.querySelector(\"#symbol-checkbox\")\n \n \n // Dynamic Slider Bar\n function progressSlider() {\n"
                },
                {
                    "date": 1688755826275,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,8 +5,9 @@\n const slider = document.querySelector(\"#character-length\");\n const lengthLabel = document.querySelector(\".length-label\"); \n const passwordLabel = document.querySelector(\".password-field h1\"); \n const generateBtn = document.querySelector(\"button[type='submit']\"); \n+\n const upperCheckBox = document.querySelector(\"#upper-checkbox\"); \n const lowerCheckBox = document.querySelector(\"#lower-checkbox\"); \n const numberCheckBox = document.querySelector(\"#number-checkbox\"); \n const symbolCheckBox = document.querySelector(\"#symbol-checkbox\")\n"
                },
                {
                    "date": 1688755880818,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -113,8 +113,9 @@\n \n generateBtn.addEventListener(\"click\", () => {\n     let password = generatePassword()\n     passwordLabel.textContent = password; \n+    upperCheckBox.checked = \n \n })\n \n \n"
                },
                {
                    "date": 1688755902015,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -113,9 +113,8 @@\n \n generateBtn.addEventListener(\"click\", () => {\n     let password = generatePassword()\n     passwordLabel.textContent = password; \n-    upperCheckBox.checked = \n \n })\n \n \n"
                },
                {
                    "date": 1688755907455,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -111,9 +111,9 @@\n     updateStrengthState(slider.value); \n })\n \n generateBtn.addEventListener(\"click\", () => {\n-    let password = generatePassword()\n+    let password = generatePassword(upperCheckBox.ariaChecked, )\n     passwordLabel.textContent = password; \n \n })\n \n"
                },
                {
                    "date": 1688755916763,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -111,9 +111,9 @@\n     updateStrengthState(slider.value); \n })\n \n generateBtn.addEventListener(\"click\", () => {\n-    let password = generatePassword(upperCheckBox.ariaChecked, )\n+    let password = generatePassword(upperCheckBox.checked, lowerCheckBox.checked, )\n     passwordLabel.textContent = password; \n \n })\n \n"
                },
                {
                    "date": 1688755925337,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -111,9 +111,9 @@\n     updateStrengthState(slider.value); \n })\n \n generateBtn.addEventListener(\"click\", () => {\n-    let password = generatePassword(upperCheckBox.checked, lowerCheckBox.checked, )\n+    let password = generatePassword(upperCheckBox.checked, lowerCheckBox.checked, numberCheckBox.checked, )\n     passwordLabel.textContent = password; \n \n })\n \n"
                },
                {
                    "date": 1688755932102,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -111,9 +111,9 @@\n     updateStrengthState(slider.value); \n })\n \n generateBtn.addEventListener(\"click\", () => {\n-    let password = generatePassword(upperCheckBox.checked, lowerCheckBox.checked, numberCheckBox.checked, )\n+    let password = generatePassword(upperCheckBox.checked, lowerCheckBox.checked, numberCheckBox.checked, symbolCheckBox.checked)\n     passwordLabel.textContent = password; \n \n })\n \n"
                },
                {
                    "date": 1688756048284,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,9 +61,9 @@\n \n \n function generateArray(low, high) {\n     let arr = []\n-    for(let i = low; low <= high;  i++) {\n+    for(let i = low; i <= high;  i++) {\n         arr.push(String.fromCharCode(i))\n     }\n     return arr; \n }\n@@ -111,9 +111,9 @@\n     updateStrengthState(slider.value); \n })\n \n generateBtn.addEventListener(\"click\", () => {\n-    let password = generatePassword(upperCheckBox.checked, lowerCheckBox.checked, numberCheckBox.checked, symbolCheckBox.checked)\n+    let password = generatePassword(upperCheckBox.checked, lowerCheckBox.checked, numberCheckBox.checked, symbolCheckBox.checked); \n     passwordLabel.textContent = password; \n \n })\n \n"
                },
                {
                    "date": 1688756094096,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -113,8 +113,9 @@\n \n generateBtn.addEventListener(\"click\", () => {\n     let password = generatePassword(upperCheckBox.checked, lowerCheckBox.checked, numberCheckBox.checked, symbolCheckBox.checked); \n     passwordLabel.textContent = password; \n+    console.log(password); \n \n })\n \n \n"
                },
                {
                    "date": 1688756120498,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -98,8 +98,9 @@\n         let randomNumber = Math.floor(Math.random() *  passwordArray.length); \n         password += passwordArray[randomNumber]; \n     }\n \n+    console.log(password)\n     return password\n \n }\n \n"
                },
                {
                    "date": 1688756229414,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -97,10 +97,8 @@\n     for(let i = 0; i < passwordArray.length; i++) {\n         let randomNumber = Math.floor(Math.random() *  passwordArray.length); \n         password += passwordArray[randomNumber]; \n     }\n-\n-    console.log(password)\n     return password\n \n }\n \n"
                },
                {
                    "date": 1688756238643,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -110,9 +110,9 @@\n     updateStrengthState(slider.value); \n })\n \n generateBtn.addEventListener(\"click\", () => {\n-    let password = generatePassword(upperCheckBox.checked, lowerCheckBox.checked, numberCheckBox.checked, symbolCheckBox.checked); \n+    let password = generatePassword(characterLength, upperCheckBox.checked, lowerCheckBox.checked, numberCheckBox.checked, symbolCheckBox.checked); \n     passwordLabel.textContent = password; \n     console.log(password); \n \n })\n"
                },
                {
                    "date": 1688756256870,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -110,9 +110,9 @@\n     updateStrengthState(slider.value); \n })\n \n generateBtn.addEventListener(\"click\", () => {\n-    let password = generatePassword(characterLength, upperCheckBox.checked, lowerCheckBox.checked, numberCheckBox.checked, symbolCheckBox.checked); \n+    let password = generatePassword(slider.value, upperCheckBox.checked, lowerCheckBox.checked, numberCheckBox.checked, symbolCheckBox.checked); \n     passwordLabel.textContent = password; \n     console.log(password); \n \n })\n"
                },
                {
                    "date": 1688756282123,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -112,12 +112,12 @@\n \n generateBtn.addEventListener(\"click\", () => {\n     let password = generatePassword(slider.value, upperCheckBox.checked, lowerCheckBox.checked, numberCheckBox.checked, symbolCheckBox.checked); \n     passwordLabel.textContent = password; \n-    console.log(password); \n-\n+  \n })\n \n+console.log(password); \n \n \n console.log(slider.value);\n \n"
                },
                {
                    "date": 1688756289099,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -112,12 +112,10 @@\n \n generateBtn.addEventListener(\"click\", () => {\n     let password = generatePassword(slider.value, upperCheckBox.checked, lowerCheckBox.checked, numberCheckBox.checked, symbolCheckBox.checked); \n     passwordLabel.textContent = password; \n-  \n })\n \n-console.log(password); \n \n \n console.log(slider.value);\n \n"
                },
                {
                    "date": 1688756322772,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -109,14 +109,14 @@\n     updateLengthLabel();\n     updateStrengthState(slider.value); \n })\n \n-generateBtn.addEventListener(\"click\", () => {\n+generateBtn.addEventListener(\"click\", (e) => {\n+    e.preventDefault(); \n     let password = generatePassword(slider.value, upperCheckBox.checked, lowerCheckBox.checked, numberCheckBox.checked, symbolCheckBox.checked); \n     passwordLabel.textContent = password; \n })\n \n \n-\n console.log(slider.value);\n \n \n"
                },
                {
                    "date": 1688756403293,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,9 +93,9 @@\n     if(symbolsFlag) {\n         passwordArray.push(symbolsList);\n     }\n \n-    for(let i = 0; i < passwordArray.length; i++) {\n+    for(let i = 0; i < characterLength.length; i++) {\n         let randomNumber = Math.floor(Math.random() *  passwordArray.length); \n         password += passwordArray[randomNumber]; \n     }\n     return password\n"
                },
                {
                    "date": 1688756409042,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,9 +93,9 @@\n     if(symbolsFlag) {\n         passwordArray.push(symbolsList);\n     }\n \n-    for(let i = 0; i < characterLength.length; i++) {\n+    for(let i = 0; i < characterLength; i++) {\n         let randomNumber = Math.floor(Math.random() *  passwordArray.length); \n         password += passwordArray[randomNumber]; \n     }\n     return password\n"
                },
                {
                    "date": 1688756568909,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,8 +93,10 @@\n     if(symbolsFlag) {\n         passwordArray.push(symbolsList);\n     }\n \n+    console.log(passwordArray)\n+\n     for(let i = 0; i < characterLength; i++) {\n         let randomNumber = Math.floor(Math.random() *  passwordArray.length); \n         password += passwordArray[randomNumber]; \n     }\n"
                },
                {
                    "date": 1688756617496,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,13 +93,14 @@\n     if(symbolsFlag) {\n         passwordArray.push(symbolsList);\n     }\n \n-    console.log(passwordArray)\n+    console.log(passwordArray);\n \n     for(let i = 0; i < characterLength; i++) {\n         let randomNumber = Math.floor(Math.random() *  passwordArray.length); \n         password += passwordArray[randomNumber]; \n+        console.log(password)\n     }\n     return password\n \n }\n"
                },
                {
                    "date": 1688756644225,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -97,8 +97,9 @@\n     console.log(passwordArray);\n \n     for(let i = 0; i < characterLength; i++) {\n         let randomNumber = Math.floor(Math.random() *  passwordArray.length); \n+        console.log(randomNumber)\n         password += passwordArray[randomNumber]; \n         console.log(password)\n     }\n     return password\n"
                },
                {
                    "date": 1688756702647,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -97,11 +97,9 @@\n     console.log(passwordArray);\n \n     for(let i = 0; i < characterLength; i++) {\n         let randomNumber = Math.floor(Math.random() *  passwordArray.length); \n-        console.log(randomNumber)\n-        password += passwordArray[randomNumber]; \n-        console.log(password)\n+        passwordArray[0]\n     }\n     return password\n \n }\n"
                },
                {
                    "date": 1688756776226,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -81,9 +81,9 @@\n         return password\n     }\n \n     if(upperFlag) {\n-        passwordArray.push(upperCharsList); \n+        passwordArray.concat(upperCharsList)\n     }\n     if(lowerFlag) {\n         passwordArray.push(lowerCharsList); \n     }\n"
                },
                {
                    "date": 1688756794470,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,22 +84,22 @@\n     if(upperFlag) {\n         passwordArray.concat(upperCharsList)\n     }\n     if(lowerFlag) {\n-        passwordArray.push(lowerCharsList); \n+        passwordArray.concat(lowerCharsList); \n     }\n     if(numberFlag) {\n-        passwordArray.push(numbersList); \n+        passwordArray.concat(numbersList); \n     }\n     if(symbolsFlag) {\n-        passwordArray.push(symbolsList);\n+        passwordArray.concat(symbolsList);\n     }\n \n     console.log(passwordArray);\n \n     for(let i = 0; i < characterLength; i++) {\n         let randomNumber = Math.floor(Math.random() *  passwordArray.length); \n-        passwordArray[0]\n+        password += passwordArray[randomNumber]\n     }\n     return password\n \n }\n"
                },
                {
                    "date": 1688756805672,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -97,10 +97,11 @@\n     console.log(passwordArray);\n \n     for(let i = 0; i < characterLength; i++) {\n         let randomNumber = Math.floor(Math.random() *  passwordArray.length); \n-        password += passwordArray[randomNumber]\n+        password += passwordArray[randomNumber];\n     }\n+    console.log(password)\n     return password\n \n }\n \n"
                },
                {
                    "date": 1688756849990,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -81,9 +81,9 @@\n         return password\n     }\n \n     if(upperFlag) {\n-        passwordArray.concat(upperCharsList)\n+        passwordArray.concat(upperCharsList); \n     }\n     if(lowerFlag) {\n         passwordArray.concat(lowerCharsList); \n     }\n@@ -99,9 +99,10 @@\n     for(let i = 0; i < characterLength; i++) {\n         let randomNumber = Math.floor(Math.random() *  passwordArray.length); \n         password += passwordArray[randomNumber];\n     }\n-    console.log(password)\n+    console.log(password);\n+    cons\n     return password\n \n }\n \n"
                },
                {
                    "date": 1688756865018,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -81,9 +81,9 @@\n         return password\n     }\n \n     if(upperFlag) {\n-        passwordArray.concat(upperCharsList); \n+        passwordArray = passwordArray.concat(upperCharsList); \n     }\n     if(lowerFlag) {\n         passwordArray.concat(lowerCharsList); \n     }\n"
                },
                {
                    "date": 1688756872078,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,9 +84,9 @@\n     if(upperFlag) {\n         passwordArray = passwordArray.concat(upperCharsList); \n     }\n     if(lowerFlag) {\n-        passwordArray.concat(lowerCharsList); \n+        passwordArray = passwordArray.concat(lowerCharsList); \n     }\n     if(numberFlag) {\n         passwordArray.concat(numbersList); \n     }\n"
                },
                {
                    "date": 1688756878352,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,9 +87,9 @@\n     if(lowerFlag) {\n         passwordArray = passwordArray.concat(lowerCharsList); \n     }\n     if(numberFlag) {\n-        passwordArray.concat(numbersList); \n+        passwordArray = passwordArray.concat(numbersList); \n     }\n     if(symbolsFlag) {\n         passwordArray.concat(symbolsList);\n     }\n"
                },
                {
                    "date": 1688756894946,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -90,9 +90,9 @@\n     if(numberFlag) {\n         passwordArray = passwordArray.concat(numbersList); \n     }\n     if(symbolsFlag) {\n-        passwordArray.concat(symbolsList);\n+        passwordArray = passwordArray.concat(symbolsList);\n     }\n \n     console.log(passwordArray);\n \n@@ -100,9 +100,8 @@\n         let randomNumber = Math.floor(Math.random() *  passwordArray.length); \n         password += passwordArray[randomNumber];\n     }\n     console.log(password);\n-    cons\n     return password\n \n }\n \n"
                },
                {
                    "date": 1688757148223,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -116,8 +116,9 @@\n generateBtn.addEventListener(\"click\", (e) => {\n     e.preventDefault(); \n     let password = generatePassword(slider.value, upperCheckBox.checked, lowerCheckBox.checked, numberCheckBox.checked, symbolCheckBox.checked); \n     passwordLabel.textContent = password; \n+    passwordLabel.style.overflow = \"hidden\"\n })\n \n \n console.log(slider.value);\n"
                },
                {
                    "date": 1688757167285,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -116,9 +116,9 @@\n generateBtn.addEventListener(\"click\", (e) => {\n     e.preventDefault(); \n     let password = generatePassword(slider.value, upperCheckBox.checked, lowerCheckBox.checked, numberCheckBox.checked, symbolCheckBox.checked); \n     passwordLabel.textContent = password; \n-    passwordLabel.style.overflow = \"hidden\"\n+    // passwordLabel.style.overflow = \"hidden\";\n })\n \n \n console.log(slider.value);\n"
                },
                {
                    "date": 1688757182514,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -116,9 +116,9 @@\n generateBtn.addEventListener(\"click\", (e) => {\n     e.preventDefault(); \n     let password = generatePassword(slider.value, upperCheckBox.checked, lowerCheckBox.checked, numberCheckBox.checked, symbolCheckBox.checked); \n     passwordLabel.textContent = password; \n-    // passwordLabel.style.overflow = \"hidden\";\n+    passwordLabel.style.overflow = \"hidden\";\n })\n \n \n console.log(slider.value);\n"
                },
                {
                    "date": 1688757218569,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,15 +93,12 @@\n     if(symbolsFlag) {\n         passwordArray = passwordArray.concat(symbolsList);\n     }\n \n-    console.log(passwordArray);\n-\n     for(let i = 0; i < characterLength; i++) {\n         let randomNumber = Math.floor(Math.random() *  passwordArray.length); \n         password += passwordArray[randomNumber];\n     }\n-    console.log(password);\n     return password\n \n }\n \n"
                },
                {
                    "date": 1688757274900,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -113,9 +113,9 @@\n generateBtn.addEventListener(\"click\", (e) => {\n     e.preventDefault(); \n     let password = generatePassword(slider.value, upperCheckBox.checked, lowerCheckBox.checked, numberCheckBox.checked, symbolCheckBox.checked); \n     passwordLabel.textContent = password; \n-    passwordLabel.style.overflow = \"hidden\";\n+   \n })\n \n \n console.log(slider.value);\n"
                },
                {
                    "date": 1688757328496,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -113,8 +113,9 @@\n generateBtn.addEventListener(\"click\", (e) => {\n     e.preventDefault(); \n     let password = generatePassword(slider.value, upperCheckBox.checked, lowerCheckBox.checked, numberCheckBox.checked, symbolCheckBox.checked); \n     passwordLabel.textContent = password; \n+    passwordLabel.classList.toggle()\n })\n \n \n console.log(slider.value);\n"
                },
                {
                    "date": 1688758171935,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,128 @@\n+// Generate Random Password() \n+// Copy Password \n+// Update UI for Strength State\n+\n+const slider = document.querySelector(\"#character-length\");\n+const lengthLabel = document.querySelector(\".length-label\"); \n+const passwordLabel = document.querySelector(\".password-field h1\"); \n+const generateBtn = document.querySelector(\"button[type='submit']\"); \n+const copiedText = document.querySelector(\".copied-Text\"); \n+\n+const upperCheckBox = document.querySelector(\"#upper-checkbox\"); \n+const lowerCheckBox = document.querySelector(\"#lower-checkbox\"); \n+const numberCheckBox = document.querySelector(\"#number-checkbox\"); \n+const symbolCheckBox = document.querySelector(\"#symbol-checkbox\")\n+\n+\n+// Dynamic Slider Bar\n+function progressSlider() {\n+    const sliderValue = slider.value; \n+    slider.style.background = `linear-gradient(to right, var(--neon-green) ${sliderValue}%, var(--very-dark-grey) ${sliderValue}%)`\n+}\n+// Character Length Label\n+function updateLengthLabel() {\n+    lengthLabel.textContent = slider.value; \n+}\n+\n+\n+function updateStrengthState(value) {\n+    // To Weak Password 1 - 5\n+    const columns = document.querySelectorAll(\".column\"); \n+    const strengthLabel = document.querySelector(\".strength-state h2\"); \n+    columns.forEach((element) => {\n+        element.classList.remove(\"weak\", \"medium\", \"strong\"); \n+    })\n+    if(value <= 5) {\n+        strengthLabel.textContent = \"TOO WEAK!\"; \n+        columns[0].classList.add(\"to-weak\"); \n+    } \n+    // Weak Password  5 - 10 \n+    else if(value >= 5 && value <= 10 ) {\n+        strengthLabel.textContent = \"WEAK!\"; \n+        columns[0].classList.add(\"weak\"); \n+        columns[1].classList.add(\"weak\"); \n+    }\n+    // Medium - 10 - 50 \n+    else if(value >= 10 && value <= 50 ) {\n+        strengthLabel.textContent = \"MEDIUM\"; \n+        columns[0].classList.add(\"medium\"); \n+        columns[1].classList.add(\"medium\"); \n+        columns[2].classList.add(\"medium\"); \n+    }\n+    // Strong - 50 - 100 \n+    else {\n+        strengthLabel.textContent = \"STRONG\"; \n+        columns[0].classList.add(\"strong\"); \n+        columns[1].classList.add(\"strong\"); \n+        columns[2].classList.add(\"strong\"); \n+        columns[3].classList.add(\"strong\"); \n+    }\n+\n+}\n+\n+\n+function generateArray(low, high) {\n+    let arr = []\n+    for(let i = low; i <= high;  i++) {\n+        arr.push(String.fromCharCode(i))\n+    }\n+    return arr; \n+}\n+\n+\n+function generatePassword(characterLength, upperFlag, lowerFlag, numberFlag, symbolsFlag) {\n+    let upperCharsList = generateArray(65,90); \n+    let lowerCharsList = generateArray(97,122); \n+    let numbersList = generateArray(48, 57); \n+    let symbolsList = generateArray(33,57).concat(generateArray(58,64)).concat(generateArray(91,96)).concat(generateArray(generateArray(123,126))); \n+    let password = \"\"; \n+    let passwordArray = []; \n+    characterLength = Number(characterLength); \n+    if(characterLength < 0) {\n+        return password\n+    }\n+\n+    if(upperFlag) {\n+        passwordArray = passwordArray.concat(upperCharsList); \n+    }\n+    if(lowerFlag) {\n+        passwordArray = passwordArray.concat(lowerCharsList); \n+    }\n+    if(numberFlag) {\n+        passwordArray = passwordArray.concat(numbersList); \n+    }\n+    if(symbolsFlag) {\n+        passwordArray = passwordArray.concat(symbolsList);\n+    }\n+\n+    for(let i = 0; i < characterLength; i++) {\n+        let randomNumber = Math.floor(Math.random() *  passwordArray.length); \n+        password += passwordArray[randomNumber];\n+    }\n+    return password\n+\n+}\n+\n+updateLengthLabel(); \n+progressSlider(); \n+slider.addEventListener(\"input\", () => {\n+    progressSlider(); \n+    updateLengthLabel();\n+    updateStrengthState(slider.value); \n+})\n+\n+generateBtn.addEventListener(\"click\", (e) => {\n+    e.preventDefault(); \n+    let password = generatePassword(slider.value, upperCheckBox.checked, lowerCheckBox.checked, numberCheckBox.checked, symbolCheckBox.checked); \n+    passwordLabel.textContent = password; \n+    passwordLabel.classList.add(\"toggleOpacity\");\n+\n+    navigator.clipboard.writeText(password).then(() => {\n+\n+    })\n+})\n+\n+\n+console.log(slider.value);\n+\n+\n"
                }
            ],
            "date": 1688667602706,
            "name": "Commit-0",
            "content": ""
        }
    ]
}